{"version":3,"sources":["src/cl.js"],"names":["namespace","ver","toLowerCase","console","log","cl","version","window","Utils","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","setTimeout","prototype","extend","child","parent","F","constructor","superclass","merge","obj1","obj2","ignoreProps","Array","i","length","this","p","hasOwnProperty","undefined","indexOf","Object","e","warn","colorLuminance","hex","lum","String","replace","c","rgb","parseInt","substr","Math","round","min","max","toString","distSq","x1","y1","x2","y2","distToSegmentSquared","pointX","pointY","l2","t","lineRectIntersect","rectX1","rectY1","rectX2","rectY2","lineX1","lineY1","lineX2","lineY2","minX","maxX","minY","maxY","dx","abs","a","b","tmp","pointInPoly","x","y","points","j","inside","Lang","current","get","strId","params","strings","str","en","errNoElements","errAxisHaveNoChart","errDelBaseAxis","errShapeNoParam","errUnknownEvent","errNoShapeClass","errShapeType","Consts","COLOR_BLACK","COLOR_WHITE","COLOR_GRAY","COLOR_RED","COLOR_GREEN","COLOR_BLUE","COLOR_LIGHTBLUE","FONT_SIZE","FONT_NAME","TWO_PI","PI","HALF_PI","RAD_TO_DEG","Color","_colors","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","feldspar","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslateblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","violetred","wheat","white","whitesmoke","yellow","yellowgreen","_defs","re","example","process","bits","fromString","colorName","toHex","r","g","toRGB","color","charAt","processor","exec","channels","isNaN","Tween","object","_easing","EASING_LINEAR","_startTime","_objectFrom","_objectTo","_updateFunc","_completeFunc","performance","Date","now","getTime","offset","timing","navigationStart","duration","delay","active","easing","easingFunc","to","obj","onUpdate","onComplete","start","items","push","stop","_process","time","_calcProps","call","progress","prop","v1","parseFloat","update","l","splice","EASING_QUADRATIC_IN","EASING_QUADRATIC_OUT","EASING_QUADRATIC_IN_OUT","EASING_ELASTIC_IN","k","s","asin","pow","sin","EASING_ELASTIC_OUT","EASING_ELASTIC_BACK_IN","EASING_ELASTIC_BACK_OUT","EASING_BOUNCE_IN","EASING_BOUNCE_OUT","Event","target","originalEvent","type","eventNames","click","doubleClick","mouseMove","mouseDown","mouseUp","shapeOver","shapeOut","select","deselect","dragStart","dragEnd","EventManager","chart","_event","_listeners","_hoveredShape","_pressedShape","_prevClickTime","_clickTimeout","_onMouseMoveListener","_onMouseMove","bind","_onMouseDownListener","_onMouseDown","_onMouseUpListener","_onMouseUp","name","_bindBaseEventListeners","mouseX","mouseY","_callListeners","_fillMouseCoords","hasListener","selector","shapeFromPoint","currentTarget","document","stopPropagation","shape","_requestClick","srcElement","rect","getBoundingClientRect","offsetX","clientX","left","offsetY","clientY","top","h","curTime","DOUBLE_CLICK_DELAY","clearTimeout","addEventListener","event","Error","removeEventListener","idx","eventName","xPos","yPos","tar","xAxis","toAxis","yAxis","el","screen","_unbindBaseEventListeners","destroy","Layer","options","visible","surface","Canvas","width","height","dirtyFlagName","show","hide","apply","_setDirtyFlag","redraw","_render","resize","Axis","axisManager","ticks","big","interval","size","align","opacity","first","last","small","margin","end","style","lineWidth","arrowSize","lineDash","title","font","labels","before","after","grid","dash","width4","toFixed","getTickInterval","setTickInterval","getTickIntervalSmall","setTickIntervalSmall","getTitleStyle","setTitleStyle","getTitleColor","setTitleColor","getTitleFont","setTitleFont","getTitleSize","setTitleSize","fontSile","getTitleAlign","setTitleAlign","setColor","getColor","getMargins","setMargins","setOffset","getOffset","getMax","getMin","setMax","setMin","setName","getName","canvas","o","isY","fix","resetTransform","setLineStyle","setFillColor","ctx","translate","toScreen","rotate","save","setLineDash","drawLine","restore","drawArrow","toS","isBig","gridMin","gridMax","gridOffset","floor","setAlpha","beginPath","arc","fill","globalAlpha","al","drawText","vab","vas","value","setLineWidth","w","getLineWidth","AxisManager","defineProperties","count","clear","add","axisOptions","axis","indexOrName","remove","_removeAxis","Background","url","pos","fit","FIT_ALL","fitToScreen","setImage","image","isLoaded","setFit","hRatio","vRatio","ratio","ax","ay","mx","my","imageW","imageH","holderW","holderH","FIT_STRETCH","FIT_FILL","clip","drawImage","Image","onload","src","FIT_NONE","_currentLineWidth","_pixelOffset","createElement","getContext","fillStyle","restoreLineFix","ignoreBlurFix","col","strokeStyle","text","valign","fontName","n","st","va","textBaseline","textAlign","fillText","rotation","len","arrowAngle","dy","aa","cos","moveTo","lineTo","closePath","drawRect","dontCreatePath","sx","sy","ex","ey","drawCircle","stroke","alpha","setTransform","draw","clearRect","parentNode","removeChild","Selector","draggable","hover","enabled","showHand","selection","multiple","_drag","prepared","bounds","lx","ly","layer","_rect","_hovers","_click","up","down","_onShapeOver","_onShapeOut","props","cursor","setCursor","_showHand","_resetCursor","_processDrag","shapes","events","DRAG_THRESOLD","_startDrag","res","clickedOnShape","hw","hh","rx","ry","shapesFromRect","_isDragged","tween","isAnimating","updateStatic","getSelection","enableMultiselect","disableMultiselect","enableDrag","disableDrag","currentItem","sel","getBounds","_renderSelection","Number","MAX_VALUE","MIN_VALUE","hitTestRect","shapesFromPoint","hitTest","getPixelArea","border","_renderHover","Shape","animProps","owner","id","borderColor","links","track","startSize","endSize","setHoverStyle","getHoverStyle","getCenterX","getCenterY","deltaX","deltaY","link","ids","v","changed","unlink","prevLength","onAnimationUpdate","animatedObj","startAnimation","animationSpeed","_this","animCount","rgbFrom","rgbTo","_color","color_r","color_g","color_b","_color2","color2","color2_r","color2_g","color2_b","_borderColor","borderColor_r","borderColor_g","borderColor_b","ShapeManager","ANIMATION_DURATION","ANIMATION_DELAY","stopAnimation","getId","setProps","newProps","animate","animationDuration","result","calcAnimProps","MAX_ANIMATED_ITEMS","getProps","dontStopTween","_shouldRedrawStatic","_animCount","_hash","zIndexUsage","centers","set","_endAnimation","zIndexSorter","zIndex","getNewId","eId","sort","_renderLinks","_renderCenters","_renderTracks","staticPass","lc","isStatic","toScreenX","toScreenY","tx","ty","hideCenters","showCenters","found","itemsMovOnTop","item","ShapeClass","allowAnimation","it","_removeItem","Bubble","cx","cy","cdx","cdy","cdsq","bx","by","Centroid","Rect","opt","borderRadius","thw","thh","gradient","createLinearGradient","addColorStop","Line","pointColor","pointColor2","HOVER_THRESHOLD","sqrt","pointColor_r","pointColor_g","pointColor_b","pointColor2_r","pointColor2_g","pointColor2_b","_pointColor","_pointColor2","r1","r2","rx1","rx2","ry1","ry2","ox","oy","size2","angle","atan2","PolyLine","_anim","pointsFrom","pointsTo","closedFrom","closedTo","closedWidth","delPoints","closed","dist","f","twicearea","px","py","lineJoin","Poly","area","ch","toAxisX","toAxisY","Chart","preloader","element","isDirty","_getIsDirty","_redrawRequested","_dirtyFlags","all","_renderFunc","offsetWidth","offsetHeight","classList","background","layers","appendChild","_clearDirtyFlags","shapeClass","addBubbles","addRects","addLines","addPolyLines","addPolys","addCentroids","showPreloader","offsetLeft","offsetTop","getAttribute","setAttribute","hidePreloader","getBackground","setBackground"],"mappings":"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","file":"src/cl.js","sourcesContent":["(function(namespace){\r\n\r\n    // Log current library version\r\n    var ver = \"{{package.json.version}}\";\r\n    if (ver !== \"{{Package.Json.Version}}\".toLowerCase()) console.log(\"%c ˖•● ChartLibrary v.\" + ver + \" ●•˖ \", 'background: #44A; color: #FFF');\r\n\r\n    /**\r\n     * @namespace {object} cl\r\n     * @description Global object which stores all chart classes\r\n     */\r\n    namespace.cl = {\r\n        version: \"{{package.json.version}}\"\r\n    };\r\n\r\n})(window);\n/**\r\n * @module sys/utils\r\n * @description Module describes utility functions\r\n * @author Anton Gnibeda\r\n */\r\n(function(namespace, window) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Utility class\r\n     * @memberof cl\r\n     * @constructor\r\n     * @namespace\r\n     */\r\n    function Utils() {\r\n        // Make requestAnimFrame request cross browser\r\n        window.requestAnimFrame = (function(){\r\n            return  window.requestAnimationFrame   ||\r\n                window.webkitRequestAnimationFrame ||\r\n                window.mozRequestAnimationFrame    ||\r\n                window.oRequestAnimationFrame      ||\r\n                window.msRequestAnimationFrame     ||\r\n                function(callback){\r\n                    window.setTimeout(callback, 1000 / 60);\r\n                };\r\n        })();\r\n    }\r\n\r\n    /**\r\n     * Inherits class\r\n     * @param {Function} child Child class\r\n     * @param {Function} parent Parent class\r\n     * @example\r\n     * cl.Utils.Extend(Cat, Animal)\r\n     */\r\n    Utils.prototype.extend = function(child, parent) {\r\n        var F = function() { };\r\n        F.prototype = parent.prototype;\r\n        child.prototype = new F();\r\n        child.prototype.constructor = child;\r\n        child.superclass = parent.prototype;\r\n    };\r\n\r\n    /**\r\n     * Merge all object properties to another. obj1 properties with same names will be overwritten from obj2\r\n     * @param {Object} obj1 Object to merge properties in\r\n     * @param {Object} obj2 Object to read properties from\r\n     * @param {Array} [ignoreProps] Names of properties that should be ignored\r\n     * @returns {Object} obj1 contains all properties from obj2\r\n     * @example\r\n     * // Simple merge\r\n     * var o1 = { a: 1, b: 2, o: { a: 1 } };\r\n     * var o2 = { a: 3, c: 3, o: { b: 5 } };\r\n     * var r = cl.Utils.merge(o1, o2);\r\n     * console.log(r); // { a: 3, b: 2, c: 3, o: { a: 1, b: 5 } }\r\n     *\r\n     * // Ignore id property\r\n     * var o1 = { id: 1 }\r\n     * var o2 = { id: 2, b: 3 }\r\n     * var r = cl.Utils.merge(o1, o2, \"id\");\r\n     * console.log(r); // { id: 1, b: 3 }\r\n     */\r\n    Utils.prototype.merge = function(obj1, obj2, ignoreProps) {\r\n        if (!obj2) return obj1;\r\n\r\n        // If object is array, construct new array and make clone\r\n        if (obj2.constructor === Array) {\r\n            obj1 = [];\r\n            for (var i = 0; i < obj2.length; i++) {\r\n                if (typeof obj2[i] === \"object\") obj1[i] = this.merge({}, obj2[i]); else obj1[i] = obj2[i];\r\n            }\r\n            return obj1;\r\n        }\r\n\r\n        // Copy all properties\r\n        for (var p in obj2) {\r\n            if (!obj2.hasOwnProperty(p)) continue;\r\n            if (obj2[p] === null) {\r\n                obj1[p] = null;\r\n                continue;\r\n            }\r\n            if (obj2[p] === undefined) {\r\n                obj1[p] = undefined;\r\n                continue;\r\n            }\r\n            if (ignoreProps && ignoreProps.indexOf(p) !== -1) continue;\r\n            try {\r\n                if (obj2[p].constructor == Object) obj1[p] = this.merge(obj1[p] || {}, obj2[p]);\r\n                    else if (obj2[p].constructor == Array) obj1[p] = this.merge(undefined, obj2[p], ignoreProps);\r\n                        else obj1[p] = obj2[p];\r\n            } catch (e) {\r\n                console.warn(\"Something go wrong during object merge\", obj1, 'to', obj2, \". Property\", p);\r\n                obj1[p] = obj2[p];\r\n            }\r\n        }\r\n        return obj1;\r\n    };\r\n\r\n    /**\r\n     * Makes color lighter or darker\r\n     * @param {string} hex Color\r\n     * @param {number} lum Luminance -1..1 in percent. Example: -0.2 is equal to 20% darker\r\n     * @returns {string} Processed color\r\n     * @example\r\n     * var c = cl.Utils.colorLuminance(\"#ff0080\", -0.5);\r\n     * console.log(c); // \"#800040\"\r\n     */\r\n    Utils.prototype.colorLuminance = function(hex, lum) {\r\n        // Validate hex string\r\n        hex = String(hex).replace(/[^0-9a-f]/gi, '');\r\n        if (hex.length < 6) hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\r\n        lum = lum || 0;\r\n\r\n        // Convert to decimal and change luminosity\r\n        var rgb = \"#\", c, i;\r\n        for (i = 0; i < 3; i++) {\r\n            c = parseInt(hex.substr(i * 2, 2), 16);\r\n            c = Math.round(Math.min(Math.max(0, c + (c * lum)), 255)).toString(16);\r\n            rgb += (\"00\" + c).substr(c.length);\r\n        }\r\n\r\n        return rgb;\r\n    };\r\n\r\n    /**\r\n     * Returns squared distance between two points\r\n     * @param {number} x1 First point X coordinate\r\n     * @param {number} y1 First point Y coordinate\r\n     * @param {number} x2 Second point X coordinate\r\n     * @param {number} y2 Second point Y coordinate\r\n     * @returns {number} Squared distance\r\n     * @example\r\n     * var d = cl.Utils.distSq(10, 10, 20, 20)\r\n     * console.log(d); // 200\r\n     */\r\n    Utils.prototype.distSq = function(x1, y1, x2, y2) {\r\n        return (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\r\n    };\r\n\r\n    /**\r\n     * Returns squared distance from point to line segment\r\n     * @param {number} pointX Point X coordinate\r\n     * @param {number} pointY Point Y coordinate\r\n     * @param {number} x1 Line first point X coordinate\r\n     * @param {number} y1 Line first point Y coordinate\r\n     * @param {number} x2 Line second point X coordinate\r\n     * @param {number} y2 Line second point Y coordinate\r\n     * @returns {number} Squared distance\r\n     * @example\r\n     * var d = cl.Utils.distToSegmentSquared(0, 0, -10, 10, 10, 10)\r\n     * console.log(d); // 100\r\n     */\r\n    Utils.prototype.distToSegmentSquared = function(pointX, pointY, x1, y1, x2, y2) {\r\n        var l2 = this.distSq(x1, y1, x2, y2);\r\n        if (l2 === 0) return this.distSq(pointX, pointY, x1, y1);\r\n        var t = ((pointX - x1) * (x2 - x1) + (pointY - y1) * (y2 - y1)) / l2;\r\n        if (t < 0) return this.distSq(pointX, pointY, x1, y1);\r\n        if (t > 1) return this.distSq(pointX, pointY, x2, y2);\r\n\r\n        return this.distSq(pointX, pointY, x1 + t * (x2 - x1), y1 + t * (y2 - y1));\r\n    };\r\n\r\n    /**\r\n     * Line rectangle intersection test\r\n     * @param {number} rectX1 Rectangle top-left point X coordinate\r\n     * @param {number} rectY1 Rectangle top-left point Y coordinate\r\n     * @param {number} rectX2 Rectangle bottom-right point X coordinate\r\n     * @param {number} rectY2 Rectangle bottom-right point Y coordinate\r\n     * @param {number} lineX1 Line fist point X coordinate\r\n     * @param {number} lineY1 Line fist point Y coordinate\r\n     * @param {number} lineX2 Line second point X coordinate\r\n     * @param {number} lineY2 Line second point Y coordinate\r\n     * @returns {boolean} Is intersecting or not\r\n     * @example\r\n     * var b = cl.Utils.lineRectIntersect(0, 0, 10, 10, -5, 5, 5, 5);\r\n     * console.log(b); // true\r\n     */\r\n    Utils.prototype.lineRectIntersect = function(rectX1, rectY1, rectX2, rectY2, lineX1, lineY1, lineX2, lineY2)\r\n    {\r\n        // Find min and max X for the segment\r\n        var minX = lineX1;\r\n        var maxX = lineX2;\r\n        if(lineX1 > lineX2) {\r\n            minX = lineX2;\r\n            maxX = lineX1;\r\n        }\r\n\r\n        // Find the intersection of the segment's and rectangle's x-projections\r\n        if(maxX > rectX2) maxX = rectX2;\r\n        if(minX < rectX1) minX = rectX1;\r\n        // If their projections do not intersect return false\r\n        if(minX > maxX) return false;\r\n\r\n        // Find corresponding min and max Y for min and max X we found before\r\n        var minY = lineY1;\r\n        var maxY = lineY2;\r\n        var dx = lineX2 - lineX1;\r\n        if(Math.abs(dx) > 0.0000001) {\r\n            var a = (lineY2 - lineY1) / dx;\r\n            var b = lineY1 - a * lineX1;\r\n            minY = a * minX + b;\r\n            maxY = a * maxX + b;\r\n        }\r\n        if(minY > maxY) {\r\n            var tmp = maxY;\r\n            maxY = minY;\r\n            minY = tmp;\r\n        }\r\n\r\n        // Find the intersection of the segment's and rectangle's y-projections\r\n        if(maxY > rectY2) maxY = rectY2;\r\n        if(minY < rectY1) minY = rectY1;\r\n\r\n        // If Y-projections do not intersect return false\r\n        return minY <= maxY;\r\n    };\r\n\r\n    /**\r\n     * Checks if point is inside polygon\r\n     * @param {number} x Point X coordinate\r\n     * @param {number} y Point Y coordinate\r\n     * @param {Array.<number>} points Points array: [x, y, x, y, x, y, ...]\r\n     * @returns {boolean} Is insude or not\r\n     * @example\r\n     * var inside = cl.Utils.pointInPoly(15, 15, [10, 10, 10, 20, 20, 20, 20, 10]);\r\n     * console.log(inside); // true\r\n     */\r\n    Utils.prototype.pointInPoly = function(x, y, points) {\r\n        var i, j;\r\n        var p = points;\r\n\r\n        // Check bounds first\r\n        var minX = p[0];\r\n        var maxX = p[0];\r\n        var minY = p[1];\r\n        var maxY = p[1];\r\n        for (i = 1; i < p.length; i += 2) {\r\n            minX = Math.min(p[i], minX);\r\n            maxX = Math.max(p[i], maxX);\r\n            minY = Math.min(p[i+1], minY);\r\n            maxY = Math.max(p[i+1], maxY);\r\n        }\r\n\r\n        if (x < minX || x > maxX || y < minY || y > maxY) return false;\r\n\r\n        // If point in bounds, check point inside poly\r\n        var inside = false;\r\n        for (i = 0, j = p.length / 2 - 1 ; i < p.length / 2; j = i++ ) {\r\n            if ((p[i * 2 + 1] > y ) != ( p[j * 2 + 1] > y ) && x < (p[j * 2] - p[i * 2]) * (y - p[i * 2 + 1]) / (p[j * 2 + 1] - p[i * 2 + 1]) + p[i * 2])\r\n                inside = !inside;\r\n        }\r\n\r\n        return inside;\r\n    };\r\n\r\n    namespace.Utils = new Utils();\r\n\r\n})(cl, window);\r\n\n/**\r\n * @module sys/lang\r\n * @description Module contains localization class\r\n * @author Anton Gnibeda\r\n */\r\n(function(namespace){\r\n    'use strict';\r\n\r\n    var current = \"en\";\r\n\r\n    /**\r\n     * Localization class\r\n     * @memberof cl\r\n     * @constructor\r\n     * @namespace\r\n     */\r\n    function Lang() {\r\n    }\r\n\r\n    /**\r\n     * Returns localized string by id\r\n     * @param {string} strId Id of sting to get\r\n     * @param {string|array} [params] Array of strings for replacement in template\r\n     * @returns {string}\r\n     * @example\r\n     * var msg = cl.Lang.get(\"errNoElements\");\r\n     * console.log(msg); // \"No element specified in options\"\r\n     *\r\n     * var msg = cl.Lang.get(\"errUnknownEvent\", \"test\");\r\n     * console.log(msg); // \"Unknown event 'test'\"\r\n     */\r\n    Lang.prototype.get = function(strId, params) {\r\n        if (!this.strings[current] || !this.strings[current][strId]) return strId;\r\n        var str = this.strings[current][strId] || strId;\r\n        if (params instanceof Array) {\r\n            for (var i = 0; i < params.length; i++) str = str.replace(\"%\" + (i+1).toString(), params[i]);\r\n        } else {\r\n            str = str.replace(\"%1\", params);\r\n        }\r\n        return str;\r\n    };\r\n\r\n    /**\r\n     * Contains all strings for all languages\r\n     * @type {object}\r\n     * @example\r\n     * // All strings for english language\r\n     * console.log(cl.Lang.en);\r\n     *\r\n     * // Add language\r\n     * cl.Lang.de = {}\r\n     *\r\n     * // Add strings to language\r\n     * cl.Langl.de.errNoElements = \"Kein element in pptionen angegeben\";\r\n     */\r\n    Lang.prototype.strings = {\r\n        en: {\r\n            errNoElements: \"No element specified in options\",\r\n            errAxisHaveNoChart: \"Trying to access axis with no parent chart\",\r\n            errDelBaseAxis: \"Can not delete base '%1' axis\",\r\n            errShapeNoParam: \"Can not create shape without '%1' parameter\",\r\n            errUnknownEvent: \"Unknown event '%1'\",\r\n            errNoShapeClass: \"Shape class is not specified\",\r\n            errShapeType: \"Can not add shape, because same shape with different type already exists\"\r\n        }\r\n    };\r\n\r\n    namespace.Lang = new Lang();\r\n\r\n})(cl);\n/**\r\n * @module sys/consts\r\n * @description Module describes constants\r\n * @author Anton Gnibeda\r\n */\r\n(function(namespace){\r\n    'use strict';\r\n\r\n    /**\r\n     * @namespace cl.Consts\r\n     */\r\n    var Consts = {\r\n\r\n        /////////////////////////////////// Colors ///////////////////////////////////////\r\n\r\n        /**\r\n         * Black color\r\n         * @memberof cl.Consts\r\n         * @type {string}\r\n         * @default \"#000000\"\r\n         */\r\n        COLOR_BLACK: \"#000000\",\r\n\r\n        /**\r\n         * White color\r\n         * @memberof cl.Consts\r\n         * @type {string}\r\n         * @default \"#FFFFFF\"\r\n         */\r\n        COLOR_WHITE: \"#FFFFFF\",\r\n\r\n        /**\r\n         * Gray color\r\n         * @memberof cl.Consts\r\n         * @type {string}\r\n         * @default \"#AAAAAA\"\r\n         */\r\n        COLOR_GRAY: \"#AAAAAA\",\r\n\r\n        /**\r\n         * Red color\r\n         * @memberof cl.Consts\r\n         * @type {string}\r\n         * @default \"#FF0000\"\r\n         */\r\n        COLOR_RED: \"#FF0000\",\r\n\r\n        /**\r\n         * Green color\r\n         * @memberof cl.Consts\r\n         * @type {string}\r\n         * @default \"#00FF00\"\r\n         */\r\n        COLOR_GREEN: \"#00FF00\",\r\n\r\n        /**\r\n         * Blue color\r\n         * @memberof cl.Consts\r\n         * @type {string}\r\n         * @default \"#0000FF\"\r\n         */\r\n        COLOR_BLUE: \"#0000FF\",\r\n\r\n        /**\r\n         * Light blue color\r\n         * @memberof cl.Consts\r\n         * @type {string}\r\n         * @default \"#AAAAFF\"\r\n         */\r\n        COLOR_LIGHTBLUE: \"#AAAAFF\",\r\n\r\n        /////////////////////////////////// Font settings ///////////////////////////////////////\r\n\r\n        /**\r\n         * Default font size\r\n         * @memberof cl.Consts\r\n         * @type {number}\r\n         * @default 14\r\n         */\r\n        FONT_SIZE: 14,\r\n\r\n        /**\r\n         * Default font name\r\n         * @memberof cl.Consts\r\n         * @type {string}\r\n         * @default \"Arial\"\r\n         */\r\n        FONT_NAME: \"Arial\",\r\n\r\n        /////////////////////////////////// Math consts ///////////////////////////////////////\r\n\r\n        /**\r\n         * Doubled PI - 360 degrees\r\n         * @memberof cl.Consts\r\n         * @type {number}\r\n         * @default 2 * Math.PI\r\n         */\r\n        TWO_PI: 2 * Math.PI,\r\n\r\n        /**\r\n         * PI divided by two - 90 degrees\r\n         * @memberof cl.Consts\r\n         * @type {number}\r\n         * @default Math.PI / 2\r\n         */\r\n        HALF_PI: Math.PI / 2,\r\n\r\n        /**\r\n         * Constant for radians to degrees conversion\r\n         * @memberof cl.Consts\r\n         * @type {number}\r\n         * @default Math.PI / 180\r\n         */\r\n        RAD_TO_DEG: Math.PI / 180\r\n    };\r\n\r\n    namespace.Consts = Consts;\r\n\r\n})(cl);\n/**\r\n * @module sys/color\r\n * @description Module describes class to working with color values and strings\r\n * @author Anton Gnibeda\r\n */\r\n(function(namespace){\r\n    'use strict';\r\n\r\n    /**\r\n     * Class for working with color values and strings\r\n     * @memberof cl\r\n     * @constructor\r\n     * @namespace\r\n     */\r\n    function Color() {\r\n        var t = this;\r\n        t._colors = {\r\n            aliceblue: 'f0f8ff',\r\n            antiquewhite: 'faebd7',\r\n            aqua: '00ffff',\r\n            aquamarine: '7fffd4',\r\n            azure: 'f0ffff',\r\n            beige: 'f5f5dc',\r\n            bisque: 'ffe4c4',\r\n            black: '000000',\r\n            blanchedalmond: 'ffebcd',\r\n            blue: '0000ff',\r\n            blueviolet: '8a2be2',\r\n            brown: 'a52a2a',\r\n            burlywood: 'deb887',\r\n            cadetblue: '5f9ea0',\r\n            chartreuse: '7fff00',\r\n            chocolate: 'd2691e',\r\n            coral: 'ff7f50',\r\n            cornflowerblue: '6495ed',\r\n            cornsilk: 'fff8dc',\r\n            crimson: 'dc143c',\r\n            cyan: '00ffff',\r\n            darkblue: '00008b',\r\n            darkcyan: '008b8b',\r\n            darkgoldenrod: 'b8860b',\r\n            darkgray: 'a9a9a9',\r\n            darkgreen: '006400',\r\n            darkkhaki: 'bdb76b',\r\n            darkmagenta: '8b008b',\r\n            darkolivegreen: '556b2f',\r\n            darkorange: 'ff8c00',\r\n            darkorchid: '9932cc',\r\n            darkred: '8b0000',\r\n            darksalmon: 'e9967a',\r\n            darkseagreen: '8fbc8f',\r\n            darkslateblue: '483d8b',\r\n            darkslategray: '2f4f4f',\r\n            darkturquoise: '00ced1',\r\n            darkviolet: '9400d3',\r\n            deeppink: 'ff1493',\r\n            deepskyblue: '00bfff',\r\n            dimgray: '696969',\r\n            dodgerblue: '1e90ff',\r\n            feldspar: 'd19275',\r\n            firebrick: 'b22222',\r\n            floralwhite: 'fffaf0',\r\n            forestgreen: '228b22',\r\n            fuchsia: 'ff00ff',\r\n            gainsboro: 'dcdcdc',\r\n            ghostwhite: 'f8f8ff',\r\n            gold: 'ffd700',\r\n            goldenrod: 'daa520',\r\n            gray: '808080',\r\n            green: '008000',\r\n            greenyellow: 'adff2f',\r\n            honeydew: 'f0fff0',\r\n            hotpink: 'ff69b4',\r\n            indianred : 'cd5c5c',\r\n            indigo : '4b0082',\r\n            ivory: 'fffff0',\r\n            khaki: 'f0e68c',\r\n            lavender: 'e6e6fa',\r\n            lavenderblush: 'fff0f5',\r\n            lawngreen: '7cfc00',\r\n            lemonchiffon: 'fffacd',\r\n            lightblue: 'add8e6',\r\n            lightcoral: 'f08080',\r\n            lightcyan: 'e0ffff',\r\n            lightgoldenrodyellow: 'fafad2',\r\n            lightgrey: 'd3d3d3',\r\n            lightgreen: '90ee90',\r\n            lightpink: 'ffb6c1',\r\n            lightsalmon: 'ffa07a',\r\n            lightseagreen: '20b2aa',\r\n            lightskyblue: '87cefa',\r\n            lightslateblue: '8470ff',\r\n            lightslategray: '778899',\r\n            lightsteelblue: 'b0c4de',\r\n            lightyellow: 'ffffe0',\r\n            lime: '00ff00',\r\n            limegreen: '32cd32',\r\n            linen: 'faf0e6',\r\n            magenta: 'ff00ff',\r\n            maroon: '800000',\r\n            mediumaquamarine: '66cdaa',\r\n            mediumblue: '0000cd',\r\n            mediumorchid: 'ba55d3',\r\n            mediumpurple: '9370d8',\r\n            mediumseagreen: '3cb371',\r\n            mediumslateblue: '7b68ee',\r\n            mediumspringgreen: '00fa9a',\r\n            mediumturquoise: '48d1cc',\r\n            mediumvioletred: 'c71585',\r\n            midnightblue: '191970',\r\n            mintcream: 'f5fffa',\r\n            mistyrose: 'ffe4e1',\r\n            moccasin: 'ffe4b5',\r\n            navajowhite: 'ffdead',\r\n            navy: '000080',\r\n            oldlace: 'fdf5e6',\r\n            olive: '808000',\r\n            olivedrab: '6b8e23',\r\n            orange: 'ffa500',\r\n            orangered: 'ff4500',\r\n            orchid: 'da70d6',\r\n            palegoldenrod: 'eee8aa',\r\n            palegreen: '98fb98',\r\n            paleturquoise: 'afeeee',\r\n            palevioletred: 'd87093',\r\n            papayawhip: 'ffefd5',\r\n            peachpuff: 'ffdab9',\r\n            peru: 'cd853f',\r\n            pink: 'ffc0cb',\r\n            plum: 'dda0dd',\r\n            powderblue: 'b0e0e6',\r\n            purple: '800080',\r\n            red: 'ff0000',\r\n            rosybrown: 'bc8f8f',\r\n            royalblue: '4169e1',\r\n            saddlebrown: '8b4513',\r\n            salmon: 'fa8072',\r\n            sandybrown: 'f4a460',\r\n            seagreen: '2e8b57',\r\n            seashell: 'fff5ee',\r\n            sienna: 'a0522d',\r\n            silver: 'c0c0c0',\r\n            skyblue: '87ceeb',\r\n            slateblue: '6a5acd',\r\n            slategray: '708090',\r\n            snow: 'fffafa',\r\n            springgreen: '00ff7f',\r\n            steelblue: '4682b4',\r\n            tan: 'd2b48c',\r\n            teal: '008080',\r\n            thistle: 'd8bfd8',\r\n            tomato: 'ff6347',\r\n            turquoise: '40e0d0',\r\n            violet: 'ee82ee',\r\n            violetred: 'd02090',\r\n            wheat: 'f5deb3',\r\n            white: 'ffffff',\r\n            whitesmoke: 'f5f5f5',\r\n            yellow: 'ffff00',\r\n            yellowgreen: '9acd32'\r\n        };\r\n\r\n        t._defs = [\r\n            {\r\n                re: /^rgba\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d*\\.?\\d*)\\)$/,\r\n                example: ['rgba(123, 234, 45, 255)', 'rgba(255,234,245,255)'],\r\n                process: function (bits){\r\n                    return [\r\n                        parseInt(bits[1]),\r\n                        parseInt(bits[2]),\r\n                        parseInt(bits[3])\r\n                    ];\r\n                }\r\n            },\r\n            {\r\n                re: /^rgb\\((\\d{1,3}),\\s*(\\d{1,3}),\\s*(\\d{1,3})\\)$/,\r\n                example: ['rgb(123, 234, 45)', 'rgb(255,234,245)'],\r\n                process: function (bits){\r\n                    return [\r\n                        parseInt(bits[1]),\r\n                        parseInt(bits[2]),\r\n                        parseInt(bits[3])\r\n                    ];\r\n                }\r\n            },\r\n            {\r\n                re: /^(\\w{2})(\\w{2})(\\w{2})$/,\r\n                example: ['#00ff00', '336699'],\r\n                process: function (bits){\r\n                    return [\r\n                        parseInt(bits[1], 16),\r\n                        parseInt(bits[2], 16),\r\n                        parseInt(bits[3], 16)\r\n                    ];\r\n                }\r\n            },\r\n            {\r\n                re: /^(\\w)(\\w)(\\w)$/,\r\n                example: ['#fb0', 'f0f'],\r\n                process: function (bits){\r\n                    return [\r\n                        parseInt(bits[1] + bits[1], 16),\r\n                        parseInt(bits[2] + bits[2], 16),\r\n                        parseInt(bits[3] + bits[3], 16)\r\n                    ];\r\n                }\r\n            }\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * Converts color name to hex color string\r\n     * @param {string} colorName Color name\r\n     * @returns {string} Color hex string\r\n     * @example\r\n     * var c = cl.Color.fromString(\"red\");\r\n     * console.log(c); // \"#ff0000\"\r\n     * c = cl.Color.fromString(\"saddlebrown\");\r\n     * console.log(c); // \"#8b4513\"\r\n     */\r\n    Color.prototype.fromString = function(colorName) {\r\n        var t = this;\r\n        if (t._colors[colorName]) return \"#\" + t._colors[colorName];\r\n        return colorName;\r\n    };\r\n\r\n    /**\r\n     * Convert RGB values to hex color string\r\n     * @param {number} red Red value [0..255]\r\n     * @param {number} green Green value [0..255]\r\n     * @param {number} blue Blue value [0..255]\r\n     * @returns {string} Color hex string\r\n     * @example\r\n     * var c = cl.Color.toHex(255, 128, 0);\r\n     * console.log(c); // \"#ff8000\"\r\n     */\r\n    Color.prototype.toHex = function (red, green, blue) {\r\n        var r, g, b;\r\n        r = red.toString(16);\r\n        g = green.toString(16);\r\n        b = blue.toString(16);\r\n        if (r.length == 1) r = '0' + r;\r\n        if (g.length == 1) g = '0' + g;\r\n        if (b.length == 1) b = '0' + b;\r\n        return '#' + r + g + b;\r\n    };\r\n\r\n    /**\r\n     * Converts color hex string or color name to RGB values\r\n     * @param {string} color Color hex string or color name\r\n     * @returns {{r: number, g: number, b: number}} rgb RGB values\r\n     * @example\r\n     * var v = cl.Color.toRGB(\"red\");\r\n     * console.log(v); // {r: 255, g: 0, b: 0}\r\n     * v = cl.Color.toRGB(\"#8000FF\");\r\n     * console.log(v); // {r: 128, g: 0, b: 255}\r\n     */\r\n    Color.prototype.toRGB = function (color) {\r\n        var t = this;\r\n        // Strip any leading #\r\n        if (color.charAt(0) == '#') color = color.substr(1,6);\r\n        color = color.replace(/ /g,'').toLowerCase();\r\n        // Find by name if exists\r\n        if (t._colors[color]) color = t._colors[color];\r\n\r\n        var r, g, b;\r\n        for (var i = 0; i < t._defs.length; i++) {\r\n            var re = t._defs[i].re;\r\n            var processor = t._defs[i].process;\r\n            var bits = re.exec(color);\r\n            if (bits) {\r\n                var channels = processor(bits);\r\n                r = channels[0];\r\n                g = channels[1];\r\n                b = channels[2];\r\n            }\r\n        }\r\n\r\n        // Validate/cleanup values\r\n        r = (r < 0 || isNaN(r)) ? 0 : ((r > 255) ? 255 : r);\r\n        g = (g < 0 || isNaN(g)) ? 0 : ((g > 255) ? 255 : g);\r\n        b = (b < 0 || isNaN(b)) ? 0 : ((b > 255) ? 255 : b);\r\n\r\n        return {r: r, g: g, b: b};\r\n    };\r\n\r\n    namespace.Color = new Color();\r\n\r\n})(cl);\n/**\r\n * @module sys/tween\r\n * @description Module describes tween class\r\n * @author Anton Gnibeda\r\n */\r\n(function(namespace) {\r\n    'use strict';\r\n\r\n    // Performance.now polyfill\r\n    (function () {\r\n        if ('performance' in window === false) {\r\n            window.performance = {};\r\n        }\r\n        // IE 8\r\n        Date.now = (Date.now || function () {\r\n            return new Date().getTime();\r\n        });\r\n        if ('now' in window.performance === false) {\r\n            var offset = window.performance.timing && window.performance.timing.navigationStart ? window.performance.timing.navigationStart : Date.now();\r\n            window.performance.now = function () {\r\n                return Date.now() - offset;\r\n            };\r\n        }\r\n    })();\r\n\r\n    /**\r\n     * Twee class. Used for animations\r\n     * @param {Object} object Object to animate\r\n     * @constructor\r\n     * @memberOf cl\r\n     *\r\n     * @example\r\n     * var t = new cl.Tween(obj)\r\n     *                   .to({value: 100}, 1000)\r\n     *                   .easing(cl.Tween.EASING_QUADRATIC_OUT)\r\n     *                   .delay(100)\r\n     *                   .onUpdate(function (time) {\r\n     *                        // Custom update code here\r\n     *                    })\r\n     *                   .onComplete(function (time) {\r\n     *                        // Complete code here\r\n     *                    })\r\n     *                   .start();\r\n     * // Don't forget to call cl.Tween.Update() in requestAnimationFrame\r\n     */\r\n    function Tween(object) {\r\n        var t = this;\r\n\r\n        // Private\r\n        t._easing = Tween.EASING_LINEAR;\r\n        t._startTime = 0;\r\n        t._objectFrom = cl.Utils.merge({}, object);\r\n        t._objectTo = null;\r\n        t._updateFunc = null;\r\n        t._completeFunc = null;\r\n\r\n        t.object = object;\r\n    }\r\n\r\n    /**\r\n     * Animated object\r\n     * @type {Object}\r\n     */\r\n    Tween.prototype.object = null;\r\n\r\n    /**\r\n     * Animation duration\r\n     * @type {number}\r\n     */\r\n    Tween.prototype.duration = 0;\r\n\r\n    /**\r\n     * Animation delay\r\n     * @type {number}\r\n     */\r\n    Tween.prototype.delay = 0;\r\n\r\n    /**\r\n     * Is tween active(animating)\r\n     * @type {boolean}\r\n     */\r\n    Tween.prototype.active = false;\r\n\r\n    /**\r\n     * Sets easing function\r\n     * @param {function} easingFunc Easing function\r\n     * @returns {cl.Tween}\r\n     * @example\r\n     * var tween = new cl.Tween(obj).easing(cl.Tween.EASING_BOUNCE_OUT);\r\n     */\r\n    Tween.prototype.easing = function(easingFunc) {\r\n        this._easing = easingFunc;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Sets properties to wich tween should animate\r\n     * @param {Object} obj Object with end phase properties\r\n     * @param {number} duration Animation duration in ms\r\n     * @returns {cl.Tween}\r\n     */\r\n    Tween.prototype.to = function(obj, duration) {\r\n        this._objectTo = cl.Utils.merge({}, obj);\r\n        this.duration = duration;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Sets tween delay\r\n     * @param {number} delay Tween delay in ms\r\n     * @returns {cl.Tween}\r\n     */\r\n    Tween.prototype.delay = function(delay) {\r\n        this.delay = delay;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Sets update callback\r\n     * @param {function} callback\r\n     * @returns {cl.Tween}\r\n     */\r\n    Tween.prototype.onUpdate = function(callback) {\r\n        this._updateFunc = callback;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Sets complete callback\r\n     * @param {function} callback\r\n     * @returns {cl.Tween}\r\n     */\r\n    Tween.prototype.onComplete = function(callback) {\r\n        this._completeFunc = callback;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Starts tween\r\n     * @returns {cl.Tween}\r\n     */\r\n    Tween.prototype.start = function() {\r\n        var t = this;\r\n        t.active = true;\r\n        t._startTime = undefined;\r\n\r\n        // Add tween to global tweens array\r\n        if (Tween.items.indexOf(this) === -1) Tween.items.push(this);\r\n\r\n        return t;\r\n    };\r\n\r\n    /**\r\n     * Stops tween\r\n     * @returns {cl.Tween}\r\n     */\r\n    Tween.prototype.stop = function() {\r\n        var t = this;\r\n\r\n        t.active = false;\r\n\r\n        t.object = undefined;\r\n        t._startTime = undefined;\r\n        t._objectFrom = undefined;\r\n        t._objectTo = undefined;\r\n\r\n        return t;\r\n    };\r\n\r\n    /**\r\n     * Process tween\r\n     * @param {number} time Time\r\n     * @private\r\n     */\r\n    Tween.prototype._process = function(time) {\r\n        var t = this;\r\n        if (t._startTime === undefined) t._startTime = time;\r\n        var p = time - t._startTime - t.delay;\r\n\r\n        // Exit if tween with delay\r\n        if (p < 0) return;\r\n\r\n        // Check if duration is zero. Tween should stops immediately\r\n        if (t.duration <= 0) {\r\n            t._calcProps(1);\r\n            if (t._updateFunc) t._updateFunc(1);\r\n            t.stop();\r\n            return;\r\n        }\r\n\r\n        // Limit time to duration\r\n        if (p > t.duration) p = t.duration;\r\n\r\n        // Calc properties\r\n        t._calcProps(p / t.duration);\r\n        if (t._updateFunc) t._updateFunc.call(t.object, p / t.duration);\r\n\r\n        // Check for completion\r\n        if (p === t.duration) {\r\n            if (t._completeFunc) t._completeFunc.call(t.object);\r\n            t.stop();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Calculate properties values\r\n     * @param {number} progress Tween progress [0..1]\r\n     * @private\r\n     */\r\n    Tween.prototype._calcProps = function(progress) {\r\n        var t = this;\r\n        progress = t._easing(progress);\r\n        for (var prop in t._objectTo) {\r\n            if (!t._objectTo.hasOwnProperty(prop)) continue;\r\n\r\n            // Only number properties are supported\r\n            if (typeof t._objectTo[prop] === \"number\") {\r\n                var v1  = parseFloat(t._objectFrom[prop] || 0);\r\n                t.object[prop] = v1 + (t._objectTo[prop] - v1) * progress;\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * All currently active tweens\r\n     * @type {Array.<cl.Tween>}\r\n     */\r\n    Tween.items = [];\r\n\r\n    /**\r\n     * Updates all tweens\r\n     * @param {number} [time] Time\r\n     */\r\n    Tween.update = function(time) {\r\n        var i, l;\r\n\r\n        // Get time if not specified(in Safari)\r\n        time = time !== undefined ? time : window.performance.now();\r\n\r\n        // Process all active tweens\r\n        for (i = 0, l = Tween.items.length; i < l; i++) if (Tween.items[i].active) Tween.items[i]._process(time);\r\n\r\n        // Remove all inactive tweens\r\n        i = 0;\r\n        while (i < Tween.items.length) {\r\n            if (!Tween.items[i].active) Tween.items.splice(i, 1); else i++;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Tween easing function\r\n     * @param {number} p Progress value\r\n     * @returns {number} Calculated progress value\r\n     * @const\r\n     */\r\n    Tween.EASING_LINEAR = function(p) {\r\n        return p;\r\n    };\r\n\r\n    /**\r\n     * Tween easing function\r\n     * @param {number} p Progress value\r\n     * @returns {number} Calculated progress value\r\n     * @const\r\n     */\r\n    Tween.EASING_QUADRATIC_IN = function(p) {\r\n        return p * p;\r\n    };\r\n\r\n    /**\r\n     * Tween easing function\r\n     * @param {number} p Progress value\r\n     * @returns {number} Calculated progress value\r\n     * @const\r\n     */\r\n    Tween.EASING_QUADRATIC_OUT = function(p) {\r\n        return p * (2 - p);\r\n    };\r\n\r\n    /**\r\n     * Tween easing function\r\n     * @param {number} p Progress value\r\n     * @returns {number} Calculated progress value\r\n     * @const\r\n     */\r\n    Tween.EASING_QUADRATIC_IN_OUT = function(p) {\r\n        if ((p *= 2) < 1) return 0.5 * p * p;\r\n        return - 0.5 * (--p * (p - 2) - 1);\r\n    };\r\n\r\n    /**\r\n     * Tween easing function\r\n     * @param {number} k Progress value\r\n     * @returns {number} Calculated progress value\r\n     * @const\r\n     */\r\n    Tween.EASING_ELASTIC_IN = function (k) {\r\n        var s;\r\n        var a = 0.1;\r\n        var p = 0.4;\r\n\r\n        if (k === 0) return 0;\r\n        if (k === 1) return 1;\r\n\r\n        if (!a || a < 1) {\r\n            a = 1;\r\n            s = p / 4;\r\n        } else {\r\n            s = p * Math.asin(1 / a) / (2 * Math.PI);\r\n        }\r\n\r\n        return -(a * Math.pow(2, 10 * (k -= 1)) * Math.sin((k - s) * (2 * Math.PI) / p));\r\n    };\r\n\r\n    /**\r\n     * Tween easing function\r\n     * @param {number} k Progress value\r\n     * @returns {number} Calculated progress value\r\n     * @const\r\n     */\r\n    Tween.EASING_ELASTIC_OUT = function (k) {\r\n        var s;\r\n        var a = 0.1;\r\n        var p = 0.4;\r\n\r\n        if (k === 0) return 0;\r\n        if (k === 1) return 1;\r\n\r\n        if (!a || a < 1) {\r\n            a = 1;\r\n            s = p / 4;\r\n        } else {\r\n            s = p * Math.asin(1 / a) / (2 * Math.PI);\r\n        }\r\n\r\n        return (a * Math.pow(2, -10 * k) * Math.sin((k - s) * (2 * Math.PI) / p) + 1);\r\n    };\r\n\r\n    /**\r\n     * Tween easing function\r\n     * @param {number} k Progress value\r\n     * @returns {number} Calculated progress value\r\n     * @const\r\n     */\r\n    Tween.EASING_ELASTIC_BACK_IN = function (k) {\r\n        var s = 1.70158;\r\n        return k * k * ((s + 1) * k - s);\r\n\r\n    };\r\n\r\n    /**\r\n     * Tween easing function\r\n     * @param {number} k Progress value\r\n     * @returns {number} Calculated progress value\r\n     * @const\r\n     */\r\n    Tween.EASING_ELASTIC_BACK_OUT = function (k) {\r\n        var s = 1.70158;\r\n        return --k * k * ((s + 1) * k + s) + 1;\r\n    };\r\n\r\n\r\n    /**\r\n     * Tween easing function\r\n     * @param {number} k Progress value\r\n     * @returns {number} Calculated progress value\r\n     * @const\r\n     */\r\n    Tween.EASING_BOUNCE_IN = function (k) {\r\n        return 1 - Tween.EASING_ELASTIC_BACK_OUT(1 - k);\r\n    };\r\n\r\n    /**\r\n     * Tween easing function\r\n     * @param {number} k Progress value\r\n     * @returns {number} Calculated progress value\r\n     * @const\r\n     */\r\n    Tween.EASING_BOUNCE_OUT = function (k) {\r\n        if (k < (1 / 2.75)) {\r\n            return 7.5625 * k * k;\r\n        } else if (k < (2 / 2.75)) {\r\n            return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\r\n        } else if (k < (2.5 / 2.75)) {\r\n            return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\r\n        } else {\r\n            return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\r\n        }\r\n    };\r\n\r\n    namespace.Tween = Tween;\r\n\r\n})(cl);\n/**\r\n * @module events/event\r\n * @description Module contains event class and event names constants.\r\n * @author Anton Gnibeda\r\n */\r\n(function(namespace) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Represent event class\r\n     * @memberof cl\r\n     * @constructor\r\n     */\r\n    function Event() {\r\n    }\r\n\r\n    /**\r\n     * X coordinate in chart space\r\n     * @type {null}\r\n     */\r\n    Event.prototype.x = null;\r\n\r\n    /**\r\n     * Y coordinate in chart space\r\n     * @type {number}\r\n     */\r\n    Event.prototype.y = null;\r\n\r\n    /**\r\n     * Shapes affected by event\r\n     * @type {cl.Shape|Array.<cl.Shape>}\r\n     */\r\n    Event.prototype.target = null;\r\n\r\n    /**\r\n     * Original event\r\n     * @type {Object}\r\n     */\r\n    Event.prototype.originalEvent = null;\r\n\r\n    /**\r\n     * Event type. See event names below\r\n     * @type {string}\r\n     */\r\n    Event.prototype.type = null;\r\n\r\n    /**\r\n     * Define allowed event names\r\n     */\r\n    var eventNames = {\r\n        /**\r\n         * Name for click event\r\n         * @default \"click\"\r\n         * @memberOf cl.Event\r\n         */\r\n        click: \"click\",\r\n\r\n        /**\r\n         * Name for double click event\r\n         * @default \"dblclick\"\r\n         * @memberOf cl.Event\r\n         */\r\n        doubleClick: \"dblclick\",\r\n\r\n        /**\r\n         * Name for mouse move event\r\n         * @default \"mousemove\"\r\n         * @memberOf cl.Event\r\n         */\r\n        mouseMove: \"mousemove\",\r\n\r\n        /**\r\n         * Name for mouse down event\r\n         * @default \"mousedown\"\r\n         * @memberOf cl.Event\r\n         */\r\n        mouseDown: \"mousedown\",\r\n\r\n        /**\r\n         * Name for mouse up event\r\n         * @default \"mouseup\"\r\n         * @memberOf cl.Event\r\n         */\r\n        mouseUp: \"mouseup\",\r\n\r\n        /**\r\n         * Name for shape over event\r\n         * @default \"shapeover\"\r\n         * @memberOf cl.Event\r\n         */\r\n        shapeOver: \"shapeover\",\r\n\r\n        /**\r\n         * Name for shape out event\r\n         * @default \"shapeout\"\r\n         * @memberOf cl.Event\r\n         */\r\n        shapeOut: \"shapeout\",\r\n\r\n        /**\r\n         * Name for shape select event\r\n         * @default \"select\"\r\n         * @memberOf cl.Event\r\n         */\r\n        select: \"select\",\r\n\r\n        /**\r\n         * Name for shape deselect event\r\n         * @default \"deselect\"\r\n         * @memberOf cl.Event\r\n         */\r\n        deselect: \"deselect\",\r\n\r\n        /**\r\n         * Name for drag start event\r\n         * @default \"dragstart\"\r\n         * @memberOf cl.Event\r\n         */\r\n        dragStart: \"dragstart\",\r\n\r\n        /**\r\n         * Name for drag end event\r\n         * @default \"dragend\"\r\n         * @memberOf cl.Event\r\n         */\r\n        dragEnd: \"dragend\"\r\n    };\r\n\r\n    cl.Utils.merge(Event, eventNames);\r\n\r\n    namespace.Event = Event;\r\n})(cl);\r\n\n/**\r\n * @module events/eventManager\r\n * @description Module contains event manager class. Contains all chart events processing code\r\n * @author Anton Gnibeda\r\n */\r\n(function(namespace) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Represent event manager class\r\n     * @param {cl.Chart} chart Parent chart\r\n     * @memberof cl\r\n     * @constructor\r\n     */\r\n    function EventManager(chart) {\r\n        var t = this;\r\n\r\n        // Private\r\n        t._event = new cl.Event();\r\n        t._listeners = {};\r\n        t._hoveredShape = null;\r\n        t._pressedShape = null;\r\n        t._prevClickTime = null;\r\n        t._clickTimeout = null;\r\n\r\n        // Bind this to event listeners\r\n        t._onMouseMoveListener = t._onMouseMove.bind(t);\r\n        t._onMouseDownListener = t._onMouseDown.bind(t);\r\n        t._onMouseUpListener = t._onMouseUp.bind(t);\r\n\r\n        // Properties\r\n        t.chart = chart;\r\n\r\n        // Create arrays in listeners for each event\r\n        for (var name in cl.Event) if (cl.Event.hasOwnProperty(name)) t._listeners[cl.Event[name]] = [];\r\n\r\n        // Bind all mouse event listeners to screen canvas element\r\n        t._bindBaseEventListeners();\r\n    }\r\n\r\n    /**\r\n     * Parent chart\r\n     * @type {cl.Chart}\r\n     */\r\n    EventManager.prototype.chart = null;\r\n\r\n    /**\r\n     * Mouse X coordinate in screen space\r\n     * @type {number}\r\n     */\r\n    EventManager.prototype.mouseX = 0;\r\n\r\n    /**\r\n     * Mouse Y coordinate in screen space\r\n     * @type {number}\r\n     */\r\n    EventManager.prototype.mouseY = 0;\r\n\r\n    /**\r\n     * Is mouse left button pressed or not\r\n     * @type {boolean}\r\n     */\r\n    EventManager.prototype.mouseDown = false;\r\n\r\n\r\n    /**\r\n     * On mouse down event handler\r\n     * @param {Object} e Event\r\n     * @private\r\n     */\r\n    EventManager.prototype._onMouseDown = function(e) {\r\n        var t = this;\r\n        t.mouseDown = true;\r\n        t._callListeners(cl.Event.mouseDown, e);\r\n\r\n        t._fillMouseCoords(e);\r\n\r\n        // Save shape for click and double click event\r\n        if (t.hasListener(cl.Event.click) || t.hasListener(cl.Event.doubleClick)) {\r\n            t._pressedShape = t.chart.selector.shapeFromPoint(t.mouseX, t.mouseY);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * On mouse up event handler\r\n     * @param {Object} e Event\r\n     * @private\r\n     */\r\n    EventManager.prototype._onMouseUp = function(e) {\r\n        var t = this;\r\n        t._fillMouseCoords(e);\r\n\r\n        if (!t.mouseDown && e.currentTarget === document) return;\r\n        t.mouseDown = false;\r\n        t._callListeners(cl.Event.mouseUp, e);\r\n        // Stop event propagation, no need to fire document onMouseUp\r\n        e.stopPropagation();\r\n\r\n        if (t.hasListener(cl.Event.click) || t.hasListener(cl.Event.doubleClick)) {\r\n            var shape = t.chart.selector.shapeFromPoint(t.mouseX, t.mouseY);\r\n            if (t._pressedShape === shape) t._requestClick(e, t._pressedShape);\r\n        }\r\n    };\r\n\r\n    EventManager.prototype._fillMouseCoords = function(e) {\r\n        var t = this;\r\n        var target  = e.target || e.srcElement,\r\n            rect    = target.getBoundingClientRect(),\r\n            offsetX = e.clientX - rect.left,\r\n            offsetY = e.clientY - rect.top;\r\n        t.mouseX = offsetX;\r\n        t.mouseY = offsetY;\r\n    };\r\n\r\n    /**\r\n     * On mouse move event handler\r\n     * @param {Object} e Event\r\n     * @private\r\n     */\r\n    EventManager.prototype._onMouseMove = function(e) {\r\n        var t = this;\r\n\r\n        t._fillMouseCoords(e);\r\n\r\n        if (t.hasListener(cl.Event.shapeOver) || t.hasListener(cl.Event.shapeOut)) {\r\n            var h = t.chart.selector.shapeFromPoint(t.mouseX, t.mouseY);\r\n            if (h) {\r\n                if (t._hoveredShape !== h) t._callListeners(cl.Event.shapeOver, e, h);\r\n            } else {\r\n                if (t._hoveredShape) t._callListeners(cl.Event.shapeOut, e, t._hoveredShape);\r\n            }\r\n            t._hoveredShape = h;\r\n        }\r\n        t._callListeners(cl.Event.mouseMove, e);\r\n    };\r\n\r\n    /**\r\n     * Function used to request click or double click event\r\n     * @param {Object} e Event\r\n     * @param {cl.Shape|Array<cl.Shape>} [target] Shape affected by event\r\n     * @private\r\n     */\r\n    EventManager.prototype._requestClick = function (e, target) {\r\n        var t = this;\r\n        var curTime = Date.now();\r\n        // If second click was made in less time than DOUBLE_CLICK_DELAY - do double click\r\n        if (t._prevClickTime && curTime - t._prevClickTime < EventManager.DOUBLE_CLICK_DELAY) {\r\n            if (t._clickTimeout) clearTimeout(t._clickTimeout);\r\n            t._callListeners(cl.Event.doubleClick, e, target);\r\n        }\r\n        else {\r\n            // Otherwise set timeout for single click\r\n            if (t._clickTimeout) clearTimeout(t._clickTimeout);\r\n            t._clickTimeout = setTimeout(function() {\r\n                t._clickTimeout = null;\r\n                t._callListeners(cl.Event.click, e, target);\r\n            }, EventManager.DOUBLE_CLICK_DELAY);\r\n        }\r\n        t._prevClickTime = curTime;\r\n    };\r\n\r\n    /**\r\n     * Adds event listener\r\n     * @param {string} event Event name. See {@link cl.Event} members\r\n     * @param {function} callback Event callback\r\n     */\r\n    EventManager.prototype.addEventListener = function(event, callback) {\r\n        var t = this;\r\n        if (!t._listeners[event]) throw new Error(cl.Lang.get(\"errUnknownEvent\", event));\r\n        if (t._listeners[event].indexOf(callback) !== -1) return;\r\n        t._listeners[event].push(callback);\r\n    };\r\n\r\n    /**\r\n     * Removes event listener\r\n     * @param {string} event Event name. See {@link cl.Event} members\r\n     * @param {function} callback Event callback\r\n     */\r\n    EventManager.prototype.removeEventListener = function(event, callback) {\r\n        var t = this;\r\n        if (!t._listeners[event]) throw new Error(cl.Lang.get(\"errUnknownEvent\", event));\r\n        var idx = t._listeners[event].indexOf(callback);\r\n        if (idx !== -1) t._listeners[event].splice(idx, 1);\r\n    };\r\n\r\n    /**\r\n     * Call event listeners by event name\r\n     * @param {string} eventName Event name\r\n     * @param {Object} e Original event\r\n     * @param {cl.Shape|Array<cl.Shape>} [target] Shape affected by event\r\n     * @param {number} [xPos] X coordinate in axis space\r\n     * @param {number} [yPos] Y coordinate in axis space\r\n     * @private\r\n     */\r\n    EventManager.prototype._callListeners = function(eventName, e, target, xPos, yPos) {\r\n        var t = this;\r\n        if (!t.hasListener(eventName)) return;\r\n        var x, y, tar, rect, offsetX = 0, offsetY = 0;\r\n        if (e) {\r\n            tar = e.target || e.srcElement;\r\n            rect = tar.getBoundingClientRect();\r\n            offsetX = e.clientX - rect.left;\r\n            offsetY = e.clientY - rect.top;\r\n        }\r\n\r\n        if (xPos === undefined) x = t.chart.xAxis.toAxis(offsetX); else x = xPos;\r\n        if (yPos === undefined) y = t.chart.yAxis.toAxis(offsetY); else y = yPos;\r\n\r\n        t._event.x = x;\r\n        t._event.y = y;\r\n        t._event.target = target;\r\n        t._event.originalEvent = e;\r\n        for (var i = 0, l = t._listeners[eventName].length; i < l; i++) t._listeners[eventName][i](t._event);\r\n    };\r\n\r\n    /**\r\n     * Check if manager have any event listeners for specified event\r\n     * @param {string} eventName Event name\r\n     * @returns {boolean} True if has event listeners\r\n     */\r\n    EventManager.prototype.hasListener = function(eventName) {\r\n        return this._listeners[eventName].length !== 0;\r\n    };\r\n\r\n    /**\r\n     * Bind all mouse event listeners to screen canvas element\r\n     * @private\r\n     */\r\n    EventManager.prototype._bindBaseEventListeners = function() {\r\n        var t = this;\r\n        var el = t.chart.screen.el;\r\n        el.addEventListener(cl.Event.mouseMove, t._onMouseMoveListener);\r\n        el.addEventListener(cl.Event.mouseDown, t._onMouseDownListener);\r\n        el.addEventListener(cl.Event.mouseUp, t._onMouseUpListener);\r\n        document.addEventListener(cl.Event.mouseUp, t._onMouseUpListener);\r\n    };\r\n\r\n    /**\r\n     * Unbind all mouse event listeners to screen canvas element\r\n     * @private\r\n     */\r\n    EventManager.prototype._unbindBaseEventListeners = function() {\r\n        var t = this;\r\n        var el = this.chart.screen.el;\r\n        el.removeEventListener(cl.Event.mouseMove, t._onMouseMoveListener);\r\n        el.removeEventListener(cl.Event.mouseDown, t._onMouseDownListener);\r\n        el.removeEventListener(cl.Event.mouseUp, t._onMouseUpListener);\r\n        document.removeEventListener(cl.Event.mouseUp, t._onMouseUpListener);\r\n    };\r\n\r\n    /**\r\n     * Destroys event manager\r\n     */\r\n    EventManager.prototype.destroy = function() {\r\n        var t = this;\r\n        t.chart = null;\r\n        t._event = null;\r\n        t._listeners = null;\r\n        t._unbindBaseEventListeners();\r\n    };\r\n\r\n    /**\r\n     * Double click check delay. Time in ms when second click is considered as double click.\r\n     * @type {number}\r\n     * @default 300\r\n     * @const\r\n     */\r\n    EventManager.DOUBLE_CLICK_DELAY = 300;\r\n\r\n    namespace.EventManager = EventManager;\r\n})(cl);\r\n\n/**\r\n * @module layer\r\n * @description Module describes base layer class. All managers and layers are inherited from this class\r\n * @author Anton Gnibeda\r\n */\r\n(function(namespace){\r\n    'use strict';\r\n\r\n    /**\r\n     * Represent layer object\r\n     * @param {cl.Chart} chart Parent chart\r\n     * @memberof cl\r\n     * @constructor\r\n     */\r\n    function Layer(chart) {\r\n        var t = this;\r\n        t.chart = chart;\r\n        t.options = {\r\n            visible: true\r\n        };\r\n        t.surface = new cl.Canvas(chart.width, chart.height);\r\n        t.dirtyFlagName = \"\";\r\n    }\r\n\r\n    /**\r\n     * Parent chart\r\n     * @type {cl.Chart}\r\n     */\r\n    Layer.prototype.chart = null;\r\n\r\n    /**\r\n     * Layer surface\r\n     * @type {cl.Canvas}\r\n     */\r\n    Layer.prototype.surface = null;\r\n\r\n    /**\r\n     * Name of dirty flag. Should be unique for all layers\r\n     * @type {string}\r\n     * @private\r\n     */\r\n    Layer.prototype.dirtyFlagName = \"\";\r\n\r\n    /**\r\n     * Show layer\r\n     * @returns {cl.Layer}\r\n     */\r\n    Layer.prototype.show = function () {\r\n        if (this.options) this.options.visible = true;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Hide layer\r\n     * @returns {cl.Layer}\r\n     */\r\n    Layer.prototype.hide = function () {\r\n        if (this.options) this.options.visible = false;\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Apply all changes to layer. This will cause layer redraw on next frame render\r\n     */\r\n    Layer.prototype.apply = function () {\r\n        if (!this.chart) return;\r\n        this.chart._setDirtyFlag(this.dirtyFlagName);\r\n        this.chart.redraw();\r\n    };\r\n\r\n    /**\r\n     * Renders layer\r\n     * @private\r\n     */\r\n    Layer.prototype._render = function () {\r\n\r\n    };\r\n\r\n    /**\r\n     * Will resize layer\r\n     * @param {number} width New layer width\r\n     * @param {number} height New layer height\r\n     * @returns {cl.Layer}\r\n     */\r\n    Layer.prototype.resize = function(width, height) {\r\n        this.surface.resize(width, height);\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * Destroys layer\r\n     */\r\n    Layer.prototype.destroy = function() {\r\n        this.chart = null;\r\n        this.surface.destroy();\r\n        this.surface = null;\r\n    };\r\n\r\n    namespace.Layer = Layer;\r\n\r\n})(cl);\r\n\n/**\r\n * @module axis/axis\r\n * @description Module contains axis class\r\n * @author Anton Gnibeda\r\n */\r\n(function(namespace) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Represent axis class\r\n     * @constructor\r\n     * @memberof cl\r\n     *\r\n     * @param {cl.AxisManager} axisManager Parent axis manager\r\n     * @param {object} [options]\r\n     *\r\n     * @param {name} [options.name=\"\"] Axis name\r\n     * @param {string} [options.type=\"x\"] Axis type\r\n     * @param {number} [options.min=0] Minimum value of axis\r\n     * @param {number} [options.max=100] Maximum value of axis\r\n     * @param {number} [options.offset=0] Axis offset in uniеs of opposite axis\r\n     * @param {boolean} [options.visible=true] Is axis visible or not\r\n     *\r\n     * @param {object} [options.ticks] Ticks settings\r\n     * @param {number} [options.ticks.big] Big tick\r\n     * @param {number} [options.ticks.big.interval=10] Big tick interval in axis units\r\n     * @param {number} [options.ticks.big.size=8] Size of big tick in pixels\r\n     * @param {string} [options.ticks.big.align=\"center\"] Big ticks align. \"center\", \"left\", \"right\", \"top\", \"bottom\"\r\n     * @param {string} [options.ticks.big.color=cl.Consts.COLOR_GRAY] Big ticks color\r\n     * @param {string} [options.ticks.big.opacity=0.8] Big ticks opacity\r\n     * @param {string} [options.ticks.big.type=\"line\"] Big ticks type. \"line\" or \"dot\"\r\n     * @param {boolean} [options.ticks.big.first=true] Is first tick visible or not\r\n     * @param {boolean} [options.ticks.big.last=true] Is last tick visible or not\r\n     * @param {number} [options.ticks.small] Small tick\r\n     * @param {number} [options.ticks.small.interval=10] Small tick interval in axis units\r\n     * @param {number} [options.ticks.small.size=8] Size of Small tick in pixels\r\n     * @param {string} [options.ticks.small.align=\"center\"] Small ticks align. \"center\", \"left\", \"right\", \"top\", \"bottom\"\r\n     * @param {string} [options.ticks.small.color=cl.Consts.COLOR_GRAY] Small ticks color\r\n     * @param {string} [options.ticks.small.opacity=0.8] Small ticks opacity\r\n     * @param {string} [options.ticks.small.type=\"line\"] Small ticks type. \"line\" or \"dot\"\r\n     * @param {boolean} [options.ticks.small.first=true] Is first tick visible or not\r\n     * @param {boolean} [options.ticks.small.last=true] Is last tick visible or not\r\n     *\r\n     * @param {object} [options.margin] Margin settings\r\n     * @param {number} [options.margin.start=20] Axis margin from start in pixels\r\n     * @param {number} [options.margin.end=20] Axis margin from end in pixels\r\n     *\r\n     * @param {object} [options.style] Style settings\r\n     * @param {number} [options.style.lineWidth=1] Width of axis in pixels\r\n     * @param {number} [options.style.color=cl.Consts.COLOR_GRAY] Axis color\r\n     * @param {number} [options.style.arrowSize=10] Arrow size in pixels\r\n     * @param {Array} [options.style.lineDash=[]] A list of numbers that specifies distances to alternately draw a line and a gap. For example: [5, 15]\r\n     *\r\n     * @param {object} [options.title] Title settings\r\n     * @param {number} [options.title.size=14] Font size of title text\r\n     * @param {number} [options.title.align=\"center\"] Title align. \"left\", \"right\", \"center\"\r\n     * @param {number} [options.title.font=cl.Consts.FONT_NAME] Title font\r\n     * @param {number} [options.title.color=cl.Consts.COLOR_BLACK] Title font color\r\n     * @param {string} [options.title.style=\"\"] Font style. \"bold\", \"italic\", \"bold italic\"\r\n     * @param {number} [options.title.offset=0] Title offset from axis in pixels\r\n     *\r\n     * @param {object} [options.labels] Interval labels\r\n     * @param {object} [options.labels.big] Big interval labels\r\n     * @param {number} [options.labels.big.size=10] Label size\r\n     * @param {number} [options.labels.big.align=\"center\"] Label align. \"center\", \"left\", \"right\", \"top\", \"bottom\"\r\n     * @param {number} [options.labels.big.font=cl.Consts.FONT_NAME] Label font name\r\n     * @param {number} [options.labels.big.color=cl.Consts.COLOR_GRAY] Label color\r\n     * @param {string} [options.labels.big.style=\"\"] Label font style. \"bold\", \"italic\", \"bold italic\"\r\n     * @param {number} [options.labels.big.opacity=1] Label opacity\r\n     * @param {string} [options.labels.big.before=\"\"] Text that will be inserted before label text\r\n     * @param {string} [options.labels.big.after=\"\"] Text that will be inserted after label text\r\n     * @param {number} [options.labels.big.margin=0] Text offset in th plane of the axis\r\n     * @param {object} [options.labels.small] Small interval labels\r\n     * @param {number} [options.labels.small.size=8] Label size\r\n     * @param {number} [options.labels.small.align=\"center\"] Label align. \"center\", \"left\", \"right\", \"top\", \"bottom\"\r\n     * @param {number} [options.labels.small.font=cl.Consts.FONT_NAME] Label font name\r\n     * @param {number} [options.labels.small.color=cl.Consts.COLOR_GRAY] Label color\r\n     * @param {string} [options.labels.small.style=\"\"] Label font style. \"bold\", \"italic\", \"bold italic\"\r\n     * @param {number} [options.labels.small.opacity=1] Label opacity\r\n     * @param {string} [options.labels.small.before=\"\"] Text that will be inserted before label text\r\n     * @param {string} [options.labels.small.after=\"\"] Text that will be inserted after label text\r\n     * @param {number} [options.labels.small.margin=0] Text offset in th plane of the axis\r\n     *\r\n     * @param {object} [options.grid] Grid lines settings\r\n     * @param {object} [options.grid.big] Grid lines settings for big interval\r\n     * @param {number} [options.grid.big.width=1] Line width. Set 0 to hide lines\r\n     * @param {Array} [options.grid.big.dash=[3,3]] Line dash style. A list of numbers that specifies distances to alternately draw a line and a gap. For example: [5, 15]\r\n     * @param {string} [options.grid.big.color=\"#BEBEBE\"] Line color\r\n     * @param {number} [options.grid.big.opacity=0.5] Line opacity\r\n     * @param {object} [options.grid.small] Grid lines settings for big interval\r\n     * @param {number} [options.grid.small.width=1] Line width. Set 0 to hide lines\r\n     * @param {Array} [options.grid.small.dash=[10,10]] Line dash style. A list of numbers that specifies distances to alternately draw a line and a gap. For example: [5, 15]\r\n     * @param {string} [options.grid.small.color=\"#EFEFEF\"] Line color\r\n     * @param {number} [options.grid.small.opacity=0.5] Line opacity\r\n     *\r\n     * @example\r\n     * // All property changes can be made in chain style. After that call \"apply\"\r\n     * // \"apply\" can be called multiple times, but actual redraw would be called once\r\n     * axis\r\n     *    .setMin(0)\r\n     *    .setColor(\"#AAFFEE\")\r\n     *    .setLineWidth(2)\r\n     *    .apply();\r\n     *\r\n     * // Properties can be changed via options too, like this\r\n     * axis.options.min = 0;\r\n     * axis.style.color = \"#AAFFEE\";\r\n     * axis.style.lineWidth = 2;\r\n     * axis.apply();\r\n     *\r\n     * // Convert screen coordinate to axis coordinate\r\n     * var scr = axis.toAxis(value);\r\n     *\r\n     * // Convert axis coordinate to screen coordinate\r\n     * var ac = axis.toScreen(value);\r\n     *\r\n     * // Change axis title, align it left and make bold\r\n     * axis\r\n     *    .setName(\"My custom title\")\r\n     *    .setTitleAlign(\"left\")\r\n     *    .setTitleStyle(\"bold\")\r\n     *    .apply();\r\n     *\r\n     * // Add cells before and after axis and disable labels and ticks on this cells\r\n     * var chart = new cl.Chart({\r\n     *     xAxis: {\r\n     *         min: -10,\r\n     *         max: 110,\r\n     *         ticks: {\r\n     *             big: {\r\n     *                 interval: 10,\r\n     *                 first: false,\r\n     *                 last: false\r\n     *             },\r\n     *             small: {\r\n     *                 interval: 5,\r\n     *                 first: false,\r\n     *                 last: false\r\n     *             }\r\n     *         },\r\n     *     },\r\n     * });\r\n     *\r\n     **/\r\n    function Axis(axisManager, options) {\r\n        var t = this;\r\n        t.parent = axisManager;\r\n        t.chart = axisManager.chart;\r\n\r\n        // Default settings\r\n        t.options = {\r\n            name: \"\",\r\n            type: \"x\",\r\n            min: 0,\r\n            max: 100,\r\n            offset: 0,\r\n            ticks: {\r\n                big: {\r\n                    interval: 10,\r\n                    size: 8,\r\n                    align: \"center\",\r\n                    color: cl.Consts.COLOR_GRAY,\r\n                    opacity: 0.8,\r\n                    type: \"line\",\r\n                    first: true,\r\n                    last: true\r\n                },\r\n                small: {\r\n                    interval: 5,\r\n                    size: 4,\r\n                    align: \"bottom\",\r\n                    color: cl.Consts.COLOR_GRAY,\r\n                    opacity: 0.8,\r\n                    type: \"line\",\r\n                    first: true,\r\n                    last: true\r\n                }\r\n            },\r\n            margin: {\r\n                start: 20,\r\n                end: 20\r\n            },\r\n            style: {\r\n                lineWidth: 2,\r\n                color: cl.Consts.COLOR_GRAY,\r\n                arrowSize: 12,\r\n                lineDash: []\r\n            },\r\n            title: {\r\n                size: 14,\r\n                align: \"center\",\r\n                font: cl.Consts.FONT_NAME,\r\n                color: cl.Consts.COLOR_BLACK,\r\n                style: \"\",\r\n                offset: 0\r\n            },\r\n            labels: {\r\n                big: {\r\n                    size: 10,\r\n                    align: \"bottom\",\r\n                    font: cl.Consts.FONT_NAME,\r\n                    color: cl.Consts.COLOR_GRAY,\r\n                    style: \"\",\r\n                    opacity: 1,\r\n                    before: \"\",\r\n                    after: \"\",\r\n                    margin: 0\r\n                },\r\n                small: {\r\n                    size: 8,\r\n                    align: \"bottom\",\r\n                    font: cl.Consts.FONT_NAME,\r\n                    color: cl.Consts.COLOR_GRAY,\r\n                    style: \"\",\r\n                    opacity: 1,\r\n                    before: \"\",\r\n                    after: \"\",\r\n                    margin: 0\r\n                }\r\n            },\r\n            grid: {\r\n                big: {\r\n                    width: 1,\r\n                    dash: [3,3],\r\n                    color: \"#BEBEBE\",\r\n                    opacity: 0.5\r\n                },\r\n                small: {\r\n                    width4: 1,\r\n                    dash: [10, 10],\r\n                    color: \"#EFEFEF\",\r\n                    opacity: 0.5\r\n                }\r\n            },\r\n            visible: true\r\n        };\r\n\r\n        // Merge passed settings with default\r\n        cl.Utils.merge(t.options, options || {});\r\n\r\n        // Calc intervals if not specified\r\n        if (options && (options.min || options.max)) {\r\n            if (!options.ticks || !options.ticks.big || !options.ticks.big.interval) t.options.ticks.big.interval = parseFloat(((t.options.max - t.options.min) / 10).toFixed(4));\r\n            if (!options.ticks || !options.ticks.small || !options.ticks.small.interval) t.options.ticks.small.interval = parseFloat(((t.options.max - t.options.min) / 20).toFixed(4));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Parent axis manager\r\n     * @type {cl.AxisManager}\r\n     */\r\n    Axis.prototype.parent = null;\r\n\r\n    /**\r\n     * Axis settings\r\n     * @type {Object}\r\n     */\r\n    Axis.prototype.options = null;\r\n\r\n    /**\r\n     * Returns big tick interval\r\n     * @returns {number} Tick interval\r\n     */\r\n    Axis.prototype.getTickInterval = function() {\r\n        return this.options.ticks.big.interval;\r\n    };\r\n\r\n    /**\r\n     * Sets big tick interval\r\n     * @param {number} interval Tick interval\r\n     * @returns {cl.Axis} this\r\n     */\r\n    Axis.prototype.setTickInterval = function(interval) {\r\n        var t = this;\r\n        t.options.ticks.big.interval = interval;\r\n        return t;\r\n    };\r\n\r\n    /**\r\n     * Returns small tick interval\r\n     * @returns {number} Tick interval\r\n     */\r\n    Axis.prototype.getTickIntervalSmall = function() {\r\n        return this.options.ticks.small.interval;\r\n    };\r\n\r\n    /**\r\n     * Sets small tick interval\r\n     * @param {number} interval Tick interval\r\n     * @returns {cl.Axis} this\r\n     */\r\n    Axis.prototype.setTickIntervalSmall = function(interval) {\r\n        var t = this;\r\n        t.options.ticks.small.interval = interval;\r\n        return t;\r\n    };\r\n\r\n    /**\r\n     * Hide axis\r\n     * @returns {cl.Axis} this\r\n     */\r\n    Axis.prototype.hide = function() {\r\n        var t = this;\r\n        t.options.visible = false;\r\n        return t;\r\n    };\r\n\r\n    /**\r\n     * Show axis\r\n     * @returns {cl.Axis} this\r\n     */\r\n    Axis.prototype.show = function() {\r\n        var t = this;\r\n        t.options.visible = true;\r\n        return t;\r\n    };\r\n\r\n    /**\r\n     * Returns title style\r\n     * @returns {string} Title style\r\n     */\r\n    Axis.prototype.getTitleStyle = function() {\r\n        return this.options.title.style;\r\n    };\r\n\r\n    /**\r\n     * Sets title style\r\n     * @param {string} style Title style. \"bold\", \"italic\", \"bold italic\"\r\n     * @returns {cl.Axis} this\r\n     */\r\n    Axis.prototype.setTitleStyle = function(style) {\r\n        var t = this;\r\n        t.options.title.style = style;\r\n        return t;\r\n    };\r\n\r\n    /**\r\n     * Returns title color\r\n     * @returns {string} Title color\r\n     */\r\n    Axis.prototype.getTitleColor = function() {\r\n        return this.options.title.color;\r\n    };\r\n\r\n    /**\r\n     * Sets title color\r\n     * @param {string} color Title color\r\n     * @returns {cl.Axis} this\r\n     */\r\n    Axis.prototype.setTitleColor = function(color) {\r\n        var t = this;\r\n        t.options.title.color = color;\r\n        return t;\r\n    };\r\n\r\n    /**\r\n     * Returns title font\r\n     * @returns {string} Title font\r\n     */\r\n    Axis.prototype.getTitleFont = function() {\r\n        return this.options.title.font;\r\n    };\r\n\r\n    /**\r\n     * Sets title font\r\n     * @param {string} font Title font\r\n     * @returns {cl.Axis} this\r\n     */\r\n    Axis.prototype.setTitleFont = function(font) {\r\n        var t = this;\r\n        t.options.title.font = font;\r\n        return t;\r\n    };\r\n\r\n    /**\r\n     * Returns title font size\r\n     * @returns {number} Title font size\r\n     */\r\n    Axis.prototype.getTitleSize = function() {\r\n        return this.options.title.size;\r\n    };\r\n\r\n    /**\r\n     * Sets title font size\r\n     * @param {number} fontSile Title font size\r\n     * @returns {cl.Axis} this\r\n     */\r\n    Axis.prototype.setTitleSize = function(fontSile) {\r\n        var t = this;\r\n        t.options.title.size = fontSile;\r\n        return t;\r\n    };\r\n\r\n    /**\r\n     * Returns title align\r\n     * @returns {string} Title align\r\n     */\r\n    Axis.prototype.getTitleAlign = function() {\r\n        return this.options.title.align;\r\n    };\r\n\r\n    /**\r\n     * Sets title align\r\n     * @param {string} align Title align\r\n     * @returns {cl.Axis} this\r\n     */\r\n    Axis.prototype.setTitleAlign = function(align) {\r\n        var t = this;\r\n        t.options.title.align = align;\r\n        return t;\r\n    };\r\n\r\n    /**\r\n     * Sets axis color\r\n     * @param {string} color Axis color\r\n     * @returns {cl.Axis} this\r\n     */\r\n    Axis.prototype.setColor = function(color) {\r\n        var t = this;\r\n        t.options.style.color = color;\r\n        return t;\r\n    };\r\n\r\n    /**\r\n     * Returns axis color\r\n     * @returns {string} Axis color\r\n     */\r\n    Axis.prototype.getColor = function() {\r\n        return this.options.style.color;\r\n    };\r\n\r\n    /**\r\n     * Returns axis margins\r\n     * @returns {object} margin Axis margin\r\n     */\r\n    Axis.prototype.getMargins = function(){\r\n        var t = this;\r\n        return {\r\n            start: t.options.margin.start,\r\n            end: t.options.margin.end\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Sets axis margin in pixels\r\n     * @param {number} start Start margin\r\n     * @param {number} end End margin\r\n     */\r\n    Axis.prototype.setMargins = function(start, end) {\r\n        var t = this;\r\n        t.options.margin.start = start;\r\n        t.options.margin.end = end;\r\n        return t;\r\n    };\r\n\r\n    /**\r\n     * Sets axis offset in units of opposite axis\r\n     * @param {number} offset Axis offset\r\n     * @returns {cl.Axis} this\r\n     */\r\n    Axis.prototype.setOffset = function(offset) {\r\n        var t = this;\r\n        t.options.offset = offset;\r\n        return t;\r\n    };\r\n\r\n    /**\r\n     * Returns axis offset in units of opposite axis\r\n     * @returns {number} Axis offset\r\n     */\r\n    Axis.prototype.getOffset = function() {\r\n        return this.options.offset;\r\n    };\r\n\r\n    /**\r\n     * Returns maximum value of axis\r\n     * @returns {number} Maximum value of axis\r\n     */\r\n    Axis.prototype.getMax = function() {\r\n        return this.options.max;\r\n    };\r\n\r\n    /**\r\n     * Returns minimum value of axis\r\n     * @returns {number} Minimum value of axis\r\n     */\r\n    Axis.prototype.getMin = function() {\r\n        return this.options.min;\r\n    };\r\n\r\n    /**\r\n     * Sets maximim value of axis\r\n     * @param {number} max Maximim value\r\n     * @returns {cl.Axis} this\r\n     */\r\n    Axis.prototype.setMax = function(max) {\r\n        var t = this;\r\n        t.options.max = max;\r\n        return t;\r\n    };\r\n\r\n    /**\r\n     * Sets minimum value of axis\r\n     * @param {number} min Minimum value\r\n     * @returns {cl.Axis} this\r\n     * @memberof cl.Axis.prototype\r\n     */\r\n    Axis.prototype.setMin = function(min) {\r\n        var t = this;\r\n        t.options.min = min;\r\n        return t;\r\n    };\r\n\r\n    /**\r\n     * Sets axis name\r\n     * @param {string} name Name of axis\r\n     * @returns {cl.Axis} this\r\n     */\r\n    Axis.prototype.setName = function(name) {\r\n        var t = this;\r\n        t.options.name = name;\r\n        return t;\r\n    };\r\n\r\n    /**\r\n     * Returns axis name\r\n     * @returns {string}\r\n     */\r\n    Axis.prototype.getName = function() {\r\n        return this.options.name;\r\n    };\r\n\r\n    /**\r\n     * Renders axis to canvas object\r\n     * @param {cl.Canvas} canvas Canvas object to draw axis\r\n     * @private\r\n     */\r\n    Axis.prototype._render = function(canvas) {\r\n        var t = this;\r\n        if (!t.options) return;\r\n        if (!t.options.visible) return;\r\n        var o = t.options;\r\n        var k, x, offset;\r\n\r\n        var isY = t.options.type == \"y\";\r\n\r\n        // Find precision. Used to draw intervals defined as float numbers\r\n        var str = o.ticks.small.interval.toString();\r\n        var idx = str.indexOf(\".\");\r\n        var fix = 0;\r\n        if (idx !== -1) fix = str.length - idx - 1;\r\n\r\n        canvas.resetTransform();\r\n\r\n        // Set style\r\n        canvas.setLineStyle(o.style.lineWidth, o.style.color);\r\n        canvas.setFillColor(o.style.color);\r\n\r\n        // Depending on axis type, rotate and flip canvas for Y axis\r\n        if (isY) {\r\n            offset = t.options.offset;\r\n            canvas.ctx.translate(t.chart.xAxis.toScreen(offset), 0);\r\n            canvas.ctx.rotate(cl.Consts.HALF_PI);\r\n        } else {\r\n            offset = t.options.offset;\r\n            canvas.ctx.translate(0, t.chart.yAxis.toScreen(offset));\r\n        }\r\n        canvas.save();\r\n        if (o.style.lineDash.length !== 0) canvas.setLineDash(o.style.lineDash);\r\n\r\n        // Draw axis line\r\n        canvas.drawLine(t.toScreen(o.min), 0, t.toScreen(o.max), 0);\r\n        canvas.restore();\r\n        if (o.style.arrowSize !== 0) canvas.drawArrow(t.toScreen(o.max), 0, isY ? Math.PI : 0, o.style.arrowSize);\r\n\r\n        ///////////////////////////////////// DRAW TICKS AND GRID //////////////////////////////////////////////////\r\n\r\n        // Calculate ticks offset\r\n        var to = 0;\r\n        var toS = 0;\r\n        var isBig = false;\r\n        switch (o.ticks.big.align) {\r\n            case \"right\":case \"top\": to = -o.ticks.big.size; break;\r\n            case \"center\": case \"middle\": to = -o.ticks.big.size / 2; break;\r\n            case \"left\": case \"bottom\": to = 0; break;\r\n        }\r\n        switch (o.ticks.small.align) {\r\n            case \"right\": case \"top\": toS = -o.ticks.small.size; break;\r\n            case \"center\": case \"middle\": toS = -o.ticks.small.size / 2; break;\r\n            case \"left\": case \"bottom\": toS = 0; break;\r\n        }\r\n\r\n        // Calculate coordinates for grid drawing\r\n        var gridMin, gridMax, gridOffset;\r\n        if (o.type === \"x\") {\r\n            gridMin = t.chart.yAxis.toScreen(t.chart.yAxis.getMin());\r\n            gridMax = t.chart.yAxis.toScreen(t.chart.yAxis.getMax());\r\n            gridOffset = t.chart.yAxis.toScreen(offset);\r\n        } else {\r\n            gridMin = -t.chart.xAxis.toScreen(t.chart.xAxis.getMin());\r\n            gridMax = -t.chart.xAxis.toScreen(t.chart.xAxis.getMax());\r\n            gridOffset = -t.chart.xAxis.toScreen(offset);\r\n        }\r\n\r\n        // Actual draw\r\n        k = o.min;\r\n        //total = o.max - o.min;\r\n        while (k <= o.max) {\r\n            x = Math.floor(t.toScreen(k));\r\n            isBig = (k / o.ticks.big.interval) === parseInt((k / o.ticks.big.interval).toFixed(0));\r\n            if (isBig) {\r\n                if ((k + o.ticks.big.interval <= o.max || o.ticks.big.last) && (k != o.min || o.ticks.big.first)) {\r\n                    if (o.grid.big.width !== 0) {\r\n                        canvas.setLineStyle(o.grid.big.width, o.grid.big.color);\r\n                        canvas.setAlpha(o.grid.big.opacity);\r\n                        if (o.grid.big.dash.length !== 0) canvas.setLineDash(o.grid.big.dash);\r\n                        canvas.drawLine(x, gridMin - gridOffset, x, gridMax - gridOffset);\r\n                    }\r\n                    if (o.ticks.big.size !== 0) {\r\n                        canvas.setLineStyle(o.style.lineWidth, o.ticks.big.color);\r\n                        canvas.setAlpha(o.ticks.big.opacity);\r\n                        canvas.setLineDash([]);\r\n                        if (o.ticks.big.type === \"dot\") {\r\n                            canvas.setFillColor(o.ticks.big.color);\r\n                            canvas.ctx.beginPath();\r\n                            canvas.ctx.arc(x, to + o.ticks.big.size / 2, o.ticks.big.size, 0, 2 * Math.PI, false);\r\n                            canvas.ctx.fill();\r\n                        } else canvas.drawLine(x, to, x, to + o.ticks.big.size);\r\n                    }\r\n                }\r\n            } else {\r\n                if ((k + o.ticks.big.interval <= o.max || o.ticks.small.last) && (k != o.min + o.ticks.small.interval || o.ticks.small.first)) {\r\n                    if (o.grid.small.width !== 0) {\r\n                        canvas.setLineStyle(o.grid.small.width, o.grid.small.color);\r\n                        canvas.setAlpha(o.grid.small.opacity);\r\n                        if (o.grid.small.dash.length !== 0) canvas.setLineDash(o.grid.small.dash);\r\n                        canvas.drawLine(x, gridMin - gridOffset, x, gridMax - gridOffset);\r\n                    }\r\n                    if (o.ticks.small.size !== 0) {\r\n                        canvas.setLineStyle(o.style.lineWidth, o.ticks.small.color);\r\n                        canvas.setAlpha(o.ticks.small.opacity);\r\n                        canvas.setLineDash([]);\r\n                        if (o.ticks.small.type === \"dot\") {\r\n                            canvas.setFillColor(o.ticks.small.color);\r\n                            canvas.ctx.beginPath();\r\n                            canvas.ctx.arc(x, toS + o.ticks.small.size / 2, o.ticks.small.size, 0, 2 * Math.PI, false);\r\n                            canvas.ctx.fill();\r\n                        } else canvas.drawLine(x, toS, x, toS + o.ticks.small.size);\r\n                    }\r\n                }\r\n\r\n            }\r\n            k += o.ticks.small.interval;\r\n            k = parseFloat(k.toFixed(fix));\r\n        }\r\n        canvas.ctx.globalAlpha = 1;\r\n        canvas.setLineDash([]);\r\n\r\n        //canvas.ctx.translate(translate, translate);\r\n        // Draw axis title\r\n        if (o.title.size !== 0) {\r\n            var al = o.title.align;\r\n            // Change align for vertical axis\r\n            if (al === \"bottom\") al = \"left\";\r\n            if (al === \"top\") al = \"right\";\r\n            switch (al) {\r\n                case \"left\": x =  Math.floor(t.toScreen(o.min)); break;\r\n                case \"right\": x = Math.floor(t.toScreen(o.max)); break;\r\n                case \"center\": x =  Math.floor(t.toScreen(o.min + (o.max - o.min) / 2)); break;\r\n                default: x = 0;\r\n            }\r\n            if (o.type === \"y\") {\r\n                canvas.ctx.translate(x, o.title.size + (o.title.offset + o.ticks.big.size + o.labels.big.size) * 2);\r\n                canvas.ctx.rotate(Math.PI);\r\n            }\r\n            canvas.setFillColor(o.title.color);\r\n            canvas.drawText(o.name, // Text\r\n                o.type === \"y\" ? 0 : x, // X\r\n                (o.title.offset + o.ticks.big.size + o.labels.big.size), // Y\r\n                o.title.size, // size\r\n                al, // h align\r\n                \"top\",  // v align\r\n                o.title.font, // font\r\n                o.title.style // style\r\n            );\r\n            if (o.type === \"y\") {\r\n                canvas.ctx.rotate(-Math.PI);\r\n                canvas.ctx.translate(-x, -(o.title.size + (o.title.offset + o.ticks.big.size + o.labels.big.size) * 2));\r\n            }\r\n        }\r\n\r\n        // Draw ticks labels\r\n        // Flip valign, because its relative axis, nut text itself\r\n        var vab = o.labels.big.align;\r\n        var vas = o.labels.small.align;\r\n        if (o.type === \"y\") {\r\n            if (vab === \"bottom\") vab = \"right\"; else\r\n            if (vab === \"top\") vab = \"left\"; else\r\n            if (vab === \"middle\") vab = \"center\";\r\n            if (vas === \"bottom\") vas = \"right\"; else\r\n            if (vas === \"top\") vas = \"left\"; else\r\n            if (vas === \"middle\") vas = \"center\";\r\n            switch (vab) {\r\n                case \"center\":case \"middle\": to = 0; break;\r\n                case \"right\": to = o.ticks.big.size; break;\r\n                case \"left\": to = -o.ticks.big.size;  break;\r\n            }\r\n            switch (vas) {\r\n                case \"center\":case \"middle\": toS = 0; break;\r\n                case \"right\": toS = o.ticks.small.size; break;\r\n                case \"left\": toS = -o.ticks.small.size; break;\r\n            }\r\n        } else {\r\n            if (vab === \"bottom\") vab = \"top\"; else if (vab === \"top\") vab = \"bottom\";\r\n            if (vab === \"left\") vab = \"right\"; else if (vab === \"right\") vab = \"left\";\r\n            if (vas === \"bottom\") vas = \"top\"; else if (vas === \"top\") vas = \"bottom\";\r\n            if (vas === \"left\") vas = \"right\"; else if (vas === \"right\") vas = \"left\";\r\n            switch (vab) {\r\n                case \"center\":case \"middle\": to = 0; break;\r\n                case \"top\":case \"left\": to = o.ticks.big.size; break;\r\n            }\r\n            switch (vas) {\r\n                case \"center\":case \"middle\": toS = 0; break;\r\n                case \"top\":case \"left\": toS = o.ticks.small.size; break;\r\n            }\r\n        }\r\n\r\n        k = o.min;\r\n        //total = o.max - o.min;\r\n        while (k <= o.max) {\r\n            x = Math.floor(t.toScreen(k));\r\n            if ((k / o.ticks.big.interval) === parseInt((k / o.ticks.big.interval).toFixed(0))) {\r\n                if (o.labels.big.size !== 0) {\r\n                    if ((k + o.ticks.big.interval <= o.max || o.ticks.big.last) && (k != o.min || o.ticks.big.first)) {\r\n                        x += (o.type === \"y\" ? -1 : 1) * o.labels.big.margin;\r\n                        canvas.setFillColor(o.labels.big.color);\r\n                        canvas.setAlpha(o.labels.big.opacity);\r\n                        if (o.type === \"y\") {\r\n                            canvas.ctx.translate(x, to);\r\n                            canvas.ctx.rotate(-cl.Consts.HALF_PI);\r\n                            canvas.drawText(o.labels.big.before + k.toFixed(fix) + o.labels.big.after, 0, 0, o.labels.big.size, vab, \"center\", o.labels.big.font, o.labels.big.style);\r\n                            canvas.ctx.rotate(cl.Consts.HALF_PI);\r\n                            canvas.ctx.translate(-x, -to);\r\n                        } else\r\n                            canvas.drawText(o.labels.big.before + k.toFixed(fix) + o.labels.big.after, x, to, o.labels.big.size, \"center\", vab, o.labels.big.font, o.labels.big.style);\r\n                    }\r\n                }\r\n            } else {\r\n                if (o.labels.small.size !== 0) {\r\n                    if ((k + o.ticks.big.interval <= o.max || o.ticks.small.last) && (k != o.min + o.ticks.small.interval || o.ticks.small.first)) {\r\n                        x += (o.type === \"y\" ? -1 : 1) * o.labels.small.margin;\r\n                        canvas.setFillColor(o.labels.small.color);\r\n                        canvas.setAlpha(o.labels.small.opacity);\r\n                        if (o.type === \"y\") {\r\n                            canvas.ctx.translate(x, toS);\r\n                            canvas.ctx.rotate(-cl.Consts.HALF_PI);\r\n                            canvas.drawText(o.labels.small.before + k.toFixed(fix) + o.labels.small.after, 0, 0, o.labels.small.size, vas, \"center\", o.labels.small.font, o.labels.small.style);\r\n                            canvas.ctx.rotate(cl.Consts.HALF_PI);\r\n                            canvas.ctx.translate(-x, -toS);\r\n                        } else\r\n                            canvas.drawText(o.labels.small.before + k.toFixed(fix) + o.labels.small.after, x, toS, o.labels.small.size, \"center\", vas, o.labels.small.font, o.labels.small.style);\r\n                    }\r\n                }\r\n            }\r\n            k += o.ticks.small.interval;\r\n            k = parseFloat(k.toFixed(fix));\r\n        }\r\n\r\n        canvas.setAlpha(1);\r\n        canvas.resetTransform();\r\n    };\r\n\r\n    /**\r\n     * Converts screen value to axis space\r\n     * @param {number} value Value on screen\r\n     * @returns {number} Axis coordinate\r\n     */\r\n    Axis.prototype.toAxis = function(value) {\r\n        var t = this;\r\n        if (!t.chart) throw cl.Lang.get(\"errAxisHaveNoChart\");\r\n        var k = t.chart.width;\r\n        if (t.options.type === \"x\") {\r\n            return t.options.min + (value - t.options.margin.start) / (k - t.options.margin.start - t.options.margin.end) * (t.options.max - t.options.min);\r\n        } else {\r\n            k = t.chart.height;\r\n            value = k - value;\r\n            return t.options.min + (value - t.options.margin.start) / (k - t.options.margin.start - t.options.margin.end) * (t.options.max - t.options.min);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Converts axis value to screen space\r\n     * @param {number} value Value on axis\r\n     * @returns {number} Pixel coordinate\r\n     */\r\n    Axis.prototype.toScreen = function(value) {\r\n        var t = this;\r\n        if (!t.chart) throw cl.Lang.get(\"errAxisHaveNoChart\");\r\n        var k = t.chart.width;\r\n        if (t.options.type === \"x\") {\r\n            return t.options.margin.start +  (value - t.options.min) / (t.options.max - t.options.min) *  (k - t.options.margin.start - t.options.margin.end);\r\n        } else {\r\n            k = t.chart.height;\r\n            return t.chart.height - (t.options.margin.start +  (value - t.options.min) / (t.options.max - t.options.min) *  (k - t.options.margin.start - t.options.margin.end));\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Applies option changes and request chart for axis redraw\r\n     * @returns {cl.Axis} this\r\n     */\r\n    Axis.prototype.apply = function() {\r\n        var t = this;\r\n        t.parent.apply();\r\n        return t;\r\n    };\r\n\r\n    /**\r\n     * Sets axis line width in pixels\r\n     * @param {number} w\r\n     * @returns {cl.Axis} this\r\n     * @example\r\n     * axis.setLineWidth(2).apply();\r\n     */\r\n    Axis.prototype.setLineWidth = function(w) {\r\n        var t = this;\r\n        t.options.style.lineWidth = w;\r\n        return t;\r\n    };\r\n\r\n    /**\r\n     * Returns axis line width\r\n     * @returns {number} Line width\r\n     */\r\n    Axis.prototype.getLineWidth = function() {\r\n        return this.options.style.lineWidth;\r\n    };\r\n\r\n    /**\r\n     * Destroys axis\r\n     */\r\n    Axis.prototype.destroy = function() {\r\n        var t = this;\r\n        t.options = null;\r\n        t.chart = null;\r\n    };\r\n\r\n    namespace.Axis = Axis;\r\n\r\n})(cl);\r\n\r\n\n/**\r\n * @module axis/axisManager\r\n * @description Module contains axis manager class\r\n * @author Anton Gnibeda\r\n */\r\n(function(namespace) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Represent axis manager class\r\n     * @constructor\r\n     * @extends cl.Layer\r\n     * @memberOf cl\r\n     *\r\n     * @param {cl.Chart} chart Parent chart\r\n     *\r\n     * @property {number} count Axis count\r\n     */\r\n    function AxisManager(chart) {\r\n        var t = this;\r\n        cl.Layer.call(t, chart);\r\n\r\n        t.items = [];\r\n        t.chart = chart;\r\n        t.dirtyFlagName = \"axis\";\r\n        Object.defineProperties(t, {\r\n            count: { get: function() { return t.items.length; } }\r\n        });\r\n    }\r\n\r\n    cl.Utils.extend(AxisManager, cl.Layer);\r\n\r\n    /**\r\n     * Parent chart\r\n     * @type {null}\r\n     */\r\n    AxisManager.prototype.chart  = null;\r\n\r\n    /**\r\n     * Axis items\r\n     * @type {Array.<cl.Axis>}\r\n     */\r\n    AxisManager.prototype.items = null;\r\n\r\n\r\n    /**\r\n     * Renders all axis on surface\r\n     * @override\r\n     * @private\r\n     */\r\n    AxisManager.prototype._render = function() {\r\n        var i, l, t = this;\r\n        t.surface.resetTransform();\r\n        t.surface.clear();\r\n        for (i = 0, l = t.items.length; i < l; i++) t.items[i]._render(t.surface);\r\n\r\n        t.constructor.superclass._render.call(t, t.surface);\r\n    };\r\n\r\n    /**\r\n     * Adds axis\r\n     * @param {Object} axisOptions Axis settings. See \"options\" in {@link cl.Axis} constructor\r\n     * @returns {cl.Axis} New axis\r\n     */\r\n    AxisManager.prototype.add = function(axisOptions) {\r\n        var t = this;\r\n        var axis = new cl.Axis(t, axisOptions || {});\r\n        t.items.push(axis);\r\n        t.apply();\r\n        return axis;\r\n    };\r\n\r\n    /**\r\n     * Returns axis with specified index or name. Will return first axis with name. Returns undefined if axis was not found\r\n     * @param {number|string} indexOrName or axis name\r\n     * @returns {cl.Axis}\r\n     */\r\n    AxisManager.prototype.get = function(indexOrName) {\r\n        var i, l, t = this;\r\n        if (typeof indexOrName === \"string\") {\r\n            for (i = 0, l = t.items.length; i < l; i++) if (t.items[i].getName() === indexOrName) return t.items[i];\r\n        } else return t.items[indexOrName];\r\n    };\r\n\r\n    /**\r\n     * Removes axis\r\n     * @param {cl.Axis|string|number} axis Axis itself or axis name, or axis index\r\n     */\r\n    AxisManager.prototype.remove = function(axis) {\r\n        var t = this;\r\n        if (axis === null || axis === undefined) return;\r\n        switch (typeof axis) {\r\n            case \"object\": {\r\n                t._removeAxis(axis);\r\n                break;\r\n            }\r\n            default: {\r\n                t._removeAxis(t.get(axis));\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Removes axis from items\r\n     * @param {cl.Axis} axis Axis\r\n     * @private\r\n     */\r\n    AxisManager.prototype._removeAxis = function(axis) {\r\n        var t = this;\r\n        if (!axis) return;\r\n        // Deny base axis remove\r\n        if (axis === t.chart.xAxis || axis === t.chart.yAxis) throw cl.Lang.get(\"errDelBaseAxis\", axis.options.type);\r\n        var idx = t.items.indexOf(axis);\r\n        if (idx === -1 || !t.items[idx]) return;\r\n        t.items.splice(idx, 1);\r\n        t.apply();\r\n\r\n        axis.destroy();\r\n    };\r\n\r\n    /**\r\n     * Destroys axis manager\r\n     * @override\r\n     */\r\n    AxisManager.prototype.destroy = function() {\r\n        var i, l, t= this;\r\n        for (i = 0, l = t.items.length; i < l; i++) t.items[i].destroy();\r\n\r\n        t.items = null;\r\n\r\n        t.constructor.superclass.destroy.call(t);\r\n    };\r\n\r\n    namespace.AxisManager = AxisManager;\r\n\r\n})(cl);\r\n\n/**\r\n * @module background\r\n * @description Module describes background class\r\n * @author Anton Gnibeda\r\n */\r\n(function(namespace) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Represent background class\r\n     *\r\n     * @constructor\r\n     * @extends cl.Layer\r\n     * @memberof cl\r\n     *\r\n     * @param {cl.Chart} chart Parent chart\r\n     * @param {object} [options] Background settings\r\n     * @param {string} [options.url] Background url or base64 string\r\n     * @param {boolean} [options.visible=true] Is background visible or not\r\n     * @param {number} [options.fit=cl.Background.FIT_ALL] Background fit type. Can be:<br><b>cl.Background.FIT_NONE = 0</b>; no fit, image size not changed<br><b>cl.Background.FIT_STRETCH = 1</b>; stretch image to fit chart size<br><b>cl.Background.FIT_ALL = 2</b>; image will be scaled to fit chart size using aspect ratio<br><b>cl.Background.FIT_FILL = 2</b>; image will be scaled to fill all chart using aspect ratio\r\n     *\r\n     * @param {object} [options.align] Background align\r\n     * @param {string} [options.align.x=\"left\"] Horizontal align. \"left\", \"right\", \"center\"\r\n     * @param {string} [options.align.y=\"bottom\"] Vertical align. \"top\", \"bottom\", \"middle\"\r\n     *\r\n     * @param {object} [options.pos] Background position\r\n     * @param {number} [options.pos.x=0] X coordinate in axis units of background position\r\n     * @param {number} [options.pos.y=0] Y coordinate in axis units of background position\r\n     */\r\n    function Background(chart, options) {\r\n        var t = this;\r\n        t.constructor.superclass.constructor.call(t, chart);\r\n\r\n        // Public fields\r\n        t.dirtyFlagName = \"bg\";\r\n\r\n        // Default settings\r\n        cl.Utils.merge(t.options, {\r\n            url: \"\",\r\n            align: {\r\n                x: \"left\",\r\n                y: \"bottom\"\r\n            },\r\n            pos: {\r\n                x: 0,\r\n                y: 0\r\n            },\r\n            fit: Background.FIT_ALL,\r\n            fitToScreen: false,\r\n            visible: true\r\n        });\r\n        cl.Utils.merge(t.options, options || {});\r\n\r\n        // Load image\r\n        if (t.options.url) t.setImage(t.options.url);\r\n    }\r\n\r\n    cl.Utils.extend(Background, cl.Layer);\r\n\r\n\r\n    /**\r\n     * Background image\r\n     * @type {Object}\r\n     */\r\n    Background.prototype.image = null;\r\n\r\n    /**\r\n     *  Is image loaded or not\r\n     * @type {boolean}\r\n     */\r\n    Background.prototype.isLoaded = false;\r\n\r\n    /**\r\n     * Background settings. Same as \"options\" in constructor\r\n     * @type {Object}\r\n     */\r\n    Background.prototype.options = null;\r\n\r\n\r\n    /**\r\n     * Sets background fit style\r\n     * @param {number} fit Fit style. See \"options.fit\" in constructor for details\r\n     * @returns {cl.Background} this\r\n     */\r\n    Background.prototype.setFit = function(fit) {\r\n        var t = this;\r\n        t.options.fit = fit;\r\n        return t;\r\n    };\r\n\r\n    /**\r\n     * Renders background\r\n     * @override\r\n     * @private\r\n     */\r\n    Background.prototype._render = function() {\r\n        var t = this;\r\n        if (!t.image) return;\r\n        if (!t.options.visible) return;\r\n\r\n        var hRatio, vRatio, ratio;\r\n\r\n        // Align\r\n        var ax = t.options.align.x;\r\n        var ay = t.options.align.y;\r\n\r\n        // Cooridinates\r\n        var x = t.chart.xAxis.toScreen(t.options.pos.x);\r\n        var y = t.chart.yAxis.toScreen(t.options.pos.y);\r\n\r\n        // Margins x and y\r\n        var mx = t.chart.xAxis.getMargins();\r\n        var my = t.chart.yAxis.getMargins();\r\n\r\n        // Canvas links to screen, not to chart area\r\n        if (t.options.fitToScreen) {\r\n            x = 0;\r\n            y = t.chart.height;\r\n            mx.start = 0;\r\n            mx.end = 0;\r\n            my.start = 0;\r\n            my.end = 0;\r\n        }\r\n\r\n        // Dimensions\r\n        var imageW = t.image.width;\r\n        var imageH = t.image.height;\r\n        var holderW = t.chart.width - mx.start - mx.end;\r\n        var holderH = t.chart.height - my.start - my.end;\r\n\r\n        // Calculate fit\r\n        switch (t.options.fit) {\r\n            case Background.FIT_STRETCH: {\r\n                imageW = t.chart.width - mx.start - mx.end;\r\n                imageH = t.chart.height - my.start - my.end;\r\n                break;\r\n            }\r\n            case Background.FIT_ALL: {\r\n                hRatio = holderW / imageW;\r\n                vRatio = holderH / imageH ;\r\n                ratio  = Math.min ( hRatio, vRatio );\r\n                imageW *= ratio;\r\n                imageH *= ratio;\r\n                x = mx.start + holderW / 2;\r\n                y = my.end + holderH / 2;\r\n                ax = \"center\";\r\n                ay = \"center\";\r\n                break;\r\n            }\r\n            case Background.FIT_FILL: {\r\n                hRatio = holderW / imageW;\r\n                vRatio = holderH / imageH ;\r\n                ratio  = Math.max( hRatio, vRatio );\r\n                imageW *= ratio;\r\n                imageH *= ratio;\r\n                x = mx.start + holderW / 2;\r\n                y = my.end + holderH / 2;\r\n                ax = \"center\";\r\n                ay = \"center\";\r\n                break;\r\n            }\r\n        }\r\n\r\n        // Calc coordinates depending on align\r\n        switch (ax) {\r\n            case \"left\": x -= 0; break;\r\n            case \"right\": x -= imageW; break;\r\n            case \"center\": x -= imageW / 2; break;\r\n        }\r\n        switch (ay) {\r\n            case \"top\": y -= 0; break;\r\n            case \"bottom\": y -= imageH; break;\r\n            case \"middle\",\"center\": y -= imageH / 2; break;\r\n        }\r\n\r\n        // Clip image if mode is FILL\r\n        if (t.options.fit === Background.FIT_FILL) {\r\n            t.surface.save();\r\n            t.surface.ctx.rect(mx.start, my.end, holderW, holderH);\r\n            t.surface.ctx.clip();\r\n        }\r\n\r\n        // Actual draw\r\n        t.surface.ctx.drawImage(t.image, Math.floor(x), Math.floor(y), imageW, imageH);\r\n\r\n        // Remove clip if mode is FILL\r\n        if (t.options.fit === Background.FIT_FILL) t.surface.restore();\r\n\r\n        t.constructor.superclass._render.call(t);\r\n    };\r\n\r\n    /**\r\n     * Sets background image\r\n     * @param {string} url image url or base64 string\r\n     */\r\n    Background.prototype.setImage = function(url) {\r\n        var t = this;\r\n        t.image = new Image();\r\n        t.isLoaded = false;\r\n        // After image is loaded - redraw layer\r\n        t.image.onload = function() {\r\n            t.isLoaded = true;\r\n            t.apply();\r\n        };\r\n        t.image.src = url;\r\n    };\r\n\r\n    /**\r\n     * Destroys background\r\n     * @override\r\n     */\r\n    Background.prototype.destroy = function() {\r\n        var t = this;\r\n        t.image = null;\r\n        t.constructor.superclass.destroy.call(t);\r\n    };\r\n\r\n    // Constants for fit\r\n    /**\r\n     * Don't fit image, draws in original size\r\n     * @type {number}\r\n     * @default 0\r\n     */\r\n    Background.FIT_NONE = 0;\r\n    /**\r\n     * Stretch image to fit area, don't save aspect ratio\r\n     * @type {number}\r\n     * @default 0\r\n     */\r\n    Background.FIT_STRETCH = 1;\r\n    /**\r\n     * Fit whole image to area, save aspect ratio\r\n     * @type {number}\r\n     * @default 0\r\n     */\r\n    Background.FIT_ALL = 2;\r\n    /**\r\n     * Fit image to fill whole area, save aspect ratio\r\n     * @type {number}\r\n     * @default 0\r\n     */\r\n    Background.FIT_FILL = 3;\r\n\r\n    namespace.Background = Background;\r\n\r\n})(cl);\r\n\n/**\r\n * @module canvas\r\n * @description Module describes canvas class\r\n * @author Anton Gnibeda\r\n */\r\n(function(namespace){\r\n    'use strict';\r\n\r\n    /**\r\n     * Represent canvas object with specified width and height\r\n     *\r\n     * @constructor\r\n     * @memberof cl\r\n     *\r\n     * @param {number} width Width of canvas\r\n     * @param {number} height Height of canvas\r\n     */\r\n    function Canvas(width, height) {\r\n        var t = this;\r\n\r\n        // Private\r\n        t._currentLineWidth = 0;\r\n        t._pixelOffset = 0; // Used to solve \"blurred lines\" issue\r\n\r\n        // Properties\r\n        t.el = document.createElement(\"canvas\");\r\n        t.ctx = this.el.getContext('2d');\r\n        Object.defineProperties(t, {\r\n            width: { get: function() { return t.el.width; } },\r\n            height: { get: function() { return t.el.height; } }\r\n        });\r\n\r\n        // Set size\r\n        t.resize(width, height);\r\n    }\r\n\r\n    /**\r\n     * Canvas 2d context\r\n     * @type {Object}\r\n     */\r\n    Canvas.prototype.ctx = null;\r\n\r\n    /**\r\n     * Canvas DOM element\r\n     * @type {Element}\r\n     */\r\n    Canvas.prototype.el = null;\r\n\r\n    /**\r\n     * Sets canvas line dash style\r\n     * @param {Array} dash A list of numbers that specifies distances to alternately draw a line and a gap. For example: [5, 15]\r\n     * @example\r\n     * canvas.setLineDash([2, 15]);\r\n     */\r\n    Canvas.prototype.setLineDash = function(dash) {\r\n        var t = this;\r\n        if (t.ctx.setLineDash) t.ctx.setLineDash(dash);\r\n    };\r\n\r\n    /**\r\n     * Restores canvas state\r\n     */\r\n    Canvas.prototype.restore = function() {\r\n        this.ctx.restore();\r\n    };\r\n\r\n    /**\r\n     * Saves canvas state\r\n     */\r\n    Canvas.prototype.save = function() {\r\n        this.ctx.save();\r\n    };\r\n\r\n    /**\r\n     * Sets fill color\r\n     * @param {string} color Color\r\n     * @example\r\n     * canvas.setFillColor(\"#FF0000\");\r\n     * canvas.setFillColor(\"red\");\r\n     * canvas.setFillColor(\"rgb(255, 0, 0)\");\r\n     */\r\n    Canvas.prototype.setFillColor = function(color) {\r\n        this.ctx.fillStyle = color;\r\n    };\r\n\r\n    /**\r\n     * Restores canvas translation after 1px blurred lines fix\r\n     */\r\n    Canvas.prototype.restoreLineFix = function() {\r\n        var t = this;\r\n        t._currentLineWidth = null;\r\n        if (t._pixelOffset !== 0) t.ctx.translate(-t._pixelOffset, -t._pixelOffset);\r\n        t._pixelOffset = 0;\r\n    };\r\n\r\n    /**\r\n     * Sets line style\r\n     * @param {number} width Line width\r\n     * @param {string} [color=black] Line color\r\n     * @param {boolean} [ignoreBlurFix=false] True to ignore fix for 1px blurred lines\r\n     * @example\r\n     * canvas.setLineStyle(2, \"#FF0000\");\r\n     */\r\n    Canvas.prototype.setLineStyle = function(width, color, ignoreBlurFix) {\r\n        var t = this;\r\n        var col = color || cl.Consts.COLOR_BLACK;\r\n        t.ctx.lineWidth = width;\r\n        t.ctx.strokeStyle = col;\r\n\r\n        if (ignoreBlurFix) return;\r\n        if (Math.abs(t._currentLineWidth - width) > 0.001) {\r\n            t._currentLineWidth = width;\r\n            var translate = (width % 2) / 2;\r\n            if (Math.abs(t._pixelOffset - translate) > 0.001) {\r\n                t.ctx.translate(-t._pixelOffset, -t._pixelOffset);\r\n                t._pixelOffset = translate;\r\n                t.ctx.translate(t._pixelOffset, t._pixelOffset);\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Draws text\r\n     * @param {string} text Text to draw\r\n     * @param {number} x X coordinate\r\n     * @param {number} y Y coordinate\r\n     * @param {number} [size=cl.Consts.FONT_SIZE(14)] Font size\r\n     * @param {string} [align=\"left\"] Text align: \"left\", \"right\", \"center\"\r\n     * @param {string} [valign=\"top\"] Text vertical align: \"top\", \"bottom\", \"middle\"\r\n     * @param {string} [fontName=cl.Consts.FONT_NAME(Arial)] Font name\r\n     * @param {string} [style] Text style. \"bold\", \"italic\", \"bold italic\"\r\n     * @param {number} [width] Fit text to specified width\r\n     * @example\r\n     * canvas.drawText(\"Hello!\", 10, 10);\r\n     * canvas.drawText(\"Hello!\", 10, 10, 32, \"center\", \"middle\", \"Arial\", \"bold italic\", 64);\r\n     */\r\n    Canvas.prototype.drawText = function(text, x, y, size, align, valign, fontName, style, width) {\r\n        var t = this;\r\n        var s = (size || cl.Consts.FONT_SIZE) + \"px\";\r\n        var n = fontName || cl.Consts.FONT_NAME;\r\n        var st = style || \"\";\r\n        var a = align || \"left\";\r\n        var va = valign || \"top\";\r\n        if (va === \"center\") va = \"middle\";\r\n        t.ctx.textBaseline = va;\r\n        t.ctx.textAlign = a;\r\n        t.ctx.font = st + \" \" + s + \" \" + n;\r\n        if (width !== undefined)\r\n            t.ctx.fillText(text, x, y, width);\r\n        else\r\n            t.ctx.fillText(text, x, y);\r\n    };\r\n\r\n    /**\r\n     * Draws arrow\r\n     * @param {number} x X coordinate\r\n     * @param {number} y Y coordinate\r\n     * @param {number} rotation Angle rotation in radians\r\n     * @param {number} len Arrow length in pixels\r\n     * @param {number} [arrowAngle=Math.PI / 10] Arrow left and right angle in radians\r\n     * @example\r\n     * canvas.drawArrow(10, 10, Math.PI / 4, 20);\r\n     */\r\n    Canvas.prototype.drawArrow = function(x, y, rotation, len, arrowAngle) {\r\n        var dx, dy, aa, t = this;\r\n        aa = arrowAngle || Math.PI / 10;\r\n\r\n        // Draw left side of arrow\r\n        dx = Math.cos(rotation + aa);\r\n        dy = Math.sin(rotation + aa);\r\n        t.ctx.beginPath();\r\n        t.ctx.moveTo(x, y);\r\n        t.ctx.lineTo(x - dx * len, y - dy * len);\r\n\r\n        // Draw right side of arrow\r\n        dx = Math.cos(rotation - aa);\r\n        dy = Math.sin(rotation - aa);\r\n        t.ctx.lineTo(x - dx * len, y - dy * len);\r\n        t.ctx.lineTo(x, y+1);\r\n        t.ctx.closePath();\r\n\r\n        t.ctx.fill();\r\n    };\r\n\r\n    /**\r\n     * Draws rectangle on canvas\r\n     * @param {number} x1 First point X coordinate\r\n     * @param {number} y1 First point Y coordinate\r\n     * @param {number} x2 Second point X coordinate\r\n     * @param {number} y2 Second point Y coordinate\r\n     * @param {number} [r] Border radius\r\n     * @param {boolean} [dontCreatePath] If true, function will not call \"beginPath\" and \"stroke\". Used in batch draws\r\n     * @param {number} [offset=0] Expand rect by offset. Like padding\r\n     * @example\r\n     * // Simple rectangle\r\n     * canvas.drawRect(10, 10, 40, 30);\r\n     * // With round corners\r\n     * canvas.drawRect(10, 10, 40, 30, 4);\r\n     */\r\n    Canvas.prototype.drawRect = function(x1, y1, x2, y2, r, dontCreatePath, offset) {\r\n        var sx, sy, ex, ey, t = this;\r\n        offset = offset || 0;\r\n        sx = Math.min(x1, x2) - offset;\r\n        sy = Math.min(y1, y2) - offset;\r\n        ex = Math.max(x1, x2) + offset;\r\n        ey = Math.max(y1, y2) + offset;\r\n        if (r) {\r\n            // Ensure that the radius isn't too large for x\r\n            if (( ex - sx ) - ( 2 * r ) < 0) {\r\n                r = ( ( ex - sx ) / 2 );\r\n            }\r\n            // Ensure that the radius isn't too large for y\r\n            if (( ey - sy ) - ( 2 * r ) < 0) {\r\n                r = ( ( ey - sy ) / 2 );\r\n            }\r\n            if (!dontCreatePath) t.ctx.beginPath();\r\n            t.ctx.moveTo(sx + r, sy);\r\n            t.ctx.lineTo(ex - r, sy);\r\n            t.ctx.arc(ex - r, sy + r, r, cl.Consts.RAD_TO_DEG * 270, cl.Consts.RAD_TO_DEG * 360, false);\r\n            t.ctx.lineTo(ex, ey - r);\r\n            t.ctx.arc(ex - r, ey - r, r, 0, cl.Consts.RAD_TO_DEG * 90, false);\r\n            t.ctx.lineTo(sx + r, ey);\r\n            t.ctx.arc(sx + r, ey - r, r, cl.Consts.RAD_TO_DEG * 90, cl.Consts.RAD_TO_DEG * 180, false);\r\n            t.ctx.lineTo(sx, sy + r);\r\n            t.ctx.arc(sx + r, sy + r, r, cl.Consts.RAD_TO_DEG * 180, cl.Consts.RAD_TO_DEG * 270, false);\r\n            if (!dontCreatePath) t.ctx.closePath();\r\n        } else {\r\n            t.ctx.rect(sx, sy, ex - sx, ey - sy);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Draws circle on canvas\r\n     * @param {number} x X coordinate\r\n     * @param {number} y Y coordinate\r\n     * @param {number} r Circle radius\r\n     * @example\r\n     * canvas.drawCircle(100, 100, 25);\r\n     */\r\n    Canvas.prototype.drawCircle = function(x, y, r) {\r\n        this.ctx.arc(x, y, r, 0, cl.Consts.TWO_PI, false);\r\n    };\r\n\r\n    /**\r\n     * Draws line on canvas\r\n     * @param {number} x1 First point X coordinate\r\n     * @param {number} y1 First point Y coordinate\r\n     * @param {number} x2 Second point X coordinate\r\n     * @param {number} y2 Second point Y coordinate\r\n     * @param {boolean} [dontCreatePath=false] If true, function will not call \"beginPath\" and \"stroke\". Used in batch draws\r\n     * @example\r\n     * canvas.drawLine(10, 10, 100, 100);\r\n     */\r\n    Canvas.prototype.drawLine = function(x1, y1, x2, y2, dontCreatePath) {\r\n        var t = this;\r\n        if (!dontCreatePath) t.ctx.beginPath();\r\n        t.ctx.moveTo(x1, y1);\r\n        t.ctx.lineTo(x2, y2);\r\n        if (!dontCreatePath) t.ctx.stroke();\r\n    };\r\n\r\n    /**\r\n     * Sets global alpha value\r\n     * @param {number} alpha Alpha value\r\n     * @example\r\n     * canvas.setAlpha(0.4);\r\n     */\r\n    Canvas.prototype.setAlpha = function(alpha) {\r\n        var t = this;\r\n        t.ctx.globalAlpha = alpha;\r\n    };\r\n\r\n    /**\r\n     * Resets canvas transform\r\n     */\r\n    Canvas.prototype.resetTransform = function() {\r\n        this.ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    };\r\n\r\n    /**\r\n     * Draws another canvas on this\r\n     * @param {object} canvas\r\n     * @param {number} [x=0] X coordinate\r\n     * @param {number} [y=0] Y coordinate\r\n     * @example\r\n     * canvas.draw(secondCanvas);\r\n     */\r\n    Canvas.prototype.draw = function(canvas, x, y) {\r\n        this.ctx.drawImage(canvas.el, x || 0, y || 0);\r\n    };\r\n\r\n    /**\r\n     * Clears canvas\r\n     */\r\n    Canvas.prototype.clear = function() {\r\n        var t = this;\r\n        if (t._pixelOffset !== 0) t.ctx.translate(-t._pixelOffset, -t._pixelOffset);\r\n        t.ctx.clearRect(-1, -1, t.width+1, t.height+1);\r\n        if (t._pixelOffset !== 0) t.ctx.translate(t._pixelOffset, t._pixelOffset);\r\n    };\r\n\r\n    /**\r\n     * Resize canvas\r\n     * @param {number} width New width\r\n     * @param {number} height New height\r\n     */\r\n    Canvas.prototype.resize = function(width, height) {\r\n        var t = this;\r\n        t.el.width = width;\r\n        t.el.height = height;\r\n    };\r\n\r\n    /**\r\n     * Destroys canvas\r\n     */\r\n    Canvas.prototype.destroy = function() {\r\n        var t = this;\r\n        if (t.el.parentNode) t.el.parentNode.removeChild(t.el);\r\n        t.ctx = null;\r\n        t.el = null;\r\n    };\r\n\r\n    namespace.Canvas = Canvas;\r\n\r\n})(cl);\r\n\n/**\r\n * @module shapes/selector\r\n * @description Module describes selector class. Class used to interact with shapes\r\n * @author Anton Gnibeda\r\n */\r\n(function(namespace) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Represent selector class. All shapes selections done with help of current class. Also this class does dragging.\r\n     *\r\n     * @extends cl.Layer\r\n     * @constructor\r\n     * @memberof cl\r\n     *\r\n     * @param {cl.Chart} chart Parent chart\r\n     * @param {object} [options] Selector settings\r\n     * @param {boolean} [options.draggable=false] Shapes drag enabled or not\r\n     *\r\n     * @param {object} [options.hover] Hovering settings\r\n     * @param {boolean} [options.hover.enabled=true] Is shape hover enabled\r\n     * @param {number} [options.hover.width=1] Hover width\r\n     * @param {string} [options.hover.color=cl.Consts.COLOR_BLUE] Hover color\r\n     * @param {number} [options.hover.opacity=1] Hover opacity\r\n     * @param {boolean} [options.hover.showHand=true] Show hand cursor on hover\r\n     *\r\n     * @param {object} [options.selection] Selection settings\r\n     * @param {boolean} [options.selection.enabled=true] Is enabled or not\r\n     * @param {boolean} [options.selection.multiple=true] Allow multiple selection\r\n     * @param {object} [options.selection.shape] Shape selection settings\r\n     * @param {number} [options.selection.shape.width=1] Selected shape line width\r\n     * @param {string} [options.selection.shape.color=cl.Consts.COLOR_RED] Selected shape line color\r\n     * @param {number} [options.selection.shape.opacity=1] Selected shape line opacity\r\n     * @param {object} [options.selection.rect] Selection frame settings\r\n     * @param {boolean} [options.selection.rect.enabled=true] Is enabled or not\r\n     * @param {number} [options.selection.rect.width=1] Selected shape line width\r\n     * @param {string} [options.selection.rect.color=cl.Consts.COLOR_LIGHTBLUE] Selected shape line color\r\n     * @param {number} [options.selection.rect.opacity=0.3] Selected shape line opacity\r\n     */\r\n    function Selector(chart, options) {\r\n        var t = this;\r\n        cl.Layer.call(t, chart);\r\n\r\n        t.dirtyFlagName = \"sel\";\r\n\r\n        // Default settings\r\n        cl.Utils.merge(t.options, {\r\n            draggable: false,\r\n            hover: {\r\n                enabled: true,\r\n                width: 2,\r\n                color: cl.Consts.COLOR_RED,\r\n                opacity: 1,\r\n                showHand: true\r\n            },\r\n            selection: {\r\n                enabled: true,\r\n                multiple: false,\r\n                shape: {\r\n                    width: 1,\r\n                    color: cl.Consts.COLOR_BLUE,\r\n                    opacity: 1\r\n                },\r\n                rect: {\r\n                    enabled: true,\r\n                    width: 1,\r\n                    color: cl.Consts.COLOR_LIGHTBLUE,\r\n                    opacity: 0.3\r\n                }\r\n            }\r\n        });\r\n        cl.Utils.merge(t.options, options || {});\r\n\r\n        // Private\r\n        t._drag = {\r\n            active : false, // Is dragging active or not\r\n            prepared: false,  // Is dragging prepared or not. Used to determine if we start drag shape or empty space\r\n            items: [], // Items have been dragged\r\n            bounds: null, // Bounds of items\r\n            sx: 0, // Current drag x coordinate\r\n            sy: 0, // Current drag y coordinate\r\n            lx: 0, // Drag start x coordinate\r\n            ly: 0,// Drag start y coordinate\r\n            layer: new cl.Canvas(t.chart.width, t.chart.height) // Layer to hold cache shapes have been dragging\r\n        };\r\n        // Selection rectangle\r\n        t._rect = { active: false, sx: 0, sy: 0, ex: 0, ey: 0};\r\n        // Store hovered shapes for animations\r\n        t._hovers = [];\r\n        // Used to store shape. For mousedown and mouseup\r\n        t._click = {up: null, down: null};\r\n\r\n        // Bind mouse move event\r\n        t.chart.addEventListener(cl.Event.shapeOver, t._onShapeOver.bind(t));\r\n        t.chart.addEventListener(cl.Event.shapeOut, t._onShapeOut.bind(t));\r\n        t.chart.addEventListener(cl.Event.mouseDown, t._onMouseDown.bind(t));\r\n        t.chart.addEventListener(cl.Event.mouseUp, t._onMouseUp.bind(t));\r\n        t.chart.addEventListener(cl.Event.mouseMove, t._onMouseMove.bind(t));\r\n    }\r\n    cl.Utils.extend(Selector, cl.Layer);\r\n\r\n\r\n    /**\r\n     * Selector settings. Same as \"options\" in constructor\r\n     * @type {Object}\r\n     */\r\n    Selector.prototype.options = null;\r\n\r\n    /**\r\n     * Current selection\r\n     * @type {Array<cl.Shape>}\r\n     */\r\n    Selector.prototype.selection = [];\r\n\r\n    /**\r\n     * Hovered shape\r\n     * @type {cl.Shape}\r\n     */\r\n    Selector.prototype.hover = null;\r\n\r\n\r\n    /**\r\n     * Shape over event handler\r\n     * @param {cl.Event} e\r\n     * @private\r\n     */\r\n    Selector.prototype._onShapeOver = function(e) {\r\n        var t = this;\r\n        if (t._drag.active || t._rect.active) return;\r\n        if (e.target && e.target.props.cursor) t.chart.setCursor(e.target.props.cursor);\r\n        else if (t.options.hover.showHand) t._showHand();\r\n        t.hover = e.target;\r\n        t.apply();\r\n    };\r\n\r\n    /**\r\n     * Shape out event handler\r\n     * @param {cl.Event} e\r\n     * @private\r\n     */\r\n    Selector.prototype._onShapeOut = function(e) {\r\n        var t = this;\r\n        if (t._drag.active || t._rect.active) return;\r\n\r\n        if (t.hover && ((e.target && e.target.props.cursor) || t.options.hover.showHand)) t._resetCursor();\r\n        t.hover = null;\r\n        t.apply();\r\n    };\r\n\r\n    /**\r\n     * Mouse move callback\r\n     * @param {cl.Event} e Event\r\n     * @private\r\n     */\r\n    Selector.prototype._onMouseMove = function(e) {\r\n        var i, l, t = this;\r\n        if (t._drag.active) {\r\n            // Move all draggable shapes\r\n            for (i = 0, l = t._drag.items.length; i < l; i++) t._drag.items[i]._processDrag(e.x - t._drag.sx, e.y - t._drag.sy);\r\n            // Request shapes and selector redraw\r\n            t.apply();\r\n            t.chart.shapes.apply();\r\n            // Store new coordinates\r\n            t._drag.sx = e.x;\r\n            t._drag.sy = e.y;\r\n\r\n        } else\r\n        // Start drag if moved by Selector.DRAG_THRESOLD pixels\r\n        if (t._drag.prepared && t.chart.events.mouseDown && ((Math.abs(t._drag.sx - e.originalEvent.offsetX) > Selector.DRAG_THRESOLD) || (Math.abs(t._drag.sy - e.originalEvent.offsetY) > Selector.DRAG_THRESOLD))) t._startDrag(e);\r\n\r\n        // Change selection rectangle coordinates\r\n        if (t._rect.active) {\r\n            t._rect.ex = e.originalEvent.offsetX;\r\n            t._rect.ey = e.originalEvent.offsetY;\r\n            t.apply();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Mouse down event listener\r\n     * @param {cl.Event} e Event\r\n     * @private\r\n     */\r\n    Selector.prototype._onMouseDown = function(e) {\r\n        var t = this;\r\n        t._click.down = t.hover;\r\n        if (!t._drag.active && t.hover && t.options.draggable) {\r\n            // Store drag parameters\r\n            t._drag.prepared = true;\r\n            t._drag.sx = e.originalEvent.offsetX;\r\n            t._drag.sy = e.originalEvent.offsetY;\r\n            t._drag.lx = t._drag.sx;\r\n            t._drag.ly = t._drag.sy;\r\n        } else t._drag.prepared = false;\r\n        if ((!t.hover || !t.options.draggable) && t.options.selection.enabled && t.options.selection.rect.enabled && t.options.selection.multiple) {\r\n            // Store selection rectangle parameters\r\n            t._rect.sx = e.originalEvent.offsetX;\r\n            t._rect.sy = e.originalEvent.offsetY;\r\n            t._rect.ex = t._rect.sx;\r\n            t._rect.ey = t._rect.sy;\r\n            t._rect.active = true;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Mouse down event listener\r\n     * @param {cl.Event} e Event\r\n     * @private\r\n     */\r\n    Selector.prototype._onMouseUp = function(e) {\r\n        var i, l, res, t = this;\r\n        t._click.up = t.hover;\r\n        var clickedOnShape = t._click.down && t._click.up && t._click.down === t._click.up;\r\n        if (t._rect.active) {\r\n            // Calculate selection\r\n            var hw = Math.abs(t._rect.ex - t._rect.sx) / 2;\r\n            var hh = Math.abs(t._rect.ey - t._rect.sy) / 2;\r\n            var rx = Math.max(t._rect.sx, t._rect.ex) - hw;\r\n            var ry = Math.max(t._rect.sy, t._rect.ey) - hh;\r\n            res = t.shapesFromRect(rx, ry, hw, hh);\r\n            if (res.length === 0)\r\n                t.chart.events._callListeners(cl.Event.deselect, e.originalEvent, t.selection);\r\n            else\r\n                t.chart.events._callListeners(cl.Event.select, e.originalEvent, res);\r\n            t.selection = res;\r\n            t._rect.active = false;\r\n            t.apply();\r\n        } else if (t._drag.active) {\r\n            // Move all dragged shapes in static layer\r\n            for (i = 0, l = t._drag.items.length; i < l; i++) {\r\n                t._drag.items[i]._isDragged = false;\r\n                if (!t._drag.items[i].tween) {\r\n                    t._drag.items[i].isAnimating = false;\r\n                    t.chart.shapes.updateStatic();\r\n                    t.chart.shapes.apply();\r\n                }\r\n            }\r\n            // Stop dragging\r\n            t.chart.events._callListeners(cl.Event.dragEnd, e.originalEvent, t._drag.items);\r\n            t._drag.items = null;\r\n            t._drag.active = false;\r\n            t._drag.prepared = false;\r\n            t.apply();\r\n        } else {\r\n            // Select shapes\r\n            if (t.options.selection.enabled) {\r\n                if (t.options.selection.multiple && t.hover) {\r\n                    // Multiple selection. Add or remove shape from selection\r\n                    var idx = t.selection.indexOf(t.hover);\r\n                    if (idx === -1) t.selection.push(t.hover); else t.selection.splice(idx, 1);\r\n                } else {\r\n                    // Single selection\r\n                    if (t.hover && clickedOnShape) {\r\n                        if (t.selection.length === 1 && t.selection[0] === t.hover) {\r\n                            t.chart.events._callListeners(cl.Event.deselect, e.originalEvent, t.selection);\r\n                            t.selection = [];\r\n                        } else {\r\n                            t.selection = [t.hover];\r\n                            t.chart.events._callListeners(cl.Event.select, e.originalEvent, t.selection);\r\n                        }\r\n                    } else {\r\n                        t.chart.events._callListeners(cl.Event.deselect, e.originalEvent, t.selection);\r\n                        t.selection = [];\r\n                    }\r\n                }\r\n                t.apply();\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Removes selection\r\n     */\r\n    Selector.prototype.deselect = function() {\r\n        var t = this;\r\n        if (t.selection.length === 0) return;\r\n        t.chart.events._callListeners(cl.Event.deselect, null, t.selection);\r\n        t.selection = [];\r\n        t.apply();\r\n    };\r\n\r\n    /**\r\n     * Returns selection\r\n     * @returns {Array.<cl.Shape>}\r\n     */\r\n    Selector.prototype.getSelection = function() {\r\n        return this.selection;\r\n    };\r\n\r\n    /**\r\n     * Enables multiselection\r\n     */\r\n    Selector.prototype.enableMultiselect = function() {\r\n        this.options.selection.enabled = true;\r\n        this.options.selection.rect.enabled = true;\r\n        this.options.selection.multiple = true;\r\n    };\r\n\r\n    /**\r\n     * Disables multiselection\r\n     */\r\n    Selector.prototype.disableMultiselect = function() {\r\n        this.options.selection.multiple = false;\r\n    };\r\n\r\n    /**\r\n     * Enables dragging\r\n     */\r\n    Selector.prototype.enableDrag = function() {\r\n        this.options.draggable = true;\r\n    };\r\n\r\n    /**\r\n     * Disables dragging\r\n     */\r\n    Selector.prototype.disableDrag = function() {\r\n        this.options.draggable = false;\r\n    };\r\n\r\n    /**\r\n     * Starts dragging process\r\n     * @param {object} e Event\r\n     * @private\r\n     */\r\n    Selector.prototype._startDrag = function(e) {\r\n        var t = this;\r\n        if (!t.options.draggable) return;\r\n\r\n        // Check if there shape under cursor\r\n        var currentItem = t.shapeFromPoint(t.chart.events.mouseX, t.chart.events.mouseY);\r\n        if (!currentItem) return;\r\n\r\n        // Make selection if not exists\r\n        if (currentItem && t.selection.indexOf(currentItem) === -1) {\r\n            t.selection = [currentItem];\r\n            t.chart.events._callListeners(cl.Event.select, e.originalEvent, t.selection);\r\n        }\r\n        if (t.selection.length === 0) return;\r\n\r\n        var i, l;\r\n        var sel = t.selection;\r\n\r\n        // Initialise\r\n        t._drag.items = [];\r\n        t._drag.sx = t.chart.xAxis.toAxis(t._drag.sx);\r\n        t._drag.sy = t.chart.yAxis.toAxis(t._drag.sy);\r\n\r\n        // Calculate bounds of draggable shapes\r\n        t._drag.bounds = t.getBounds(sel);\r\n        t._drag.bounds.x = Math.floor(t._drag.bounds.x) - 10;\r\n        t._drag.bounds.y = Math.floor(t._drag.bounds.y) - 10;\r\n\r\n        // Prepare drag layer for drawing\r\n        t._drag.layer.resize(t._drag.bounds.w + 20, t._drag.bounds.h + 20);\r\n        t._drag.layer.resetTransform();\r\n        t._drag.layer.clear();\r\n        t._drag.layer.ctx.translate(-t._drag.bounds.x, -t._drag.bounds.y);\r\n\r\n        for (i = 0, l = sel.length; i < l; i++) if (sel[i].props.draggable) {\r\n            // Add draggable item\r\n            t._drag.items.push(sel[i]);\r\n            // Render draggable shape in drag layer\r\n            sel[i]._render(t._drag.layer);\r\n            if (!sel[i].isAnimating) {\r\n                // Update static layer if draggable shapes was in static\r\n                t.chart.shapes.updateStatic();\r\n                t.chart.shapes.apply();\r\n            }\r\n            sel[i].isAnimating = true;\r\n        }\r\n        // Renders selection of draggable shapes\r\n        t._renderSelection(t._drag.layer, t._drag.items);\r\n\r\n        // Sets _isDragged flag to hide shapes from rendering in ShapeManager\r\n        for (i = 0, l = t._drag.items.length; i < l; i++) t._drag.items[i]._isDragged = true;\r\n\r\n        t._drag.active = true;\r\n        t.apply();\r\n\r\n        t.chart.events._callListeners(cl.Event.dragStart, e.originalEvent, t._drag.items);\r\n    };\r\n\r\n    /**\r\n     * Returns bounds of shapes\r\n     * @param {Array.<cl.Shape>} items Shapes array\r\n     * @returns {{x: Number, y: Number, w: number, h: number}} Bounds\r\n     */\r\n    Selector.prototype.getBounds = function(items) {\r\n        var x1, y1, x2, y2, i, l, b;\r\n        x1 = Number.MAX_VALUE;\r\n        y1 = Number.MAX_VALUE;\r\n        x2 = Number.MIN_VALUE;\r\n        y2 = Number.MIN_VALUE;\r\n        for (i = 0, l = items.length; i < l; i++) {\r\n            b = items[i].getBounds();\r\n            if (b.x < x1) x1 = b.x;\r\n            if (b.y < y1) y1 = b.y;\r\n            if (b.x + b.w > x2) x2 = b.x + b.w;\r\n            if (b.y + b.h > y2) y2 = b.y + b.h;\r\n        }\r\n        return {x: x1, y: y1, w: x2 - x1, h: y2 - y1};\r\n    };\r\n\r\n    /**\r\n     * Returns all shapes intersecting rectangle\r\n     * @param {number} rx X coordinate in pixels of rectangle center\r\n     * @param {number} ry Y coordinate in pixels of rectangle center\r\n     * @param {number} hw Half width\r\n     * @param {number} hh Half height\r\n     * @returns {Array<cl.Shape>} Array of shapes intersecting rectangle\r\n     */\r\n    Selector.prototype.shapesFromRect = function(rx, ry, hw, hh) {\r\n        var i, l, t = this, res = [];\r\n        l = t.chart.shapes.count;\r\n        for (i = 0; i < l; i++) if (t.chart.shapes.items[i].hitTestRect(rx, ry, hw, hh)) res.push(t.chart.shapes.items[i]);\r\n        return res;\r\n    };\r\n\r\n    /**\r\n     * Returns all shapes under point in screen coordinates\r\n     * @param {number} x X coordinate in pixels\r\n     * @param {number} y Y coordinate in pixels\r\n     * @returns {Array.<cl.Shape>} Array of shapes under point\r\n     */\r\n    Selector.prototype.shapesFromPoint = function(x, y) {\r\n        var i, l, t = this, res = [];\r\n        l = t.chart.shapes.count;\r\n        for (i = 0; i < l; i++) if (t.chart.shapes.items[i].hitTest(x, y)) res.push(t.chart.shapes.items[i]);\r\n        return res;\r\n    };\r\n\r\n    /**\r\n     * Returns one shape under point in screen coordinates. Will return smallest shape\r\n     * @param {number} x X coordinate in pixels\r\n     * @param {number} y Y coordinate in pixels\r\n     * @returns {cl.Shape} Shape under point\r\n     */\r\n    Selector.prototype.shapeFromPoint = function(x, y) {\r\n        var t = this;\r\n        var shapes = t.chart.selector.shapesFromPoint(x, y);\r\n        if (shapes.length !== 0) {\r\n            var min = Number.MAX_VALUE;\r\n            var idx = 0;\r\n            // Find smallest shape\r\n            for (var i = 0, l = shapes.length; i < l; i++) {\r\n                var size = shapes[i].getPixelArea();\r\n                if (size < min) {\r\n                    min = size;\r\n                    idx = i;\r\n                }\r\n            }\r\n            return shapes[idx];\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Renders selector\r\n     * @private\r\n     */\r\n    Selector.prototype._render = function() {\r\n        var t = this;\r\n        if (!t.options.visible) return;\r\n\r\n        t.surface.clear();\r\n        if (t._drag.active) t.surface.draw(t._drag.layer, t._drag.bounds.x -t._drag.lx + t.chart.events.mouseX, t._drag.bounds.y -t._drag.ly + t.chart.events.mouseY); else {\r\n\r\n            // Render selection\r\n            t._renderSelection(t.surface, t.selection);\r\n\r\n            if (t.options.hover.enabled && !t._rect.active) {\r\n                // Recalculate hover if shapes is moving, but not when dragging\r\n                if (t.chart.shapes.isAnimating && !t._drag.active) t.hover = t.shapeFromPoint(t.chart.events.mouseX, t.chart.events.mouseY);\r\n                // Render hover if exists\r\n                if (t.hover && !(t.hover.props.hover && t.hover.props.hover.enabled === false)) {\r\n                    if (t.hover.props.lineDash && t.hover.props.lineDash.length !== 0) t.surface.setLineDash(t.hover.props.lineDash);\r\n                    if (t.hover.props.hover) {\r\n                        t.surface.ctx.strokeStyle = t.hover.props.hover.color !== undefined ? t.hover.props.hover.color : t.options.hover.color;\r\n                        t.surface.ctx.lineWidth = t.hover.props.hover.border !== undefined ? t.hover.props.hover.border : t.options.hover.width;\r\n                        t.surface.ctx.globalAlpha = t.hover.props.hover.opacity !== undefined ? t.hover.props.hover.opacity : t.options.hover.opacity;\r\n                    } else {\r\n                        t.surface.ctx.strokeStyle = t.options.hover.color;\r\n                        t.surface.ctx.lineWidth = t.options.hover.width;\r\n                        t.surface.ctx.globalAlpha = t.options.hover.opacity;\r\n                    }\r\n                    t.surface.ctx.beginPath();\r\n                    t.hover._renderHover(t.surface, - 1 + t.options.hover.width / 2 + (t.hover.props.hover ? ((t.hover.props.hover.border / 2 || 0) + (t.hover.props.hover.offset || 0)) : 0));\r\n                    t.surface.ctx.stroke();\r\n                    t.surface.ctx.closePath();\r\n                    if (t.hover.props.lineDash && t.hover.props.lineDash.length !== 0) t.surface.setLineDash([]);\r\n                }\r\n            }\r\n\r\n            // Render selection rectangle\r\n            if (t._rect.active) {\r\n                t.surface.ctx.strokeStyle = cl.Utils.colorLuminance(t.options.selection.rect.color, -0.2);\r\n                t.surface.ctx.fillStyle = t.options.selection.rect.color;\r\n                t.surface.ctx.lineWidth = t.options.selection.rect.width;\r\n                t.surface.ctx.globalAlpha = t.options.selection.rect.opacity;\r\n                t.surface.ctx.beginPath();\r\n                t.surface.ctx.rect(t._rect.sx + 0.5, t._rect.sy + 0.5, t._rect.ex - t._rect.sx, t._rect.ey - t._rect.sy);\r\n                t.surface.ctx.fill();\r\n                t.surface.ctx.stroke();\r\n                t.surface.ctx.closePath();\r\n            }\r\n        }\r\n\r\n        t.constructor.superclass._render.call(t);\r\n    };\r\n\r\n    /**\r\n     * Renders selection\r\n     * @param {cl.Canvas} canvas Canvas\r\n     * @param {Array.<cl.Shape>} shapes Shapes to draw\r\n     * @private\r\n     */\r\n    Selector.prototype._renderSelection = function(canvas, shapes) {\r\n        var i, l, t = this;\r\n\r\n        if (t.options.selection.enabled && t.selection.length !== 0) {\r\n            canvas.ctx.strokeStyle = t.options.selection.shape.color;\r\n            canvas.ctx.lineWidth = t.options.selection.shape.width;\r\n            canvas.ctx.globalAlpha = t.options.selection.shape.opacity;\r\n            canvas.ctx.beginPath();\r\n            // Render all lines as one path for best performance\r\n            for (i = 0, l = shapes.length; i < l; i++) shapes[i]._renderHover(canvas);\r\n            canvas.ctx.stroke();\r\n            canvas.ctx.closePath();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Destroys selector\r\n     * @override\r\n     */\r\n    Selector.prototype.destroy = function() {\r\n        var t = this;\r\n        if (t._drag.layer) t._drag.layer.destroy();\r\n        t.hover = null;\r\n        t.options = null;\r\n        t._drag.layer = null;\r\n        t.selection = [];\r\n        t.constructor.superclass.destroy.call(t);\r\n    };\r\n\r\n    /**\r\n     * Shows hand cursor\r\n     * @private\r\n     */\r\n    Selector.prototype._showHand = function() {\r\n        this.chart.setCursor(\"pointer\");\r\n    };\r\n\r\n    /**\r\n     * Hides hand cursor\r\n     * @private\r\n     */\r\n    Selector.prototype._resetCursor = function() {\r\n        this.chart.setCursor();\r\n    };\r\n\r\n\r\n    /**\r\n     * Number of pixels indicates mouse movement before drag actually start\r\n     * @type {number}\r\n     * @default 3\r\n     */\r\n    Selector.DRAG_THRESOLD = 3;\r\n\r\n    namespace.Selector = Selector;\r\n\r\n})(cl);\r\n\n/**\r\n * @module shapes/shape\r\n * @description Module describes base shape class\r\n * @author Anton Gnibeda\r\n */\r\n(function(namespace) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Represent base shape class. This is base class for all displayable objects, like bubbles, polygons, etc.\r\n     *\r\n     * @constructor\r\n     * @memberof cl\r\n     *\r\n     * @param {object} parent Parent shape manager\r\n     * @param {object} props shape settings\r\n     * @param {object} props.id Shape id\r\n     * @param {string} [props.cursor] Change cursor to specified when shape is hovered\r\n     * @param {object} [props.x=0] Shape X coordinate\r\n     * @param {object} [props.y=0] Shape Y coordinate\r\n     * @param {object} [props.color=cl.Consts.COLOR_RED] Shape color\r\n     * @param {object} [props.border=1] Shape border width\r\n     * @param {object} [props.opacity=0.3] Shape opacity\r\n     * @param {array} [props.lineDash=[]] Shape line dash. Example: [2, 2]\r\n     * @param {array} [props.links=[]] Array of linked shapes id's\r\n     * @param {boolean} [props.draggable=true] Is shape draggable\r\n     * @param {object} [props.track] Shape track. Can be displayed while shape is animating\r\n     * @param {boolean} [props.track.enabled=false] Enabled or not\r\n     * @param {number} [props.track.width=1] Line width\r\n     * @param {string} [props.track.color=cl.Consts.COLOR_GREEN] Line color\r\n     * @param {number} [props.track.opacity=0.4] Line opacity\r\n     * @param {object} [props.hover] Hover style\r\n     * @param {boolean} [props.hover.enabled=true] Is hover enabled\r\n     * @param {number} [props.hover.border] Hover border size\r\n     * @param {string} [props.hover.color] Hover color\r\n     * @param {number} [props.hover.opacity] Hover opacity\r\n     * @param {number} [props.hover.offset] Hover offset\r\n     **/\r\n    function Shape(parent, props) {\r\n        var t = this;\r\n        if (!parent) throw new Error(cl.Lang.get(\"errShapeNoParam\", \"parent\"));\r\n\r\n        // Properties\r\n        t.parent = parent;\r\n        t.animProps = null;\r\n\r\n        // Private\r\n        t._isDragged = false;\r\n\r\n        t.tween = null;\r\n        t.props = {\r\n            owner: t,\r\n            id: undefined,\r\n            x: 0,\r\n            y: 0,\r\n            color: cl.Consts.COLOR_RED,\r\n            borderColor: null,\r\n            border: 1,\r\n            opacity: 0.3,\r\n            lineDash: null,\r\n            links: [],\r\n            draggable: true,\r\n            track: {\r\n                enabled: false,\r\n                width: 1,\r\n                color: cl.Consts.COLOR_GREEN,\r\n                opacity: 0.4,\r\n                startSize: 2,\r\n                endSize: 4\r\n            },\r\n            hover: null\r\n        };\r\n        cl.Utils.merge(t.props, props || {});\r\n\r\n        if (t.props.color) t.props.color = cl.Color.fromString(t.props.color);\r\n        if (t.props.borderColor) t.props.borderColor = cl.Color.fromString(t.props.borderColor); else t.props.borderColor = cl.Utils.colorLuminance(t.props.color, -0.2);\r\n\r\n        // Dont create shapes without id\r\n        if (t.props.id === undefined) throw new Error(cl.Lang.get(\"errShapeNoParam\", \"id\"));\r\n    }\r\n\r\n    ///////////////////////////////////////////// PROPERTIES //////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Parent shape manager\r\n     * @type {cl.ShapeManager}\r\n     */\r\n    Shape.prototype.parent = null;\r\n\r\n    /**\r\n     * Shape properties\r\n     * @type {Object}\r\n     */\r\n    Shape.prototype.props = null;\r\n\r\n    /**\r\n     * Shape type\r\n     * @type {string}\r\n     * @readonly\r\n     */\r\n    Shape.prototype.type = \"base\";\r\n\r\n    /**\r\n     * Indicates that shape is currently animating or moving\r\n     * @type {boolean}\r\n     */\r\n    Shape.prototype.isAnimating = false;\r\n\r\n    /////////////////////////////////////////////// METHODS ///////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Sets shape hover style\r\n     */\r\n    Shape.prototype.setHoverStyle = function(h) {\r\n        cl.Utils.merge(this.props.hover, h);\r\n    };\r\n\r\n    /**\r\n     * Returns shape hover style\r\n     * @returns {object} Hover style\r\n     */\r\n    Shape.prototype.getHoverStyle = function() {\r\n        return cl.Utils.merge({}, this.props.hover);\r\n    };\r\n\r\n    /**\r\n     * Returns shape area in pixels. Function used in shape selection to determine smallest shape\r\n     * @returns {number} Shape area\r\n     */\r\n    Shape.prototype.getPixelArea = function() {\r\n\r\n    };\r\n\r\n    /**\r\n     * Returns X coordinate of shape center\r\n     * @returns {number} X coordinate in axis space\r\n     */\r\n    Shape.prototype.getCenterX = function() {\r\n        return this.props.x;\r\n    };\r\n\r\n    /**\r\n     * Returns Y coordinate of shape center\r\n     * @returns {number} Y coordinate in axis space\r\n     */\r\n    Shape.prototype.getCenterY = function() {\r\n        return this.props.y;\r\n    };\r\n\r\n    /**\r\n     * Used to update shape position while shape dragged\r\n     * @param {number} deltaX X coordinate changes\r\n     * @param {number} deltaY Y coordinate changes\r\n     * @private\r\n     */\r\n    Shape.prototype._processDrag = function(deltaX, deltaY) {\r\n        this.props.x += deltaX;\r\n        this.props.y += deltaY;\r\n    };\r\n\r\n    /**\r\n     * Returns shape bounds in screen space\r\n     * @returns {{x: number, y: number, w: number, h: number}} Shape bounds\r\n     */\r\n    Shape.prototype.getBounds = function() {\r\n\r\n    };\r\n\r\n    /**\r\n     * Checks if shape intersecting rectangle\r\n     * @param {number} rx X coordinate in pixels of rectangle center\r\n     * @param {number} ry Y coordinate in pixels of rectangle center\r\n     * @param {number} hw Half width\r\n     * @param {number} hh Half height\r\n     * @returns {boolean} Intersecting or not\r\n     */\r\n    Shape.prototype.hitTestRect = function(rx, ry, hw, hh) {\r\n\r\n    };\r\n\r\n    /**\r\n     * Check if point inside shape\r\n     * @param {number} x X coordinate in pixels\r\n     * @param {number} y Y coordinate in pixels\r\n     * @returns {boolean} Inside or not\r\n     */\r\n    Shape.prototype.hitTest = function(x, y) {\r\n\r\n    };\r\n\r\n    /**\r\n     * Link shape to other shapes\r\n     * @param {array} ids Array with id's\r\n     */\r\n    Shape.prototype.link = function(ids) {\r\n        var t = this;\r\n        var changed = false;\r\n        var i, l, v;\r\n        for (i = 0, l = ids.length; i < l; i++) {\r\n            v = ids[i];\r\n            if (t.props.links.indexOf(v) === -1) {\r\n                var obj = t.parent.get(v);\r\n                if (!obj || obj.props.id === t.props.id) return;\r\n                t.props.links.push(v);\r\n                if (!obj.isAnimating) changed = true;\r\n            }\r\n        }\r\n        // Request redraw static if shape was changed and laying in static\r\n        if (changed) {\r\n            t.parent.updateStatic();\r\n            t.parent.apply();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Unlink shape from other shapes\r\n     * @param {array} ids Array with id's\r\n     */\r\n    Shape.prototype.unlink = function(ids) {\r\n        var t = this;\r\n        var prevLength = t.props.links.length;\r\n        var i, l, v;\r\n        for (i = 0, l = ids.length; i < l; i++) {\r\n            v = ids[i];\r\n            var idx = t.props.links.indexOf(v);\r\n            if (idx !== -1) t.props.links.splice(idx, 1);\r\n        }\r\n        // Request redraw static if shape was changed and laying in static\r\n        if (prevLength !== t.props.links.length && !t.isAnimating) {\r\n            t.parent.updateStatic();\r\n            t.parent.apply();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Called each frame when animation was updated\r\n     * @param {Object} animatedObj Object currently animated\r\n     * @param {number} progress Animation progress [0..1]\r\n     */\r\n    Shape.prototype.onAnimationUpdate = function(animatedObj, progress) {\r\n\r\n    };\r\n\r\n    /**\r\n     * Starts animation of shape. Will tween \"props\" to \"animProps\". \"animProps\" should be exist\r\n     */\r\n    Shape.prototype.startAnimation = function(animationSpeed) {\r\n        var _this = this;\r\n\r\n        // Can't animate without animProps\r\n        if (!this.animProps) return;\r\n\r\n        // If shape is not animating, update anim count and request static update\r\n        if (!this.isAnimating) {\r\n            this.parent.animCount++;\r\n            this.parent.updateStatic();\r\n        }\r\n        this.isAnimating = true;\r\n\r\n        // Stop tween if already exists\r\n        if (this.tween) {\r\n            this.tween.stop();\r\n            this.tween = null;\r\n        }\r\n\r\n        // Calculate colors for animations\r\n        var rgbFrom;\r\n        var rgbTo;\r\n        if (this.animProps._color) {\r\n            rgbFrom = cl.Color.toRGB(this.props.color);\r\n            rgbTo = cl.Color.toRGB(this.animProps._color);\r\n            this.props.color_r = rgbFrom.r;\r\n            this.props.color_g = rgbFrom.g;\r\n            this.props.color_b = rgbFrom.b;\r\n            this.animProps.color_r = rgbTo.r;\r\n            this.animProps.color_g = rgbTo.g;\r\n            this.animProps.color_b = rgbTo.b;\r\n        }\r\n        if (this.animProps._color2) {\r\n            rgbFrom = cl.Color.toRGB(this.props.color2 || this.props.color);\r\n            rgbTo = cl.Color.toRGB(this.animProps._color2);\r\n            this.props.color2_r = rgbFrom.r;\r\n            this.props.color2_g = rgbFrom.g;\r\n            this.props.color2_b = rgbFrom.b;\r\n            this.animProps.color2_r = rgbTo.r;\r\n            this.animProps.color2_g = rgbTo.g;\r\n            this.animProps.color2_b = rgbTo.b;\r\n        }\r\n        if (this.animProps._borderColor) {\r\n            rgbFrom = cl.Color.toRGB(this.props.borderColor || this.props.color);\r\n            rgbTo = cl.Color.toRGB(this.animProps._borderColor);\r\n            this.props.borderColor_r = rgbFrom.r;\r\n            this.props.borderColor_g = rgbFrom.g;\r\n            this.props.borderColor_b = rgbFrom.b;\r\n            this.animProps.borderColor_r = rgbTo.r;\r\n            this.animProps.borderColor_g = rgbTo.g;\r\n            this.animProps.borderColor_b = rgbTo.b;\r\n        }\r\n        // Create tween for animation\r\n        this.tween = new cl.Tween(this.props)\r\n            .to(this.animProps, animationSpeed || cl.ShapeManager.ANIMATION_DURATION)\r\n            .easing(cl.Tween.EASING_QUADRATIC_OUT)\r\n            .delay(cl.ShapeManager.ANIMATION_DELAY)\r\n            .onUpdate(function (time) {\r\n                _this.onAnimationUpdate(this, time);\r\n                var r, g, b;\r\n                if (this.color_r !== undefined) {\r\n                    r = Math.floor(this.color_r);\r\n                    g = Math.floor(this.color_g);\r\n                    b = Math.floor(this.color_b);\r\n                    if (r < 0) r = 0;\r\n                    if (g < 0) g = 0;\r\n                    if (b < 0) b = 0;\r\n                    if (r > 255) r = 255;\r\n                    if (g > 255) g = 255;\r\n                    if (b > 255) b = 255;\r\n                    this.color = cl.Color.toHex(r, g, b);\r\n                }\r\n                if (this.color2_r !== undefined) {\r\n                    r = Math.floor(this.color2_r);\r\n                    g = Math.floor(this.color2_g);\r\n                    b = Math.floor(this.color2_b);\r\n                    if (r < 0) r = 0;\r\n                    if (g < 0) g = 0;\r\n                    if (b < 0) b = 0;\r\n                    if (r > 255) r = 255;\r\n                    if (g > 255) g = 255;\r\n                    if (b > 255) b = 255;\r\n                    this.color2 = cl.Color.toHex(r, g, b);\r\n                }\r\n                if (this.borderColor_r !== undefined) {\r\n                    r = Math.floor(this.borderColor_r);\r\n                    g = Math.floor(this.borderColor_g);\r\n                    b = Math.floor(this.borderColor_b);\r\n                    if (r < 0) r = 0;\r\n                    if (g < 0) g = 0;\r\n                    if (b < 0) b = 0;\r\n                    if (r > 255) r = 255;\r\n                    if (g > 255) g = 255;\r\n                    if (b > 255) b = 255;\r\n                    this.borderColor = cl.Color.toHex(r, g, b);\r\n                }\r\n            })\r\n            .onComplete(function () {\r\n                // Stop animation, but don't stop tween inside onComplete(this can cause bugs)\r\n                if (this && this.owner && this.owner.props) this.owner.stopAnimation(true);\r\n            })\r\n            .start();\r\n    };\r\n\r\n    /**\r\n     * Returns shape id\r\n     * @returns {number} Id\r\n     */\r\n    Shape.prototype.getId = function() {\r\n        return this.props.id;\r\n    };\r\n\r\n    /**\r\n     * Updates shape properties\r\n     * @param {object} newProps New properties\r\n     * @param {boolean} [animate=false] Animate properties change\r\n     * @param {number} [animationDuration={@link cl.ShapeManager.ANIMATION_DURATION}] Animation speed in ms\r\n     * @returns {boolean} Is shape changed or not\r\n     */\r\n    Shape.prototype.setProps = function(newProps, animate, animationDuration) {\r\n        if (this._isDragged) return false;\r\n        // Get animation properties\r\n        var result = this.calcAnimProps(newProps);\r\n        if (result) {\r\n            // Check max animated items and don't start animation if full\r\n            if (!this.isAnimating) {\r\n                if (animate && this.parent.animCount >= cl.ShapeManager.MAX_ANIMATED_ITEMS) animate = false;\r\n            }\r\n            if (!animate) {\r\n                // Stop animation if running\r\n                if (this.isAnimating) this.stopAnimation();\r\n                // If no animation, set all properties immediately\r\n                cl.Utils.merge(this.props, this.animProps, [\"id\", \"owner\"]);\r\n                // If shape was in static layer, update it. No need to update animated shape, because it will update every frame\r\n                this.parent.updateStatic();\r\n            } else this.startAnimation(animationDuration);\r\n\r\n            // Say to parent that something is changed\r\n            this.parent.apply();\r\n\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    /**\r\n     * Returns shape properties\r\n     * @returns {object} Shape properties\r\n     */\r\n    Shape.prototype.getProps = function() {\r\n        return cl.Utils.merge({}, this.props, [\"owner\"]);\r\n    };\r\n\r\n    /**\r\n     * Calculate changed properties for animation\r\n     * @param {object} newProps New properties\r\n     * @returns {boolean} Is shape changed or not\r\n     */\r\n    Shape.prototype.calcAnimProps = function(newProps) {\r\n        this.animProps = {\r\n            changed: false\r\n        };\r\n        this.animProps.owner = this;\r\n        if (this._isDragged) return false;\r\n        if (newProps.x !== undefined && newProps.x !== this.props.x) {\r\n            this.animProps.x = newProps.x;\r\n            this.animProps.changed = true;\r\n        }\r\n        if (newProps.y !== undefined && newProps.y !== this.props.y) {\r\n            this.animProps.y = newProps.y;\r\n            this.animProps.changed = true;\r\n        }\r\n        if (newProps.color !== undefined && cl.Color.fromString(newProps.color) !== cl.Color.fromString(this.props.color)) {\r\n            this.animProps._color = newProps.color;\r\n            this.animProps.changed = true;\r\n        }\r\n        if (newProps.borderColor !== undefined && cl.Color.fromString(newProps.borderColor) !== cl.Color.fromString(this.props.borderColor)) {\r\n            this.animProps._borderColor = newProps.borderColor;\r\n            this.animProps.changed = true;\r\n        }\r\n        if (newProps.border !== undefined && newProps.border !== this.props.border) {\r\n            this.animProps.border = newProps.border;\r\n            this.animProps.changed = true;\r\n        }\r\n        if (newProps.opacity !== undefined &&  newProps.opacity !== this.props.opacity) {\r\n            this.animProps.opacity = newProps.opacity;\r\n            this.animProps.changed = true;\r\n        }\r\n\r\n        return this.animProps.changed;\r\n    };\r\n\r\n    /**\r\n     * Apply shape changes\r\n     */\r\n    Shape.prototype.apply = function() {\r\n        this.parent.apply();\r\n    };\r\n\r\n    /**\r\n     * Renders shape on canvas\r\n     * @param {cl.Canvas} canvas\r\n     * @private\r\n     */\r\n    Shape.prototype._render = function(canvas) {\r\n\r\n    };\r\n\r\n    /**\r\n     * Renders shape hover on canvas\r\n     * @param {cl.Canvas} canvas\r\n     * @param {number} [offset=0] Hover offset\r\n     * @private\r\n     */\r\n    Shape.prototype._renderHover = function(canvas, offset) {\r\n\r\n    };\r\n\r\n    /**\r\n     * Stops animation\r\n     * @param {boolean} [dontStopTween=false] Don't stop tween. Not usable in general cases. Used only if method called from onComplete tween event\r\n     */\r\n    Shape.prototype.stopAnimation = function(dontStopTween) {\r\n        // Set all props to animProps, because this is end of animation\r\n        if (this.tween && this.animProps) {\r\n            if (this.animProps._color) this.props.color = cl.Color.fromString(this.animProps._color);\r\n            if (this.animProps._color2) this.props.color2 = cl.Color.fromString(this.animProps._color2);\r\n            if (this.animProps._borderColor) this.props.borderColor = cl.Color.fromString(this.animProps._borderColor);\r\n            cl.Utils.merge(this.props, this.animProps, [\"id\", \"owner\", \"_color\", \"_color2\", \"_borderColor\", \"_pointColor\", \"_pointColor2\"]);\r\n        }\r\n\r\n        if (this.tween && !dontStopTween) this.tween.stop();\r\n        this.tween = null;\r\n        this.animProps = null;\r\n        if (this.isAnimating) this.parent.animCount--;\r\n    };\r\n\r\n    /**\r\n     * Destroys shape\r\n     */\r\n    Shape.prototype.destroy = function() {\r\n        this.stopAnimation();\r\n        this.props.owner = null;\r\n        this.props = null;\r\n        this.parent = null;\r\n    };\r\n\r\n    namespace.Shape = Shape;\r\n\r\n})(cl);\n/**\r\n * @module shapes/shapeManager\r\n * @description Module describes shape manager class\r\n * @author Anton Gnibeda\r\n */\r\n(function(namespace) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Represent shapes manager class. Stores bubbles, polys and other chart shapes.\r\n     *\r\n     * @constructor\r\n     * @extends cl.Layer\r\n     * @memberOf cl\r\n     *\r\n     * @param {cl.Chart} chart Parent chart\r\n     * @param {Object} [options] Shape manager settings\r\n     *\r\n     * @param {Object} [options.links] Links settings\r\n     * @param {number} [options.links.width=1] Line width\r\n     * @param {string} [options.links.color={@link cl.Consts.COLOR_BLACK}] Link color\r\n     * @param {number} [options.links.opacity=0.5] Link opacity\r\n     *\r\n     * @param {Object} [options.centers] Shapes center display settings\r\n     * @param {boolean} [options.centers.visible=false] Visible or not\r\n     * @param {number} [options.centers.width=1] Line width\r\n     * @param {number} [options.centers.size=3] Radius\r\n     * @param {number} [options.centers.opacity=0.3] Opacity\r\n     * @param {string} [options.centers.color={@link cl.Consts.COLOR_BLACK}] Line color\r\n     */\r\n    function ShapeManager(chart, options) {\r\n        var t = this;\r\n        cl.Layer.call(t, chart);\r\n\r\n        // Indicates that some object moved to(from) static layer. So layer should be redrawn\r\n        t._shouldRedrawStatic = false;\r\n        // Counts objects that currently is animating\r\n        t._animCount = 0;\r\n        // Stores shapes to fast access by id\r\n        t._hash = [];\r\n\r\n        // Public fields\r\n        t.chart = chart;\r\n        t.items = [];\r\n        t.dirtyFlagName = \"items\";\r\n        t.static = new cl.Canvas(chart.width, chart.height);\r\n        t.options = {\r\n            zIndexUsage: false,\r\n            links: {\r\n                width: 1,\r\n                color: cl.Consts.COLOR_BLACK,\r\n                opacity: 0.5\r\n            },\r\n            centers: {\r\n                visible: false,\r\n                width: 1,\r\n                size: 3,\r\n                opacity: 0.3,\r\n                color: cl.Consts.COLOR_BLACK\r\n            }\r\n        };\r\n        cl.Utils.merge(t.options, options || {});\r\n\r\n        // Define properties\r\n        Object.defineProperties(t, {\r\n            animCount: {\r\n                get: function() { return t._animCount; },\r\n                set: function(v) {t._animCount = v; if (t._animCount === 0) t._endAnimation(); }\r\n            },\r\n            isAnimating: { get: function() { return t._animCount !== 0; } },\r\n            count: { get: function() { return t.items.length; } }\r\n        });\r\n    }\r\n\r\n    cl.Utils.extend(ShapeManager, cl.Layer);\r\n\r\n    /**\r\n     * Parent chart\r\n     * @type {cl.Chart}\r\n     */\r\n    ShapeManager.prototype.chart = null;\r\n\r\n    /**\r\n     * Shape array\r\n     * @type {Array.<cl.Shape>}\r\n     */\r\n    ShapeManager.prototype.items = null;\r\n\r\n    /**\r\n     * Shapes count\r\n     * @type {number}\r\n     */\r\n    ShapeManager.prototype.count = 0;\r\n\r\n    /**\r\n     * if any shapes is in animation state\r\n     * @type {boolean}\r\n     */\r\n    ShapeManager.prototype.isAnimating = true;\r\n\r\n    /**\r\n     * Count of shapes currently animated\r\n     * @type {number}\r\n     */\r\n    ShapeManager.prototype.animCount = 0;\r\n\r\n    /**\r\n     * Shape manager settings. Same as options in constructor\r\n     * @type {Object}\r\n     */\r\n    ShapeManager.prototype.options = null;\r\n\r\n    /**\r\n     * Canvas for static shapes. All static shapes will be rendered here\r\n     * @type {cl.Canvas}\r\n     */\r\n    ShapeManager.prototype.static = null;\r\n\r\n\r\n    /**\r\n     * Returns new id. Can be used to generate ids for new shapes\r\n     * @returns {number} New id\r\n     */\r\n    ShapeManager.prototype.getNewId = function() {\r\n        var t = this;\r\n        var id = 0;\r\n        for (var i = 0; i < t.items.length; i++) {\r\n            var eId = parseInt(t.items[i].props.id);\r\n            if (isNaN(eId)) continue;\r\n            if (eId > id) id = eId;\r\n        }\r\n        return id + 1;\r\n    };\r\n\r\n    /**\r\n     * Renders all axis on surface\r\n     * @override\r\n     */\r\n    ShapeManager.prototype._render = function() {\r\n        var i, l,\r\n            t = this,\r\n            items = t.items;\r\n\r\n        // Sort shapes based on zIndex\r\n        if (t.options.zIndexUsage === true) items = t.items.sort(zIndexSorter);\r\n\r\n        // Render static shapes if needed\r\n        if (t._shouldRedrawStatic) {\r\n            t._shouldRedrawStatic = false;\r\n            t.static.resetTransform();\r\n            t.static.clear();\r\n            for (i = 0, l = items.length; i < l; i++) if (!items[i].isAnimating) items[i]._render(t.static, t.chart);\r\n\r\n            t._renderLinks(t.static, true);\r\n            t._renderCenters(t.static, true);\r\n        }\r\n\r\n        // Render animated shapes\r\n        t.surface.resetTransform();\r\n        t.surface.clear();\r\n        t.surface.setAlpha(1);\r\n        t.static.setAlpha(1);\r\n        t.surface.draw(t.static, 0, 0);\r\n        for (i = 0, l = items.length; i < l; i++)  if (items[i].isAnimating) items[i]._render(t.surface, t.chart);\r\n        t._renderLinks(t.surface, false);\r\n        t._renderCenters(t.surface, false);\r\n        t._renderTracks(items);\r\n    };\r\n\r\n    /**\r\n     * Renders animated shapes tracks\r\n     * @param {Array<cl.Shape>} items Shapes\r\n     * @private\r\n     */\r\n    ShapeManager.prototype._renderTracks = function(items) {\r\n        var i, l, t = this;\r\n        for (i = 0, l = items.length; i < l; i++)  if (items[i].isAnimating && items[i].props.track.enabled && items[i].animProps) {\r\n            var x1, y1, x2, y2;\r\n            x1 = t.chart.xAxis.toScreen(items[i].props.x);\r\n            y1 = t.chart.yAxis.toScreen(items[i].props.y);\r\n            x2 = t.chart.xAxis.toScreen(items[i].animProps.x);\r\n            y2 = t.chart.yAxis.toScreen(items[i].animProps.y);\r\n            t.surface.ctx.strokeStyle = items[i].props.track.color;\r\n            t.surface.ctx.lineWidth = items[i].props.track.width;\r\n            t.surface.ctx.beginPath();\r\n            t.surface.ctx.moveTo(x1, y1);\r\n            t.surface.ctx.lineTo(x2, y2);\r\n            t.surface.ctx.stroke();\r\n\r\n            if (items[i].props.track.startSize !== 0 && items[i].props.track.endSize !== 0) {\r\n                t.surface.ctx.fillStyle = items[i].props.track.color;\r\n                if (items[i].props.track.startSize !== 0)\r\n                    t.surface.ctx.arc(x1, y1, items[i].props.track.startSize, 0, cl.Consts.TWO_PI, false);\r\n                if (items[i].props.track.endSize !== 0)\r\n                    t.surface.ctx.arc(x2, y2, items[i].props.track.endSize, 0, cl.Consts.TWO_PI, false);\r\n                t.surface.ctx.fill();\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Renders links lines\r\n     * @param {cl.Canvas} canvas Canvas\r\n     * @param {boolean} [staticPass=false] Is this static pass or not\r\n     * @private\r\n     */\r\n    ShapeManager.prototype._renderLinks = function(canvas, staticPass) {\r\n        var i, k, l, lc, t = this;\r\n\r\n        canvas.ctx.lineWidth = t.options.links.width;\r\n        canvas.ctx.strokeStyle = t.options.links.color;\r\n        canvas.setAlpha(t.options.links.opacity);\r\n        canvas.ctx.beginPath();\r\n\r\n        for (i = 0, l = t.items.length; i < l; i++) {\r\n            var isStatic = !t.items[i].isAnimating;\r\n            if (!isStatic && staticPass) continue;\r\n            lc = t.items[i].props.links.length;\r\n            if (lc === 0) continue;\r\n            var x = t.chart.toScreenX(t.items[i].getCenterX());\r\n            var y = t.chart.toScreenY(t.items[i].getCenterY());\r\n            for (k = 0; k < lc; k++) {\r\n                if (t.items[i].props.links[k] == t.items[i].props.id) continue;\r\n                var obj = t.get(t.items[i].props.links[k]);\r\n                if (!obj) continue;\r\n                if (obj.isAnimating && staticPass) continue;\r\n                if (!staticPass && (isStatic && !obj.isAnimating)) continue;\r\n                var tx = t.chart.toScreenX(obj.getCenterX());\r\n                var ty = t.chart.toScreenY(obj.getCenterY());\r\n                canvas.ctx.moveTo(x, y);\r\n                canvas.ctx.lineTo(tx, ty);\r\n            }\r\n        }\r\n        canvas.ctx.stroke();\r\n        canvas.ctx.closePath();\r\n    };\r\n\r\n    /**\r\n     * Renders shapes centers\r\n     * @param {cl.Canvas} canvas Canvas\r\n     * @param {boolean} [staticPass=false] Is this static pass or not\r\n     * @private\r\n     */\r\n    ShapeManager.prototype._renderCenters = function(canvas, staticPass) {\r\n        var i, l, x, y, t = this;\r\n        if (!t.options.centers.visible) return;\r\n        canvas.setAlpha(t.options.centers.opacity);\r\n        canvas.setLineStyle(t.options.centers.width, t.options.centers.color);\r\n        canvas.ctx.beginPath();\r\n        for (i = 0, l = t.items.length; i < l; i++) {\r\n            if (staticPass && t.items[i].isAnimating) continue;\r\n            if (!staticPass && !t.items[i].isAnimating) continue;\r\n            x = t.chart.toScreenX(t.items[i].getCenterX());\r\n            y = t.chart.toScreenY(t.items[i].getCenterY());\r\n            canvas.ctx.moveTo(x + t.options.centers.size, y);\r\n            canvas.drawCircle(x, y, t.options.centers.size);\r\n        }\r\n        canvas.ctx.stroke();\r\n        canvas.ctx.closePath();\r\n    };\r\n\r\n    /**\r\n     * Hides shapes centers\r\n     */\r\n    ShapeManager.prototype.hideCenters = function() {\r\n        var t = this;\r\n        t.options.centers.visible = false;\r\n        t.updateStatic();\r\n        t.apply();\r\n    };\r\n\r\n    /**\r\n     * Shows shapes centers\r\n     */\r\n    ShapeManager.prototype.showCenters = function() {\r\n        var t = this;\r\n        t.options.centers.visible = true;\r\n        t.updateStatic();\r\n        t.apply();\r\n    };\r\n\r\n    /**\r\n     * Called after all animations are ended (animCount == 0). Used to move all animated items back to static layer\r\n     * @private\r\n     */\r\n    ShapeManager.prototype._endAnimation = function() {\r\n        var i, l,\r\n            found = false,\r\n            itemsMovOnTop = [],\r\n            t = this;\r\n\r\n        // Store items with completed animation\r\n        for (i = 0, l = t.items.length; i < l; i++) if (t.items[i].isAnimating && t.items[i].tween === null) {\r\n            t.items[i].isAnimating = false;\r\n            found = true;\r\n            itemsMovOnTop.push(t.items[i]);\r\n        }\r\n        // Move animated shapes on top (works only if zIndex is disabled)\r\n        for (i = 0, l = itemsMovOnTop.length; i < l; i++) {\r\n            var idx = t.items.indexOf( itemsMovOnTop[i]);\r\n            t.items.splice(idx, 1);\r\n        }\r\n        for (i = 0, l = itemsMovOnTop.length; i < l; i++) t.items.push(itemsMovOnTop[i]);\r\n\r\n        t.updateStatic();\r\n        t.apply();\r\n    };\r\n\r\n    /**\r\n     * Returns item with specified id. Will return first item with id. Returns undefined if id was not found\r\n     * @param {number} id Id of item\r\n     * @returns {cl.Shape} Shape with specified id\r\n     */\r\n    ShapeManager.prototype.get = function(id) {\r\n        var t = this;\r\n        if (t._hash[id]) return t._hash[id];\r\n    };\r\n\r\n    /**\r\n     * Removes all shapes\r\n     */\r\n    ShapeManager.prototype.clear = function() {\r\n        var t = this;\r\n\r\n        // Remove hover\r\n        if (t.chart.selector.hover) {\r\n            t.chart.selector.hover = null;\r\n            t.chart.selector.apply();\r\n        }\r\n        if (t.chart.events._hoveredShape) t.chart.events._hoveredShape = null;\r\n\r\n        // Remove shapes. Destroy would be called in remove function\r\n        while (t.count !== 0) t.remove(t.items[0]);\r\n\r\n        // Remove shapes from selection\r\n        t.chart.selector.selection = [];\r\n        t.chart.selector.apply();\r\n\r\n        // Update static and redraw\r\n        t.updateStatic();\r\n        t.apply();\r\n    };\r\n\r\n    /**\r\n     * Adds shapes by defined class\r\n     * @param {Object|array} item Shapes to add. Can be single shape or array\r\n     * @param {Function} ShapeClass Shape class to create. For example: \"cl.Bubble\"\r\n     * @param {boolean} [allowAnimation=false] Allow animations on property changes\r\n     * @param {number} [animationDuration={@link cl.ShapeManager.ANIMATION_DURATION}] Duration of animation in ms\r\n     * @example\r\n     * // Add bubbles\r\n     * chart.shapes.add([{ id: 1, x: 10, y: 10, size: 5 }, { id: 2, x: 80, y: 60, size: 20 }], cl.Bubble);\r\n     *\r\n     * // Modify exists bubbles with animation\r\n     * chart.shapes.add([{ id: 1, x: 40, y: 90, size: 30 }, { id: 2, x: 20, y: 40, size: 4 }], cl.Bubble, true);\r\n     *\r\n     * // Add poly line\r\n     * chart.shapes.add([{ id: 3, border: 2, color: \"red\", closed: true, points: [10, 10, 10, 50, 50, 50] }], cl.PolyLine);\r\n     */\r\n    ShapeManager.prototype.add = function(item, ShapeClass, allowAnimation, animationDuration) {\r\n        var i, l, it, obj, shape,\r\n            t = this,\r\n            aa = allowAnimation || false;\r\n\r\n        // Check if class specified\r\n        if (!ShapeClass) throw new Error(cl.Lang.get(\"errNoShapeClass\"));\r\n\r\n        // If passed one item - make array\r\n        if (!(item instanceof Array)) it = [item];  else it = item;\r\n\r\n        // Add items\r\n        for (i = 0, l = it.length; i < l; i++) {\r\n            // Can't add without id prop\r\n            if (it[i].id === undefined) throw new Error(cl.Lang.get(\"errShapeNoParam\", \"id\"));\r\n            obj = t.get(it[i].id);\r\n            if (obj) {\r\n                // If found - update properties\r\n                if (obj.constructor !== ShapeClass) throw new Error(cl.Lang.get(\"errShapeType\"));\r\n                var changed = obj.setProps(it[i], aa, animationDuration);\r\n                if (changed && !obj.isAnimating) t.updateStatic();\r\n            } else {\r\n                // If not found -  create new\r\n                shape = new ShapeClass(t, it[i]);\r\n                t.items.push(shape);\r\n                t._hash[it[i].id] = shape;\r\n                t.updateStatic();\r\n            }\r\n        }\r\n\r\n        t.apply();\r\n    };\r\n\r\n\r\n    /**\r\n     * Removes item from shapes array\r\n     * @param {cl.Shape} item Shape to remove\r\n     * @private\r\n     */\r\n    ShapeManager.prototype._removeItem = function(item) {\r\n        var t = this;\r\n        if (!item) return;\r\n\r\n        // Find item index\r\n        var idx = t.items.indexOf(item);\r\n        if (idx === -1 || !t.items[idx]) return;\r\n\r\n        // Clear ids hash\r\n        delete t._hash[item.props.id];\r\n\r\n        // Remove item from shapes array\r\n        t.items.splice(idx, 1);\r\n        t.apply();\r\n\r\n        // Remove item from selection\r\n        idx = t.chart.selector.selection.indexOf(item);\r\n        if (idx !== -1) {\r\n            t.chart.selector.selection.splice(idx, 1);\r\n            t.chart.selector.apply();\r\n        }\r\n\r\n        // Remove item from hover\r\n        if (t.chart.selector.hover === item) {\r\n            t.chart.selector.hover = null;\r\n            t.chart.selector.apply();\r\n        }\r\n        if (t.chart.events._hoveredShape === item) t.chart.events._hoveredShape = null;\r\n        // Destroy item\r\n        item.destroy();\r\n    };\r\n\r\n    /**\r\n     * Removes item\r\n     * @param {cl.Shape|number} item Shape itself or shape id\r\n     */\r\n    ShapeManager.prototype.remove = function(item) {\r\n        var t = this;\r\n        switch (typeof item) {\r\n            case \"object\": {\r\n                t._removeItem(item);\r\n                break;\r\n            }\r\n            default: {\r\n                t._removeItem(t.get(item));\r\n                break;\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    ShapeManager.prototype.resize = function(width, height) {\r\n        var t = this;\r\n\r\n        // Resize static layer\r\n        t.static.resize(width, height);\r\n        t.updateStatic();\r\n\r\n        t.constructor.superclass.resize.call(t, width, height);\r\n        return t;\r\n    };\r\n\r\n    /**\r\n     * Request for static update. Will update static layer on next frame render\r\n     */\r\n    ShapeManager.prototype.updateStatic = function() {\r\n        this._shouldRedrawStatic = true;\r\n    };\r\n\r\n    /**\r\n     * Used to sort shapes based on zIndex\r\n     * @private\r\n     * @param {cl.Shape} a First shape\r\n     * @param {cl.Shape} b Second shape\r\n     * @returns {number} Sort result\r\n     */\r\n    function zIndexSorter(a, b) {\r\n        return (a.props.zIndex < b.props.zIndex) ? -1: 1;\r\n    }\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    ShapeManager.prototype.destroy = function() {\r\n        var t = this;\r\n        // Destroy all shapes\r\n        t.clear();\r\n\r\n        t.items = null;\r\n        t.static.destroy();\r\n        t._hash = null;\r\n\r\n        t.constructor.superclass.destroy.call(t);\r\n    };\r\n\r\n    //////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Maximum of animated items at same time. Needed due canvas rendering limitations for smooth animations\r\n     * @type {number}\r\n     * @default 500\r\n     * @const\r\n     */\r\n    ShapeManager.MAX_ANIMATED_ITEMS = 500;\r\n    /**\r\n     * Default animation delay for all animations. Needed for smooth animations, because before animation start, static layer should be redrawn and this can take a bit of time\r\n     * @type {number}\r\n     * @default 100\r\n     * @const\r\n     */\r\n    ShapeManager.ANIMATION_DELAY = 100;\r\n    /**\r\n     * Default animation duration in ms\r\n     * @type {number}\r\n     * @default 400\r\n     * @const\r\n     */\r\n    ShapeManager.ANIMATION_DURATION = 400;\r\n\r\n    namespace.ShapeManager = ShapeManager;\r\n\r\n})(cl);\n/**\r\n * @module shapes/bubble\r\n * @description Module describes bubble class.\r\n * @author Anton Gnibeda\r\n */\r\n(function(namespace) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Represent bubble shape class\r\n     *\r\n     * @extends cl.Shape\r\n     * @constructor\r\n     * @memberof cl\r\n     *\r\n     * @param {object} parent Parent shape manager\r\n     * @param {object} props shape settings\r\n     * @param {object} props.id Shape id\r\n     * @param {string} [props.cursor] Change cursor to specified when shape is hovered\r\n     * @param {object} props.size Bubble radius in pixels\r\n     * @param {object} [props.color=cl.Consts.COLOR_RED] Shape color\r\n     * @param {object} [props.borderColor=props.color] Shape border color\r\n     * @param {object} [props.border=1] Shape border width\r\n     * @param {object} [props.opacity=0.3] Shape opacity\r\n     * @param {array} [props.lineDash=[]] Shape line dash. Example: [2, 2]\r\n     * @param {array} [props.links=[]] Array of linked shapes id's\r\n     * @param {boolean} [props.draggable=true] Is shape draggable\r\n     * @param {object} [props.track] Shape track. Can be displayed while shape is animating\r\n     * @param {boolean} [props.track.enabled=false] Enabled or not\r\n     * @param {number} [props.track.width=1] Line width\r\n     * @param {string} [props.track.color=cl.Consts.COLOR_GREEN] Line color\r\n     * @param {number} [props.track.opacity=0.4] Line opacity\r\n     * @param {object} [props.hover] Hover style\r\n     * @param {boolean} [props.hover.enabled=true] Is hover enabled\r\n     * @param {number} [props.hover.border] Hover border size\r\n     * @param {string} [props.hover.color] Hover color\r\n     * @param {number} [props.hover.opacity] Hover opacity\r\n     * @param {number} [props.hover.offset] Hover offset\r\n     **/\r\n    function Bubble(parent, props) {\r\n        var t = this;\r\n        cl.Shape.call(t, parent, props);\r\n\r\n        if (t.props.size === undefined) throw new Error(cl.Lang.get(\"errShapeNoParam\", \"size\"));\r\n    }\r\n\r\n    cl.Utils.extend(Bubble, cl.Shape);\r\n\r\n    Bubble.prototype.type = \"bubble\";\r\n\r\n    /**\r\n     * Returns shape area in pixels\r\n     * @override\r\n     */\r\n    Bubble.prototype.getPixelArea = function() {\r\n        var t = this;\r\n        var border = (t.props.border || 0) / 2;\r\n        return Math.PI * (t.props.size + border) * (t.props.size + border);\r\n    };\r\n\r\n    /**\r\n     * Returns shape bounds\r\n     * @override\r\n     */\r\n    Bubble.prototype.getBounds = function() {\r\n        var t = this;\r\n        var border = (t.props.border || 0) / 2;\r\n        return {\r\n            x: t.parent.chart.xAxis.toScreen(t.props.x) - t.props.size - border,\r\n            y: t.parent.chart.yAxis.toScreen(t.props.y) - t.props.size - border,\r\n            w: (t.props.size + border) * 2,\r\n            h: (t.props.size + border) * 2\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Checks if shape intersecting rectangle\r\n     * @override\r\n     */\r\n    Bubble.prototype.hitTestRect = function(rx, ry, hw, hh) {\r\n        var t = this;\r\n        var cx = t.parent.chart.xAxis.toScreen(t.props.x);\r\n        var cy = t.parent.chart.yAxis.toScreen(t.props.y);\r\n        var cdx = Math.abs(cx - rx);\r\n        var cdy = Math.abs(cy - ry);\r\n\r\n        // Include line border in radius\r\n        var r = t.props.size + (t.props.border || 0) / 2;\r\n\r\n        if (cdx > hw + r) { return false; }\r\n        if (cdy > hh + r) { return false; }\r\n\r\n        if (cdx <= hw ) { return true; }\r\n        if (cdy <= hh ) { return true; }\r\n\r\n        var cdsq = (cdx - hw) * (cdx - hw) + (cdy - hh) * (cdy - hh);\r\n\r\n        return cdsq <= r * r;\r\n    };\r\n\r\n    /**\r\n     * Check if point inside shape\r\n     * @override\r\n     */\r\n    Bubble.prototype.hitTest = function(x, y) {\r\n        var t = this;\r\n        var bx = t.parent.chart.xAxis.toScreen(t.props.x);\r\n        var by = t.parent.chart.yAxis.toScreen(t.props.y);\r\n        var border = (t.props.border || 0) / 2;\r\n        return (x - bx) * (x - bx) + (y - by) * (y - by) <= (t.props.size + border) * (t.props.size + border);\r\n    };\r\n\r\n    /**\r\n     * Updates shape properties\r\n     * @override\r\n     */\r\n    Bubble.prototype.calcAnimProps = function(newProps) {\r\n        var t = this;\r\n        cl.Shape.prototype.calcAnimProps.call(t, newProps);\r\n\r\n        if (newProps.size !== undefined && newProps.size !== t.props.size) {\r\n            t.animProps.size = newProps.size;\r\n            t.animProps.changed = true;\r\n        }\r\n        return t.animProps.changed;\r\n    };\r\n\r\n    /**\r\n     * Renders bubble on canvas\r\n     * @override\r\n     */\r\n    Bubble.prototype._render = function(canvas) {\r\n        var t = this;\r\n        if (t._isDragged) return;\r\n        var chart = t.parent.chart;\r\n        if (t.props.size >= 0) {\r\n            canvas.setAlpha(t.props.opacity);\r\n            canvas.setFillColor(t.props.color);\r\n            if (t.props.border) canvas.setLineStyle(t.props.border, t.props.borderColor, true);\r\n            if (t.props.lineDash) canvas.setLineDash(t.props.lineDash);\r\n            canvas.ctx.beginPath();\r\n            canvas.ctx.arc(chart.xAxis.toScreen(t.props.x), chart.yAxis.toScreen(t.props.y), t.props.size, 0, cl.Consts.TWO_PI, false);\r\n            canvas.ctx.fill();\r\n            if (t.props.border) canvas.ctx.stroke();\r\n            canvas.ctx.closePath();\r\n            if (t.props.lineDash) canvas.setLineDash([]);\r\n        }\r\n\r\n        cl.Shape.prototype._render.call(t, canvas);\r\n    };\r\n\r\n    /**\r\n     * Renders bubble hover on canvas\r\n     * @override\r\n     */\r\n    Bubble.prototype._renderHover = function(canvas, offset) {\r\n        var t = this;\r\n        if (t._isDragged) return;\r\n        offset = (offset || 0) + (t.props.border || 0) / 2;\r\n        var chart = t.parent.chart;\r\n        if (t.props.size >= 0) {\r\n            var x = chart.xAxis.toScreen(t.props.x);\r\n            var y = chart.yAxis.toScreen(t.props.y);\r\n            canvas.ctx.moveTo(x + t.props.size + offset, y);\r\n            canvas.ctx.arc(x, y, t.props.size + offset, 0, cl.Consts.TWO_PI, false);\r\n        }\r\n\r\n        cl.Shape.prototype._renderHover.call(t, canvas);\r\n    };\r\n\r\n    namespace.Bubble = Bubble;\r\n\r\n})(cl);\n/**\r\n * @module shapes/centroid\r\n * @description Module describes centroid class.\r\n * @author Anton Gnibeda\r\n */\r\n(function(namespace) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Represent centroid shape class\r\n     *\r\n     * @extends cl.Bubble\r\n     * @constructor\r\n     * @memberof cl\r\n     *\r\n     * @param {object} parent Parent shape manager\r\n     * @param {object} props shape settings\r\n     * @param {object} props.id Shape id\r\n     * @param {string} [props.cursor] Change cursor to specified when shape is hovered\r\n     * @param {object} [props.x=0] Shape X coordinate\r\n     * @param {object} [props.y=0] Shape Y coordinate\r\n     * @param {object} props.size Bubble radius in pixels\r\n     * @param {object} [props.color=cl.Consts.COLOR_RED] Shape color\r\n     * @param {object} [props.border=1] Shape border width\r\n     * @param {object} [props.opacity=0.3] Shape opacity\r\n     * @param {array} [props.lineDash=[]] Shape line dash. Example: [2, 2]\r\n     * @param {array} [props.links=[]] Array of linked shapes id's\r\n     * @param {boolean} [props.draggable=true] Is shape draggable\r\n     * @param {object} [props.track] Shape track. Can be displayed while shape is animating\r\n     * @param {boolean} [props.track.enabled=false] Enabled or not\r\n     * @param {number} [props.track.width=1] Line width\r\n     * @param {string} [props.track.color=cl.Consts.COLOR_GREEN] Line color\r\n     * @param {number} [props.track.opacity=0.4] Line opacity\r\n     * @param {object} [props.hover] Hover style\r\n     * @param {boolean} [props.hover.enabled=true] Is hover enabled\r\n     * @param {number} [props.hover.border] Hover border size\r\n     * @param {string} [props.hover.color] Hover color\r\n     * @param {number} [props.hover.opacity] Hover opacity\r\n     * @param {number} [props.hover.offset] Hover offset\r\n     **/\r\n    function Centroid(parent, props) {\r\n        var t = this;\r\n        cl.Bubble.call(t, parent, props);\r\n    }\r\n\r\n    cl.Utils.extend(Centroid, cl.Bubble);\r\n\r\n    Centroid.prototype.type = \"centroid\";\r\n\r\n    namespace.Centroid = Centroid;\r\n\r\n})(cl);\n/**\r\n * @module shapes/rect\r\n * @description Module describes rect class. Class for rectangular shapes\r\n * @author Anton Gnibeda\r\n */\r\n(function(namespace) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Represent rectangle shape class\r\n     *\r\n     * @extends cl.Shape\r\n     * @constructor\r\n     * @memberof cl\r\n     *\r\n     * @param {object} parent Parent shape manager\r\n     * @param {object} props shape settings\r\n     * @param {object} props.id Shape id\r\n     * @param {string} [props.cursor] Change cursor to specified when shape is hovered\r\n     * @param {object} [props.x=0] First corner X coordinate\r\n     * @param {object} [props.y=0] First corner Y coordinate\r\n     * @param {number} props.x2 Second corner X coordinate\r\n     * @param {number} props.y2 Second corner Y coordinate\r\n     * @param {string} [props.color=cl.Consts.COLOR_RED] First corner color\r\n     * @param {object} [props.borderColor=props.color] Shape border color\r\n     * @param {string} [props.color2] Second corner color\r\n     * @param {object} [props.border=1] Shape border width\r\n     * @param {number} [props.borderRadius=0] Border radius\r\n     * @param {object} [props.opacity=0.3] Shape opacity\r\n     * @param {array} [props.lineDash=[]] Shape line dash. Example: [2, 2]\r\n     * @param {array} [props.links=[]] Array of linked shapes id's\r\n     * @param {boolean} [props.draggable=true] Is shape draggable\r\n     * @param {object} [props.track] Shape track. Can be displayed while shape is animating\r\n     * @param {boolean} [props.track.enabled=false] Enabled or not\r\n     * @param {number} [props.track.width=1] Line width\r\n     * @param {string} [props.track.color=cl.Consts.COLOR_GREEN] Line color\r\n     * @param {number} [props.track.opacity=0.4] Line opacity\r\n     * @param {object} [props.hover] Hover style\r\n     * @param {boolean} [props.hover.enabled=true] Is hover enabled\r\n     * @param {number} [props.hover.border] Hover border size\r\n     * @param {string} [props.hover.color] Hover color\r\n     * @param {number} [props.hover.opacity] Hover opacity\r\n     * @param {number} [props.hover.offset] Hover offset\r\n     **/\r\n    function Rect(parent, props) {\r\n        var t = this;\r\n        cl.Shape.call(t, parent, props);\r\n\r\n        var opt = props || {};\r\n        opt.borderRadius = opt.borderRadius || 0;\r\n        if (t.props.color2) t.props.color2 = cl.Color.fromString(t.props.color2);\r\n\r\n        if (t.props.x2 === undefined) throw new Error(cl.Lang.get(\"errShapeNoParam\", \"x2\"));\r\n        if (t.props.y2 === undefined) throw new Error(cl.Lang.get(\"errShapeNoParam\", \"y2\"));\r\n    }\r\n\r\n    cl.Utils.extend(Rect, cl.Shape);\r\n\r\n    ///////////////////////////////////////////// PROPERTIES //////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Shape type\r\n     * @override\r\n     */\r\n    Rect.prototype.type = \"rect\";\r\n\r\n    /////////////////////////////////////////////// METHODS ///////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Returns shape area in pixels\r\n     * @override\r\n     */\r\n    Rect.prototype.getPixelArea = function() {\r\n        var bounds = this.getBounds();\r\n        return bounds.w * bounds.h;\r\n    };\r\n\r\n    /**\r\n     * Returns X coordinate of shape center\r\n     * @override\r\n     */\r\n    Rect.prototype.getCenterX = function() {\r\n        var x1, x2, t = this;\r\n        // Find right coordinates order: (x1, y1) -> should be top left corner\r\n        if (t.props.x < t.props.x2) { x1 = t.props.x; x2 = t.props.x2; } else { x1 = t.props.x2; x2 = t.props.x; }\r\n        return (x1 + Math.abs(x2 - x1) / 2);\r\n    };\r\n\r\n    /**\r\n     * Returns Y coordinate of shape center\r\n     * @override\r\n     */\r\n    Rect.prototype.getCenterY = function() {\r\n        var y1, y2, t = this;\r\n        // Find right coordinates order: (x1, y1) -> should be top left corner\r\n        if (t.props.y < t.props.y2) { y1 = t.props.y; y2 =  t.props.y2; } else { y1 = t.props.y2; y2 = t.props.y; }\r\n        return (y1 + Math.abs(y2 - y1) / 2);\r\n    };\r\n\r\n    /**\r\n     * Used to update shape position while shape dragged\r\n     * @override\r\n     */\r\n    Rect.prototype._processDrag = function(deltaX, deltaY) {\r\n        var t = this;\r\n        t.props.x2 += deltaX;\r\n        t.props.y2 += deltaY;\r\n        cl.Shape.prototype._processDrag.call(t, deltaX, deltaY);\r\n    };\r\n\r\n    /**\r\n     * Returns shape bounds\r\n     * @override\r\n     */\r\n    Rect.prototype.getBounds = function() {\r\n        var t = this;\r\n        var x1, y1, x2, y2, sx, sy, ex, ey;\r\n        var border = (t.props.border || 0) / 2;\r\n        x1 = t.parent.chart.xAxis.toScreen(t.props.x);\r\n        y1 = t.parent.chart.yAxis.toScreen(t.props.y);\r\n        x2 = t.parent.chart.xAxis.toScreen(t.props.x2);\r\n        y2 = t.parent.chart.yAxis.toScreen(t.props.y2);\r\n        sx = Math.min(x1, x2);\r\n        sy = Math.min(y1, y2);\r\n        ex = Math.max(x1, x2);\r\n        ey = Math.max(y1, y2);\r\n        return {\r\n            x: sx - border,\r\n            y: sy - border,\r\n            w: ex - sx + border * 2,\r\n            h: ey - sy + border * 2\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Checks if shape intersecting rectangle\r\n     * @override\r\n     */\r\n    Rect.prototype.hitTestRect = function(rx, ry, hw, hh) {\r\n        var t = this;\r\n        var x1, y1, x2, y2, sx, sy, ex, ey;\r\n        var border = (t.props.border || 0) / 2;\r\n        x1 = t.parent.chart.xAxis.toScreen(t.props.x);\r\n        y1 = t.parent.chart.yAxis.toScreen(t.props.y);\r\n        x2 = t.parent.chart.xAxis.toScreen(t.props.x2);\r\n        y2 = t.parent.chart.yAxis.toScreen(t.props.y2);\r\n        sx = Math.min(x1, x2) - border;\r\n        sy = Math.min(y1, y2) - border;\r\n        ex = Math.max(x1, x2) + border;\r\n        ey = Math.max(y1, y2) + border;\r\n\r\n        // This shape half width and height\r\n        var thw = (ex - sx) / 2;\r\n        var thh = (ey - sy) / 2;\r\n\r\n        // This shape center\r\n        var cx = sx + thw;\r\n        var cy = sy + thh;\r\n\r\n        var cdx = Math.abs(cx - rx);\r\n        var cdy = Math.abs(cy - ry);\r\n\r\n        return ((cdx <= thw + hw) && (cdy <= thh + hh));\r\n    };\r\n\r\n    /**\r\n     * Check if point inside shape\r\n     * @override\r\n     */\r\n    Rect.prototype.hitTest = function(x, y) {\r\n        var t = this;\r\n        var x1, y1, x2, y2, sx, sy, ex, ey;\r\n        var border = (t.props.border || 0) / 2;\r\n        x1 = t.parent.chart.xAxis.toScreen(t.props.x);\r\n        y1 = t.parent.chart.yAxis.toScreen(t.props.y);\r\n        x2 = t.parent.chart.xAxis.toScreen(t.props.x2);\r\n        y2 = t.parent.chart.yAxis.toScreen(t.props.y2);\r\n        sx = Math.min(x1, x2) - border;\r\n        sy = Math.min(y1, y2) - border;\r\n        ex = Math.max(x1, x2) + border;\r\n        ey = Math.max(y1, y2) + border;\r\n\r\n        return ((x >= sx) && (x <= ex) && (y >= sy) && (y <= ey));\r\n    };\r\n\r\n    /**\r\n     * Renders rect on canvas\r\n     * @override\r\n     */\r\n    Rect.prototype._render = function(canvas) {\r\n        var t = this;\r\n\r\n        if (t._isDragged) return;\r\n        var chart = t.parent.chart;\r\n\r\n        // Calculate rectangle coordinates\r\n        var x1, y1, x2, y2;\r\n        x1 = chart.xAxis.toScreen(t.props.x);\r\n        y1 = chart.yAxis.toScreen(t.props.y);\r\n        x2 = chart.xAxis.toScreen(t.props.x2);\r\n        y2 = chart.yAxis.toScreen(t.props.y2);\r\n\r\n        canvas.setAlpha(t.props.opacity);\r\n        if (!t.props.color2 || t.props.color === t.props.color2) canvas.setFillColor(t.props.color); else {\r\n            // Calculate gradient\r\n            var sx, sy, ex, ey;\r\n            sx = Math.min(x1, x2);\r\n            sy = Math.min(y1, y2);\r\n            ex = Math.max(x1, x2);\r\n            ey = Math.max(y1, y2);\r\n\r\n            var gradient = canvas.ctx.createLinearGradient(sx, sy, ex, ey);\r\n            gradient.addColorStop(0, t.props.color);\r\n            gradient.addColorStop(1, t.props.color2);\r\n            canvas.ctx.fillStyle = gradient;\r\n        }\r\n        if (t.props.border) canvas.setLineStyle(t.props.border, t.props.borderColor);\r\n        if (t.props.lineDash) canvas.setLineDash(t.props.lineDash);\r\n        canvas.ctx.beginPath();\r\n        canvas.drawRect(x1, y1, x2, y2, t.props.borderRadius);\r\n        canvas.ctx.fill();\r\n        if (t.props.border) {\r\n            canvas.ctx.stroke();\r\n            canvas.restoreLineFix();\r\n        }\r\n        canvas.ctx.closePath();\r\n        if (t.props.lineDash) canvas.setLineDash([]);\r\n\r\n        cl.Shape.prototype._render.call(t, canvas);\r\n    };\r\n\r\n    /**\r\n     * Renders rect hover on canvas\r\n     * @override\r\n     */\r\n    Rect.prototype._renderHover = function(canvas, offset) {\r\n        var t = this;\r\n        if (t._isDragged) return;\r\n        offset = (offset || 0) + (t.props.border || 0) / 2;\r\n        var chart = t.parent.chart;\r\n\r\n        // Calculate rectangle coordinates\r\n        var x1, y1, x2, y2;\r\n        x1 = chart.xAxis.toScreen(t.props.x);\r\n        y1 = chart.yAxis.toScreen(t.props.y);\r\n        x2 = chart.xAxis.toScreen(t.props.x2);\r\n        y2 = chart.yAxis.toScreen(t.props.y2);\r\n\r\n        canvas.drawRect(x1, y1, x2, y2, t.props.borderRadius, true, offset);\r\n\r\n        cl.Shape.prototype._renderHover.call(t, canvas, offset);\r\n    };\r\n\r\n    /**\r\n     * Updates shape properties\r\n     * @override\r\n     */\r\n    Rect.prototype.calcAnimProps = function(newProps) {\r\n        var t = this;\r\n        cl.Shape.prototype.calcAnimProps.call(t, newProps);\r\n\r\n        if (newProps.x2 !== undefined && newProps.x2 !== t.props.x2) {\r\n            t.animProps.x2 = newProps.x2;\r\n            t.animProps.changed = true;\r\n        }\r\n        if (newProps.y2 !== undefined && newProps.y2 !== t.props.y2) {\r\n            t.animProps.y2 = newProps.y2;\r\n            t.animProps.changed = true;\r\n        }\r\n        if (newProps.borderRadius !== undefined && newProps.borderRadius !== t.props.borderRadius) {\r\n            t.animProps.borderRadius = newProps.borderRadius;\r\n            t.animProps.changed = true;\r\n        }\r\n        if (newProps.color2 !== undefined && cl.Color.fromString(newProps.color2) !== cl.Color.fromString(t.props.color2)) {\r\n            t.animProps._color2 = newProps.color2;\r\n            t.animProps.changed = true;\r\n        }\r\n        return t.animProps.changed;\r\n    };\r\n\r\n    namespace.Rect = Rect;\r\n\r\n})(cl);\n/**\r\n * @module shapes/line\r\n * @description Module describes line class.\r\n * @author Anton Gnibeda\r\n */\r\n(function(namespace) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Represent line shape class\r\n     *\r\n     * @extends cl.Shape\r\n     * @constructor\r\n     * @memberof cl\r\n     *\r\n     * @param {object} parent Parent shape manager\r\n     * @param {object} props shape settings\r\n     * @param {object} props.id Shape id\r\n     * @param {string} [props.cursor] Change cursor to specified when shape is hovered\r\n     * @param {object} [props.x=0] First corner X coordinate\r\n     * @param {object} [props.y=0] First corner Y coordinate\r\n     * @param {number} props.x2 Second corner X coordinate\r\n     * @param {number} props.y2 Second corner Y coordinate\r\n     * @param {string} [props.color=cl.Consts.COLOR_RED] Line color\r\n     * @param {object} [props.border=1] Shape border width\r\n     * @param {number} [props.size=0] First point size\r\n     * @param {number} [props.size2=0] Second point size\r\n     * @param {string} [props.pointColor=cl.Consts.COLOR_RED] First point color\r\n     * @param {string} [props.pointColor2=cl.Consts.COLOR_RED] Socund point color\r\n     * @param {object} [props.opacity=0.3] Shape opacity\r\n     * @param {array} [props.lineDash=[]] Shape line dash. Example: [2, 2]\r\n     * @param {array} [props.links=[]] Array of linked shapes id's\r\n     * @param {boolean} [props.draggable=true] Is shape draggable\r\n     * @param {object} [props.track] Shape track. Can be displayed while shape is animating\r\n     * @param {boolean} [props.track.enabled=false] Enabled or not\r\n     * @param {number} [props.track.width=1] Line width\r\n     * @param {string} [props.track.color=cl.Consts.COLOR_GREEN] Line color\r\n     * @param {number} [props.track.opacity=0.4] Line opacity\r\n     * @param {object} [props.hover] Hover style\r\n     * @param {boolean} [props.hover.enabled=true] Is hover enabled\r\n     * @param {number} [props.hover.border] Hover border size\r\n     * @param {string} [props.hover.color] Hover color\r\n     * @param {number} [props.hover.opacity] Hover opacity\r\n     * @param {number} [props.hover.offset] Hover offset\r\n     **/\r\n    function Line(parent, props) {\r\n        var t = this;\r\n        cl.Shape.call(t, parent, props);\r\n\r\n        if (t.props.pointColor) t.props.pointColor = cl.Color.fromString(t.props.pointColor);\r\n        if (t.props.pointColor2) t.props.pointColor2 = cl.Color.fromString(t.props.pointColor2);\r\n\r\n        if (t.props.x2 === undefined) throw new Error(cl.Lang.get(\"errShapeNoParam\", \"x2\"));\r\n        if (t.props.y2 === undefined) throw new Error(cl.Lang.get(\"errShapeNoParam\", \"y2\"));\r\n    }\r\n\r\n    cl.Utils.extend(Line, cl.Shape);\r\n\r\n    /////////////////////////////////////////////// STATIC ////////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Squared distance to line, when line considered hovered\r\n     * @type {number}\r\n     * @default 25\r\n     */\r\n    Line.HOVER_THRESHOLD = 25;\r\n\r\n    ///////////////////////////////////////////// PROPERTIES //////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Shape type\r\n     * @override\r\n     */\r\n    Line.prototype.type = \"line\";\r\n\r\n    /////////////////////////////////////////////// METHODS ///////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Returns shape area in pixels\r\n     * @override\r\n     */\r\n    Line.prototype.getPixelArea = function() {\r\n        var t = this;\r\n        return Math.sqrt(cl.Utils.distSq(t.props.x, t.props.y, t.props.x2, t.props.y2));\r\n    };\r\n\r\n    /**\r\n     * Uses to update point colors\r\n     * @override\r\n     */\r\n    Line.prototype.onAnimationUpdate = function(obj, progress) {\r\n        var r, g, b;\r\n        if (obj.pointColor_r !== undefined) {\r\n            r = Math.floor(obj.pointColor_r);\r\n            g = Math.floor(obj.pointColor_g);\r\n            b = Math.floor(obj.pointColor_b);\r\n            if (r < 0) r = 0;\r\n            if (g < 0) g = 0;\r\n            if (b < 0) b = 0;\r\n            if (r > 255) r = 255;\r\n            if (g > 255) g = 255;\r\n            if (b > 255) b = 255;\r\n            obj.pointColor = cl.Color.toHex(r, g, b);\r\n        }\r\n        if (obj.pointColor2_r !== undefined) {\r\n            r = Math.floor(obj.pointColor2_r);\r\n            g = Math.floor(obj.pointColor2_g);\r\n            b = Math.floor(obj.pointColor2_b);\r\n            if (r < 0) r = 0;\r\n            if (g < 0) g = 0;\r\n            if (b < 0) b = 0;\r\n            if (r > 255) r = 255;\r\n            if (g > 255) g = 255;\r\n            if (b > 255) b = 255;\r\n            obj.pointColor2 = cl.Color.toHex(r, g, b);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @override\r\n     */\r\n    Line.prototype.startAnimation = function(animationSpeed) {\r\n        var t = this;\r\n        var rgbFrom;\r\n        var rgbTo;\r\n        if (t.animProps._pointColor) {\r\n            rgbFrom = cl.Color.toRGB(t.props.pointColor || t.props.color);\r\n            rgbTo = cl.Color.toRGB(t.animProps._pointColor);\r\n            t.props.pointColor_r = rgbFrom.r;\r\n            t.props.pointColor_g = rgbFrom.g;\r\n            t.props.pointColor_b = rgbFrom.b;\r\n            t.animProps.pointColor_r = rgbTo.r;\r\n            t.animProps.pointColor_g = rgbTo.g;\r\n            t.animProps.pointColor_b = rgbTo.b;\r\n        }\r\n        if (t.animProps._pointColor2) {\r\n            rgbFrom = cl.Color.toRGB(t.props.pointColor2 || t.props.pointColor || t.props.color);\r\n            rgbTo = cl.Color.toRGB(t.animProps._pointColor2);\r\n            t.props.pointColor2_r = rgbFrom.r;\r\n            t.props.pointColor2_g = rgbFrom.g;\r\n            t.props.pointColor2_b = rgbFrom.b;\r\n            t.animProps.pointColor2_r = rgbTo.r;\r\n            t.animProps.pointColor2_g = rgbTo.g;\r\n            t.animProps.pointColor2_b = rgbTo.b;\r\n        }\r\n\r\n        cl.Shape.prototype.startAnimation.call(t, animationSpeed);\r\n    };\r\n\r\n    /**\r\n     * Stops animation\r\n     * @override\r\n     */\r\n    Line.prototype.stopAnimation = function(dontStopTween) {\r\n        var t = this;\r\n        if (t.tween && t.animProps) {\r\n            if (this.animProps._pointColor) this.props.pointColor = cl.Color.fromString(this.animProps._pointColor);\r\n            if (this.animProps._pointColor2) this.props.pointColor2 = cl.Color.fromString(this.animProps._pointColor2);\r\n        }\r\n        cl.Shape.prototype.stopAnimation.call(t, dontStopTween);\r\n    };\r\n\r\n\r\n    /**\r\n     * Returns X coordinate of shape center\r\n     * @override\r\n     */\r\n    Line.prototype.getCenterX = function() {\r\n        var x1, x2, t = this;\r\n        // Find right coordinates order: (x1, x2) -> first x should be left corner\r\n        if (t.props.x < t.props.x2) { x1 = t.props.x; x2 = t.props.x2; } else { x1 = t.props.x2; x2 = t.props.x; }\r\n        return (x1 + Math.abs(x2 - x1) / 2);\r\n    };\r\n\r\n    /**\r\n     * Returns Y coordinate of shape center\r\n     * @override\r\n     */\r\n    Line.prototype.getCenterY = function() {\r\n        var y1, y2, t = this;\r\n        // Find right coordinates order: (y1, y2) -> first y should be top corner\r\n        if (t.props.y < t.props.y2) { y1 = t.props.y; y2 =  t.props.y2; } else { y1 = t.props.y2; y2 = t.props.y; }\r\n        return (y1 + Math.abs(y2 - y1) / 2);\r\n    };\r\n\r\n    /**\r\n     * Used to update shape position while shape dragged\r\n     * @override\r\n     */\r\n    Line.prototype._processDrag = function(deltaX, deltaY) {\r\n        var t = this;\r\n        t.props.x2 += deltaX;\r\n        t.props.y2 += deltaY;\r\n        cl.Shape.prototype._processDrag.call(t, deltaX, deltaY);\r\n    };\r\n\r\n    /**\r\n     * Returns shape bounds\r\n     * @override\r\n     */\r\n    Line.prototype.getBounds = function() {\r\n        var x1, y1, x2, y2, sx, sy, ex, ey, r1, r2, rx1, rx2, ry1, ry2, ox, oy, t = this;\r\n\r\n        var border = (t.props.border || 0) / 2;\r\n        r1 = t.props.size || 0;\r\n        r2 = t.props.size2 || 0;\r\n\r\n        // Convert coordinates\r\n        x1 = t.parent.chart.xAxis.toScreen(t.props.x);\r\n        y1 = t.parent.chart.yAxis.toScreen(t.props.y);\r\n        x2 = t.parent.chart.xAxis.toScreen(t.props.x2);\r\n        y2 = t.parent.chart.yAxis.toScreen(t.props.y2);\r\n\r\n        // Store radius\r\n        rx1 = r1;\r\n        ry1 = r2;\r\n        rx2 = r2;\r\n        ry2 = r1;\r\n        if (x1 > x2) { rx1 = r2; rx2 = r1; }\r\n        if (y1 < y2) { ry1 = r1; ry2 = r2; }\r\n\r\n        // Find first and second points\r\n        sx = Math.min(x1, x2);\r\n        sy = Math.min(y1, y2);\r\n        ex = Math.max(x1, x2);\r\n        ey = Math.max(y1, y2);\r\n\r\n        // Expand bounds by border width\r\n        if (border > 1) {\r\n            var angle = Math.atan2(ex - sx, ey - sy);\r\n            console.log(angle / Math.PI * 180);\r\n            ox = Math.cos(angle) * border;\r\n            oy = Math.sin(angle) * border;\r\n        }\r\n\r\n        var bounds = {\r\n            x: sx - ox,\r\n            y: sy - oy,\r\n            w: ex - sx + ox * 2,\r\n            h: ey - sy + oy * 2\r\n        };\r\n\r\n        // Expand bounds by cap circles\r\n        if (sx - rx1 < bounds.x) {\r\n            bounds.w += bounds.x - (sx - rx1);\r\n            bounds.x = sx - rx1;\r\n        }\r\n        if (sy - ry1 < bounds.y) {\r\n            bounds.h += bounds.y - (sy - ry1);\r\n            bounds.y = sy - ry1;\r\n        }\r\n        if (ey + ry2 > bounds.y + bounds.h) bounds.h += (ey + ry2) - (bounds.y + bounds.h);\r\n        if (ex + rx2 > bounds.x + bounds.w) bounds.w += (ex + rx2) - (bounds.x + bounds.w);\r\n\r\n        return bounds;\r\n    };\r\n\r\n    /**\r\n     * Checks if shape intersecting rectangle\r\n     * @override\r\n     */\r\n    Line.prototype.hitTestRect = function(rx, ry, hw, hh) {\r\n        var x1, y1, x2, y2, t = this;\r\n        x1 = t.parent.chart.xAxis.toScreen(t.props.x);\r\n        y1 = t.parent.chart.yAxis.toScreen(t.props.y);\r\n        x2 = t.parent.chart.xAxis.toScreen(t.props.x2);\r\n        y2 = t.parent.chart.yAxis.toScreen(t.props.y2);\r\n\r\n        return cl.Utils.lineRectIntersect(rx - hw, ry - hh, rx + hw, ry + hh, x1, y1, x2, y2);\r\n    };\r\n\r\n    /**\r\n     * Check if point inside shape\r\n     * @override\r\n     */\r\n    Line.prototype.hitTest = function(x, y) {\r\n        var x1, y1, x2, y2, t = this;\r\n        var border = (t.props.border || 0) / 2;\r\n        x1 = t.parent.chart.xAxis.toScreen(t.props.x);\r\n        y1 = t.parent.chart.yAxis.toScreen(t.props.y);\r\n        x2 = t.parent.chart.xAxis.toScreen(t.props.x2);\r\n        y2 = t.parent.chart.yAxis.toScreen(t.props.y2);\r\n\r\n        return cl.Utils.distToSegmentSquared(x, y, x1, y1, x2, y2) < Line.HOVER_THRESHOLD + border * border;\r\n    };\r\n\r\n    /**\r\n     * Updates shape properties\r\n     * @override\r\n     */\r\n    Line.prototype.calcAnimProps = function(newProps) {\r\n        var t = this;\r\n        cl.Shape.prototype.calcAnimProps.call(t, newProps);\r\n\r\n        if (newProps.x2 !== undefined && newProps.x2 !== t.props.x2) {\r\n            t.animProps.x2 = newProps.x2;\r\n            t.animProps.changed = true;\r\n        }\r\n        if (newProps.y2 !== undefined && newProps.y2 !== t.props.y2) {\r\n            t.animProps.y2 = newProps.y2;\r\n            t.animProps.changed = true;\r\n        }\r\n        if (newProps.size !== undefined && newProps.size !== t.props.size) {\r\n            t.animProps.size = newProps.size;\r\n            t.animProps.changed = true;\r\n        }\r\n        if (newProps.size2 !== undefined && newProps.size2 !== t.props.size2) {\r\n            t.animProps.size2 = newProps.size2;\r\n            t.animProps.changed = true;\r\n        }\r\n        if (newProps.pointColor !== undefined && cl.Color.fromString(newProps.pointColor) !== cl.Color.fromString(t.props.pointColor)) {\r\n            t.animProps._pointColor = newProps.pointColor;\r\n            t.animProps.changed = true;\r\n        }\r\n        if (newProps.pointColor2 !== undefined && cl.Color.fromString(newProps.pointColor2) !== cl.Color.fromString(t.props.pointColor2)) {\r\n            t.animProps._pointColor2 = newProps.pointColor2;\r\n            t.animProps.changed = true;\r\n        }\r\n        return t.animProps.changed;\r\n    };\r\n\r\n    /**\r\n     * Renders line on canvas\r\n     * @override\r\n     */\r\n    Line.prototype._render = function(canvas) {\r\n        var t = this;\r\n        if (t._isDragged) return;\r\n        var chart = t.parent.chart;\r\n\r\n        // Calculate line coordinates\r\n        var x1, y1, x2, y2;\r\n        x1 = chart.xAxis.toScreen(t.props.x);\r\n        y1 = chart.yAxis.toScreen(t.props.y);\r\n        x2 = chart.xAxis.toScreen(t.props.x2);\r\n        y2 = chart.yAxis.toScreen(t.props.y2);\r\n\r\n        canvas.setAlpha(t.props.opacity);\r\n        canvas.setLineStyle(t.props.border, t.props.color);\r\n        if (t.props.lineDash) canvas.setLineDash(t.props.lineDash);\r\n\r\n        canvas.drawLine(x1, y1, x2, y2);\r\n\r\n        if (t.props.size) {\r\n            canvas.ctx.beginPath();\r\n            canvas.setFillColor(t.props.pointColor || t.props.color);\r\n            canvas.ctx.moveTo(x1, y1);\r\n            canvas.ctx.arc(x1, y1, t.props.size, 0, cl.Consts.TWO_PI, false);\r\n            canvas.ctx.fill();\r\n            canvas.ctx.closePath();\r\n        }\r\n        if (t.props.size2) {\r\n            canvas.ctx.beginPath();\r\n            canvas.setFillColor(t.props.pointColor2 || t.props.pointColor || t.props.color);\r\n            canvas.ctx.moveTo(x2, y2);\r\n            canvas.ctx.arc(x2, y2, t.props.size2, 0, cl.Consts.TWO_PI, false);\r\n            canvas.ctx.fill();\r\n            canvas.ctx.closePath();\r\n        }\r\n\r\n        if (t.props.lineDash) canvas.setLineDash([]);\r\n\r\n        cl.Shape.prototype._render.call(t, canvas);\r\n    };\r\n\r\n    /**\r\n     * Renders line hover on canvas\r\n     * @override\r\n     */\r\n    Line.prototype._renderHover = function(canvas, offset) {\r\n        var t = this;\r\n        if (t._isDragged) return;\r\n        var chart = t.parent.chart;\r\n\r\n        // Calculate rectangle coordinates\r\n        var x1, y1, x2, y2;\r\n        x1 = chart.xAxis.toScreen(t.props.x);\r\n        y1 = chart.yAxis.toScreen(t.props.y);\r\n        x2 = chart.xAxis.toScreen(t.props.x2);\r\n        y2 = chart.yAxis.toScreen(t.props.y2);\r\n\r\n        canvas.drawLine(x1, y1, x2, y2, true);\r\n\r\n        // Render line cap circles\r\n        if (t.props.size) {\r\n            canvas.ctx.moveTo(x1 + t.props.size + (offset || 0), y1);\r\n            canvas.ctx.arc(x1, y1, t.props.size + (offset || 0), 0, cl.Consts.TWO_PI, false);\r\n        }\r\n        if (t.props.size2) {\r\n            canvas.ctx.moveTo(x2 + t.props.size2 + (offset || 0), y2);\r\n            canvas.ctx.arc(x2, y2, t.props.size2 + (offset || 0), 0, cl.Consts.TWO_PI, false);\r\n        }\r\n\r\n        cl.Shape.prototype._renderHover.call(t, canvas, offset);\r\n    };\r\n\r\n    namespace.Line = Line;\r\n\r\n})(cl);\n/**\r\n * @module shapes/polyLine\r\n * @description Module describes ploy line class.\r\n * @author Anton Gnibeda\r\n */\r\n(function(namespace) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Represent line segment shape class\r\n     *\r\n     * @extends cl.Shape\r\n     * @constructor\r\n     * @memberof cl\r\n     *\r\n     * @param {Object} parent Parent shape manager\r\n     * @param {Object} props shape settings\r\n     * @param {Object} props.id Shape id\r\n     * @param {Array.<number>} props.points Line points coordinates. Contains [x1, y1, x2, y2, x3, y3, ...]\r\n     * @param {boolean} [props.closed=false] Is poly line closed or not\r\n     * @param {string} [props.cursor] Change cursor to specified when shape is hovered\r\n     * @param {string} [props.color=cl.Consts.COLOR_RED] Line color\r\n     * @param {Object} [props.border=1] Shape border width\r\n     * @param {Object} [props.opacity=0.3] Shape opacity\r\n     * @param {string} [props.lineJoin=\"miter\"] Line join. Can be \"miter\", \"round\", \"bevel\"\r\n     * @param {array} [props.lineDash=[]] Shape line dash. Example: [2, 2]\r\n     * @param {array} [props.links=[]] Array of linked shapes id's\r\n     * @param {boolean} [props.draggable=true] Is shape draggable\r\n     * @param {Object} [props.track] Shape track. Can be displayed while shape is animating\r\n     * @param {boolean} [props.track.enabled=false] Enabled or not\r\n     * @param {number} [props.track.width=1] Line width\r\n     * @param {string} [props.track.color=cl.Consts.COLOR_GREEN] Line color\r\n     * @param {number} [props.track.opacity=0.4] Line opacity\r\n     * @param {Object} [props.hover] Hover style\r\n     * @param {boolean} [props.hover.enabled=true] Is hover enabled\r\n     * @param {number} [props.hover.border] Hover border size\r\n     * @param {string} [props.hover.color] Hover color\r\n     * @param {number} [props.hover.opacity] Hover opacity\r\n     * @param {number} [props.hover.offset] Hover offset\r\n     **/\r\n    function PolyLine(parent, props) {\r\n        var t = this;\r\n        cl.Shape.call(t, parent, props);\r\n\r\n        if (t.props.points === undefined) throw new Error(cl.Lang.get(\"errShapeNoParam\", \"points\"));\r\n        if (t.props.points.length < 4) throw new Error(cl.Lang.get(\"errShapeNoParam\", \"points\"));\r\n\r\n        // Used for store animation variables\r\n        t._anim = {\r\n            pointsFrom: [],\r\n            pointsTo: [],\r\n            closedFrom: false,\r\n            closedTo: false,\r\n            closedWidth: 0\r\n        };\r\n    }\r\n\r\n    cl.Utils.extend(PolyLine, cl.Shape);\r\n\r\n    ///////////////////////////////////////////// PROPERTIES //////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Shape type\r\n     * @override\r\n     */\r\n    PolyLine.prototype.type = \"polyline\";\r\n\r\n    /////////////////////////////////////////////// METHODS ///////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Uses to update point colors\r\n     * @override\r\n     */\r\n    PolyLine.prototype.onAnimationUpdate = function(obj, progress) {\r\n        var i, l, t = this;\r\n        if (t._anim.pointsFrom.length !== 0 && t._anim.pointsTo.length !== 0) {\r\n            for (i = 0, l = obj.points.length; i < l; i++) obj.points[i] = t._anim.pointsFrom[i] + (t._anim.pointsTo[i] - t._anim.pointsFrom[i]) * progress;\r\n        }\r\n\r\n        if (t._anim.closedFrom !== t._anim.closedTo) {\r\n            if (t._anim.closedTo) t._anim.closedWidth = progress * t.props.border; else t._anim.closedWidth = (1 - progress) * t.props.border;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Stops animation\r\n     * @override\r\n     */\r\n    PolyLine.prototype.stopAnimation = function(dontStopTween) {\r\n        var i, l, t = this;\r\n        if (t.tween && t._anim.pointsTo.length !== 0) {\r\n            for (i = 0, l = t.props.points.length; i < l; i++) t.props.points[i] = t._anim.pointsTo[i];\r\n            if (t.props.delPoints) t.props.points.splice(t.props.points.length - t.props.delPoints * 2, t.props.delPoints * 2);\r\n        }\r\n        t._anim.closedWidth = 0;\r\n        t._anim.pointsFrom = [];\r\n        t._anim.pointsTo = [];\r\n        t._anim.closedFrom = t.props.closed;\r\n        t._anim.closedTo = t.props.closed;\r\n        cl.Shape.prototype.stopAnimation.call(t, dontStopTween);\r\n    };\r\n\r\n    /**\r\n     * Returns shape area in pixels\r\n     * @override\r\n     */\r\n    PolyLine.prototype.getPixelArea = function() {\r\n        var i, l, dist = 0, t = this;\r\n        for (i = 0, l = t.props.points.length; i < l - 2; i += 2) dist += Math.sqrt(cl.Utils.distSq(t.props.points[i], t.props.points[i+1], t.props.points[i+2], t.props.points[i+3]));\r\n        if (t.props.closed) dist += Math.sqrt(cl.Utils.distSq(t.props.points[l-2], t.props.points[l-1], t.props.points[0], t.props.points[1]));\r\n        return dist;\r\n    };\r\n\r\n    /**\r\n     * Returns X coordinate of shape center\r\n     * @override\r\n     */\r\n    PolyLine.prototype.getCenterX = function() {\r\n        var twicearea = 0, x = 0, i, l, f, t = this;\r\n        for (i = 0, l = t.props.points.length; i < l - 2; i += 2) {\r\n            f = t.props.points[i] * t.props.points[i + 3] - t.props.points[i + 2] * t.props.points[i + 1];\r\n            twicearea += f;\r\n            x += ( t.props.points[i] + t.props.points[i + 2] ) * f;\r\n        }\r\n        f = t.props.points[l - 2] * t.props.points[1] - t.props.points[0] * t.props.points[l - 1];\r\n        twicearea += f;\r\n        x += ( t.props.points[l - 2] + t.props.points[0] ) * f;\r\n\r\n        f = twicearea * 3;\r\n        return x/f;\r\n    };\r\n\r\n    /**\r\n     * Returns Y coordinate of shape center\r\n     * @override\r\n     */\r\n    PolyLine.prototype.getCenterY = function() {\r\n        var twicearea = 0, y = 0, i, l, f, t = this;\r\n        for (i = 0, l = t.props.points.length; i < l - 2; i += 2) {\r\n            f = t.props.points[i] * t.props.points[i + 3] - t.props.points[i + 2] * t.props.points[i + 1];\r\n            twicearea += f;\r\n            y += ( t.props.points[i + 1] + t.props.points[i + 3] ) * f;\r\n        }\r\n        f = t.props.points[l - 2] * t.props.points[1] - t.props.points[0] * t.props.points[l - 1];\r\n        twicearea += f;\r\n        y += ( t.props.points[l - 1] + t.props.points[1] ) * f;\r\n\r\n        f = twicearea * 3;\r\n        return y/f;\r\n    };\r\n\r\n    /**\r\n     * Used to update shape position while shape dragged\r\n     * @override\r\n     */\r\n    PolyLine.prototype._processDrag = function(deltaX, deltaY) {\r\n        var i, l, t = this;\r\n        for (i = 0, l = t.props.points.length; i < l; i += 2) {\r\n            t.props.points[i] += deltaX;\r\n            t.props.points[i + 1] += deltaY;\r\n        }\r\n\r\n        cl.Shape.prototype._processDrag.call(t, deltaX, deltaY);\r\n    };\r\n\r\n    /**\r\n     * Returns shape bounds\r\n     * @override\r\n     */\r\n    PolyLine.prototype.getBounds = function() {\r\n        var i, l, px, py, x1, y1, x2, y2, t = this;\r\n        var border = (t.props.border || 0) / 2;\r\n\r\n        x1 = Number.MAX_VALUE;\r\n        y1 = Number.MAX_VALUE;\r\n        x2 = Number.MIN_VALUE;\r\n        y2 = Number.MIN_VALUE;\r\n        for (i = 0, l = t.props.points.length; i < l; i += 2) {\r\n            px = t.parent.chart.xAxis.toScreen(t.props.points[i]);\r\n            py = t.parent.chart.yAxis.toScreen(t.props.points[i + 1]);\r\n            if (px < x1) x1 = px;\r\n            if (px > x2) x2 = px;\r\n            if (py < y1) y1 = py;\r\n            if (py > y2) y2 = py;\r\n        }\r\n        return {\r\n            x: x1 - border,\r\n            y: y1 - border,\r\n            w: x2 - x1 + border * 2,\r\n            h: y2-  y1 + border * 2\r\n        };\r\n    };\r\n\r\n    /**\r\n     * Checks if shape intersecting rectangle\r\n     * @override\r\n     */\r\n    PolyLine.prototype.hitTestRect = function(rx, ry, hw, hh) {\r\n        var i, l, x1, y1, x2, y2, t = this;\r\n        for (i = 0, l = t.props.points.length; i < l - 2; i += 2) {\r\n            x1 = t.parent.chart.xAxis.toScreen(t.props.points[i]);\r\n            y1 = t.parent.chart.yAxis.toScreen(t.props.points[i + 1]);\r\n            x2 = t.parent.chart.xAxis.toScreen(t.props.points[i + 2]);\r\n            y2 = t.parent.chart.yAxis.toScreen(t.props.points[i + 3]);\r\n            if (cl.Utils.lineRectIntersect(rx - hw, ry - hh, rx + hw, ry + hh, x1, y1, x2, y2)) return true;\r\n        }\r\n        if (t.props.closed) {\r\n            x1 = t.parent.chart.xAxis.toScreen(t.props.points[l - 2]);\r\n            y1 = t.parent.chart.yAxis.toScreen(t.props.points[l - 1]);\r\n            x2 = t.parent.chart.xAxis.toScreen(t.props.points[0]);\r\n            y2 = t.parent.chart.yAxis.toScreen(t.props.points[1]);\r\n            if (cl.Utils.lineRectIntersect(rx - hw, ry - hh, rx + hw, ry + hh, x1, y1, x2, y2)) return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    /**\r\n     * Check if point inside shape\r\n     * @override\r\n     */\r\n    PolyLine.prototype.hitTest = function(x, y) {\r\n        var i, l, x1, y1, x2, y2, t = this;\r\n        for (i = 0, l = t.props.points.length; i < l - 2; i += 2) {\r\n            x1 = t.parent.chart.xAxis.toScreen(t.props.points[i]);\r\n            y1 = t.parent.chart.yAxis.toScreen(t.props.points[i + 1]);\r\n            x2 = t.parent.chart.xAxis.toScreen(t.props.points[i + 2]);\r\n            y2 = t.parent.chart.yAxis.toScreen(t.props.points[i + 3]);\r\n            if (cl.Utils.distToSegmentSquared(x, y, x1, y1, x2, y2) < cl.Line.HOVER_THRESHOLD) return true;\r\n        }\r\n        if (t.props.closed) {\r\n            x1 = t.parent.chart.xAxis.toScreen(t.props.points[l - 2]);\r\n            y1 = t.parent.chart.yAxis.toScreen(t.props.points[l - 1]);\r\n            x2 = t.parent.chart.xAxis.toScreen(t.props.points[0]);\r\n            y2 = t.parent.chart.yAxis.toScreen(t.props.points[1]);\r\n            if (cl.Utils.distToSegmentSquared(x, y, x1, y1, x2, y2) < cl.Line.HOVER_THRESHOLD) return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    /**\r\n     * Updates shape properties\r\n     * @override\r\n     */\r\n    PolyLine.prototype.calcAnimProps = function(newProps) {\r\n        var i, l, k, t = this;\r\n        cl.Shape.prototype.calcAnimProps.call(t, newProps);\r\n\r\n        if (newProps.lineJoin !== undefined && t.props.lineJoin !== newProps.lineJoin) {\r\n            t.animProps.lineJoin = newProps.lineJoin;\r\n            t.animProps.changed = true;\r\n        }\r\n\r\n        if (newProps.closed !== undefined && t.props.closed !== newProps.closed) {\r\n            t._anim.closedFrom = t.props.closed;\r\n            t._anim.closedTo = newProps.closed;\r\n            t.animProps.closed = newProps.closed;\r\n            t.animProps.changed = true;\r\n        }\r\n\r\n        // Check points\r\n        if (newProps.points !== undefined) {\r\n            // If length equal, check for changes\r\n            if (newProps.points.length === t.props.points.length) {\r\n                for (i = 0, l = newProps.points.length; i < l; i++) if (t.props.points[i] !== newProps.points[i]) {\r\n                    t.animProps.changed = true;\r\n                    break;\r\n                }\r\n            } else t.animProps.changed = true;\r\n            if (t.animProps.changed) {\r\n                // Find out new points to be added or old to be deleted\r\n                t.props.delPoints = 0;\r\n                if (t.props.points.length < newProps.points.length) {\r\n                    // NewProps has more points. New points should be added\r\n                    k = t.props.points.length - 2;\r\n                    for (i = t.props.points.length, l = newProps.points.length; i < l; i+=2) {\r\n                        t.props.points.push(t.props.points[k]);\r\n                        t.props.points.push(t.props.points[k + 1]);\r\n                    }\r\n                } else\r\n                if (t.props.points.length > newProps.points.length) {\r\n                    // NewProps has less points. Old points should be deleted\r\n                    k = newProps.points.length - 2;\r\n                    for (i = newProps.points.length, l = t.props.points.length; i < l; i+=2) {\r\n                        newProps.points.push(newProps.points[k]);\r\n                        newProps.points.push(newProps.points[k + 1]);\r\n                        t.props.delPoints++;\r\n                    }\r\n                }\r\n\r\n                // Fill arrays for animation calculations\r\n                t._anim.pointsFrom = [];\r\n                t._anim.pointsTo = [];\r\n                for (i = 0, l = t.props.points.length; i < l; i++) t._anim.pointsFrom.push(t.props.points[i]);\r\n                for (i = 0, l = newProps.points.length; i < l; i++) t._anim.pointsTo.push(newProps.points[i]);\r\n            }\r\n        }\r\n\r\n        return t.animProps.changed;\r\n    };\r\n\r\n    /**\r\n     * Renders line on canvas\r\n     * @override\r\n     */\r\n    PolyLine.prototype._render = function(canvas) {\r\n        var t = this;\r\n        if (t._isDragged) return;\r\n        var chart = t.parent.chart;\r\n\r\n        // Calculate line coordinates\r\n        var i, l;\r\n        var x = [];\r\n        var y = [];\r\n        for (i = 0, l = t.props.points.length; i < l; i+=2) {\r\n            x.push(chart.xAxis.toScreen(t.props.points[i]));\r\n            y.push(chart.yAxis.toScreen(t.props.points[i + 1]));\r\n        }\r\n\r\n        // Set drawing style\r\n        canvas.setAlpha(t.props.opacity);\r\n        canvas.setLineStyle(t.props.border, t.props.color, true);\r\n        if (t.props.lineJoin ) canvas.ctx.lineJoin  = t.props.lineJoin;\r\n        if (t.props.lineDash) canvas.setLineDash(t.props.lineDash);\r\n\r\n        // Draw lines\r\n        canvas.ctx.beginPath();\r\n        canvas.ctx.moveTo(x[0], y[0]);\r\n        for (i = 1; i < l; i++) canvas.ctx.lineTo(x[i], y[i]);\r\n\r\n        // Close poly line if closed === true\r\n        if (t.props.closed || t._anim.closedWidth) {\r\n            if (t._anim.closedWidth) {\r\n                canvas.ctx.stroke();\r\n                canvas.ctx.beginPath();\r\n                canvas.setLineStyle(t._anim.closedWidth, t.props.color, true);\r\n                canvas.ctx.moveTo(x[x.length - 1], y[y.length - 1]);\r\n                canvas.ctx.lineTo(x[0], y[0]);\r\n            } else {\r\n                canvas.ctx.lineTo(x[0], y[0]);\r\n                canvas.ctx.closePath();\r\n            }\r\n        }\r\n        canvas.ctx.stroke();\r\n        // Restore line dash style\r\n        if (t.props.lineDash) canvas.setLineDash([]);\r\n        if (t.props.lineJoin) canvas.ctx.lineJoin = \"miter\";\r\n        cl.Shape.prototype._render.call(t,canvas);\r\n    };\r\n\r\n    /**\r\n     * Renders line hover on canvas\r\n     * @override\r\n     */\r\n    PolyLine.prototype._renderHover = function(canvas, offset) {\r\n        var t = this;\r\n        if (t._isDragged) return;\r\n        var chart = t.parent.chart;\r\n\r\n        // Calculate line coordinates\r\n        var i, l;\r\n        var x = [];\r\n        var y = [];\r\n        for (i = 0, l = t.props.points.length; i < l; i+=2) {\r\n            x.push(chart.xAxis.toScreen(t.props.points[i]));\r\n            y.push(chart.yAxis.toScreen(t.props.points[i + 1]));\r\n        }\r\n\r\n        // Draw lines\r\n        canvas.ctx.moveTo(x[0], y[0]);\r\n        for (i = 1; i < l; i++) canvas.ctx.lineTo(x[i], y[i]);\r\n\r\n        // Close poly line if closed === true\r\n        if (t.props.closed) canvas.ctx.lineTo(x[0], y[0]);\r\n\r\n        cl.Shape.prototype._renderHover.call(t,canvas);\r\n    };\r\n\r\n    namespace.PolyLine = PolyLine;\r\n\r\n})(cl);\n/**\r\n * @module shapes/poly\r\n * @description Module describes ploy class.\r\n * @author Anton Gnibeda\r\n */\r\n(function(namespace) {\r\n    'use strict';\r\n\r\n    /**\r\n     * Represent poly shape class\r\n     *\r\n     * @extends cl.PolyLine\r\n     * @constructor\r\n     * @memberof cl\r\n     *\r\n     * @param {Object} parent Parent shape manager\r\n     * @param {Object} props shape settings\r\n     * @param {Object} props.id Shape id\r\n     * @param {Array.<number>} props.points Line points coordinates. Contains [x1, y1, x2, y2, x3, y3, ...]\r\n     * @param {string} [props.cursor] Change cursor to specified when shape is hovered\r\n     * @param {string} [props.color={@link cl.Consts.COLOR_RED}] Fill color\r\n     * @param {Object} [props.border=1] Shape border width\r\n     * @param {Object} [props.borderColor=props.color] Shape border color\r\n     * @param {Object} [props.opacity=0.3] Shape opacity\r\n     * @param {string} [props.lineJoin=\"miter\"] Line join. Can be \"miter\", \"round\", \"bevel\"\r\n     * @param {array} [props.lineDash=[]] Shape line dash. Example: [2, 2]\r\n     * @param {array} [props.links=[]] Array of linked shapes id's\r\n     * @param {boolean} [props.draggable=true] Is shape draggable\r\n     * @param {Object} [props.track] Shape track. Can be displayed while shape is animating\r\n     * @param {boolean} [props.track.enabled=false] Enabled or not\r\n     * @param {number} [props.track.width=1] Line width\r\n     * @param {string} [props.track.color={@link cl.Consts.COLOR_GREEN}] Line color\r\n     * @param {number} [props.track.opacity=0.4] Line opacity\r\n     * @param {Object} [props.hover] Hover style\r\n     * @param {boolean} [props.hover.enabled=true] Is hover enabled\r\n     * @param {number} [props.hover.border] Hover border size\r\n     * @param {string} [props.hover.color] Hover color\r\n     * @param {number} [props.hover.opacity] Hover opacity\r\n     * @param {number} [props.hover.offset] Hover offset\r\n     **/\r\n    function Poly(parent, props) {\r\n        var t = this;\r\n        cl.PolyLine.call(t, parent, props);\r\n\r\n        // Poly always closed\r\n        t.props.closed = true;\r\n\r\n        if (t.props.points === undefined) throw new Error(cl.Lang.get(\"errShapeNoParam\", \"points\"));\r\n        if (t.props.points.length < 4) throw new Error(cl.Lang.get(\"errShapeNoParam\", \"points\"));\r\n\r\n        // Used for store animation variables\r\n        t._anim = {\r\n            pointsFrom: [],\r\n            pointsTo: []\r\n        };\r\n    }\r\n\r\n    cl.Utils.extend(Poly, cl.PolyLine);\r\n\r\n    ///////////////////////////////////////////// PROPERTIES //////////////////////////////////////////////////////\r\n\r\n    /**\r\n     * Shape type\r\n     * @override\r\n     */\r\n    Poly.prototype.type = \"poly\";\r\n\r\n    /////////////////////////////////////////////// METHODS ///////////////////////////////////////////////////////\r\n\r\n\r\n    /**\r\n     * Uses to update point colors\r\n     * @override\r\n     */\r\n    Poly.prototype.onAnimationUpdate = function(obj, progress) {\r\n        var i, l, t = this;\r\n        if (t._anim.pointsFrom.length !== 0 && t._anim.pointsTo.length !== 0) {\r\n            for (i = 0, l = obj.points.length; i < l; i++) obj.points[i] = t._anim.pointsFrom[i] + (t._anim.pointsTo[i] - t._anim.pointsFrom[i]) * progress;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Stops animation\r\n     * @override\r\n     */\r\n    Poly.prototype.stopAnimation = function(dontStopTween) {\r\n        var i, l, t = this;\r\n        if (t.tween && t._anim.pointsTo.length !== 0) {\r\n            for (i = 0, l = t.props.points.length; i < l; i++) t.props.points[i] = t._anim.pointsTo[i];\r\n            if (t.props.delPoints) t.props.points.splice(t.props.points.length - t.props.delPoints * 2, t.props.delPoints * 2);\r\n        }\r\n        t._anim.pointsFrom = [];\r\n        t._anim.pointsTo = [];\r\n\r\n        cl.Shape.prototype.stopAnimation.call(t, dontStopTween);\r\n\r\n        // Poly always closed\r\n        t.props.closed = true;\r\n    };\r\n\r\n    /**\r\n     * Returns shape area in pixels\r\n     * @override\r\n     */\r\n    Poly.prototype.getPixelArea = function() {\r\n        var t = this;\r\n        var area = 0, i, l, point1, point2;\r\n        var ch = t.parent.chart;\r\n        for (i = 0, l = t.props.points.length; i < l - 2; i += 2) {\r\n            area += ch.toScreenX(t.props.points[i]) * ch.toScreenY(t.props.points[i + 3]);\r\n            area -= ch.toScreenY(t.props.points[i + 1]) * ch.toScreenX(t.props.points[i + 2]);\r\n        }\r\n        area += ch.toScreenX(t.props.points[l - 2]) * ch.toScreenY(t.props.points[1]);\r\n        area -= ch.toScreenY(t.props.points[l - 1]) * ch.toScreenX(t.props.points[0]);\r\n        //area /= 2;\r\n        return Math.abs(area / 2);\r\n    };\r\n\r\n    /**\r\n     * Checks if shape intersecting rectangle\r\n     * @override\r\n     */\r\n    Poly.prototype.hitTestRect = function(rx, ry, hw, hh) {\r\n        var i, l, v;\r\n        var t = this;\r\n        var p = this.props.points;\r\n\r\n        // Calc coordinates in axis space\r\n        var x1 = t.parent.chart.toAxisX(rx - hw);\r\n        var y1 = t.parent.chart.toAxisY(ry - hh);\r\n        var x2 = t.parent.chart.toAxisX(rx + hw);\r\n        var y2 = t.parent.chart.toAxisY(ry + hh);\r\n\r\n        // Make x1, y1 lower point\r\n        if (x1 > x2) {\r\n            v = x1;\r\n            x1 = x2;\r\n            x2 = v;\r\n        }\r\n        if (y1 > y2) {\r\n            v = y1;\r\n            y1 = y2;\r\n            y2 = v;\r\n        }\r\n\r\n        // First step. Check all rect points inside poly\r\n        if (cl.Utils.pointInPoly(x1, y1, p)) return true;\r\n        if (cl.Utils.pointInPoly(x2, y1, p)) return true;\r\n        if (cl.Utils.pointInPoly(x2, y2, p)) return true;\r\n        if (cl.Utils.pointInPoly(x1, y2, p)) return true;\r\n\r\n        // Second step. Check all poly points inside rect\r\n        for (i = 0, l = t.props.points.length; i < l; i+=2) if ((p[i] > x1) && (p[i] < x2) && (p[i + 1] > y1) && (p[i + 1] < y2)) return true;\r\n\r\n        // Last step. Check for intersection between rect and poly edges\r\n        for (i = 0, l = t.props.points.length; i < l - 2; i+=2) {\r\n            if (cl.Utils.lineRectIntersect(x1, y1, x2, y2, p[i], p[i+1], p[i + 2], p[i + 3])) return true;\r\n        }\r\n        if (cl.Utils.lineRectIntersect(x1, y1, x2, y2, p[p.length - 2], p[p.length - 1], p[0], p[1])) return true;\r\n\r\n        return false;\r\n    };\r\n\r\n    /**\r\n     * Check if point inside shape\r\n     * @override\r\n     */\r\n    Poly.prototype.hitTest = function(x, y) {\r\n        return cl.Utils.pointInPoly(this.parent.chart.toAxisX(x), this.parent.chart.toAxisY(y), this.props.points);\r\n    };\r\n\r\n    /**\r\n     * Renders line on canvas\r\n     * @override\r\n     */\r\n    Poly.prototype._render = function(canvas) {\r\n        var t = this;\r\n        if (t._isDragged) return;\r\n        var chart = t.parent.chart;\r\n\r\n        // Calculate line coordinates\r\n        var i, l;\r\n        var x = [];\r\n        var y = [];\r\n        for (i = 0, l = t.props.points.length; i < l; i+=2) {\r\n            x.push(chart.xAxis.toScreen(t.props.points[i]));\r\n            y.push(chart.yAxis.toScreen(t.props.points[i + 1]));\r\n        }\r\n\r\n        // Set drawing style\r\n        canvas.setAlpha(t.props.opacity);\r\n        if (t.props.border) canvas.setLineStyle(t.props.border, t.props.borderColor || t.props.color, true);\r\n        canvas.setFillColor(t.props.color);\r\n        if (t.props.lineJoin ) canvas.ctx.lineJoin  = t.props.lineJoin;\r\n        if (t.props.lineDash) canvas.setLineDash(t.props.lineDash);\r\n\r\n        // Draw lines\r\n        canvas.ctx.beginPath();\r\n        canvas.ctx.moveTo(x[0], y[0]);\r\n        for (i = 1; i < l; i++) canvas.ctx.lineTo(x[i], y[i]);\r\n        canvas.ctx.lineTo(x[0], y[0]);\r\n        canvas.ctx.closePath();\r\n        canvas.ctx.fill();\r\n        if (t.props.border) canvas.ctx.stroke();\r\n        // Restore line dash style\r\n        if (t.props.lineDash) canvas.setLineDash([]);\r\n        if (t.props.lineJoin) canvas.ctx.lineJoin = \"miter\";\r\n        cl.Shape.prototype._render.call(t,canvas);\r\n    };\r\n\r\n    /**\r\n     * Renders poly hover on canvas\r\n     * @override\r\n     */\r\n    Poly.prototype._renderHover = function(canvas) {\r\n        this.props.closed = true;\r\n        cl.PolyLine.prototype._renderHover.call(this, canvas);\r\n    };\r\n\r\n    namespace.Poly = Poly;\r\n\r\n})(cl);\n(function(namespace){\r\n    //'use strict';\r\n\r\n    /**\r\n     * Represent chart class\r\n     *\r\n     * @constructor\r\n     * @memberof cl\r\n     *\r\n     * @param {object} options Chart settings\r\n     * @param {object} options.element DOM element on which chart will be created\r\n     * @param {object} [options.xAxis] Settings for xAxis, described like options in {@link cl.Axis} constructor\r\n     * @param {object} [options.yAxis] Settings for yAxis, described like options in {@link cl.Axis} constructor\r\n     * @param {Element} [options.preloader] preloader DOM element\r\n     * @param {string} [options.cursor] Chart default cursor\r\n     * @param {number} [options.width] Width of chart. If undefined, chart will fits parent element width\r\n     * @param {number} [options.height] Height of chart. If undefined, chart will fits parent element height\r\n     * @param {object} [options.background] Background options, described like options in {@link cl.Background} constructor\r\n     * @param {object} [options.shapes] Shapes options, described like options in {@link cl.ShapeManager} constructor\r\n     * @param {object} [options.selector] Selector options, described like options in {@link cl.Selector} constructor\r\n     *\r\n     * @example\r\n     * // Minimal setup\r\n     * var chart = new cl.Chart({ element: document.getElementById(\"myDiv\") });\r\n     *\r\n     * // Setup with axis\r\n     * var chart = new cl.Chart({\r\n     *      element: document.getElementById(\"myDiv\")\r\n     *      xAxis: {\r\n     *         min: -10\r\n     *         max: 20\r\n     *      }\r\n     * }\r\n     *\r\n     * // Setup chart with custom background\r\n     * var chart = new cl.Chart({\r\n     *      element: document.getElementById(\"myDiv\")\r\n     *      background: {\r\n     *         url: \"http://www.my.com/image.png\",\r\n     *         fit: cl.Background.FIT_NONE\r\n     *         pos: {\r\n     *            x: 50,\r\n     *            y: 0\r\n     *         }\r\n     *      }\r\n     * }\r\n     *\r\n     * // Setup chart with zIndex support\r\n     * var chart = new cl.Chart({\r\n     *      element: document.getElementById(\"myDiv\")\r\n     *      shapes: {\r\n     *          zIndexUsage: true\r\n     *      }\r\n     * }\r\n     *\r\n     * // Add new axis\r\n     * chart.axis.add({ type: \"x\", name: \"My custom axis\", offset: 30 });\r\n     *\r\n     * // Coordinate conversion\r\n     * var screenX = chart.toScreenX(xValue);\r\n     * var axisX = chart.toAxisX(xPixel);\r\n     *\r\n     * // Refresh(redraw) chart\r\n     * chart.redraw()\r\n     *\r\n     * // Get custom axis by name\r\n     * chart.axis.get(\"My custom axis\")\r\n     *\r\n     * // Add bubbles to chart\r\n     * chart.addBubbles([\r\n     *      { x: 20, y: 30, size: 3 },\r\n     *      { x: 40, y: 10, size: 4, color: \"#AAFFAA\", opacity: 0.7 }\r\n     * ]);\r\n     *\r\n     * // Add rectangles to chart\r\n     * chart.addRects([\r\n     *      { x: 20, y: 30, x2: 30, y2: 40 },\r\n     *      { x: 40, y: 10, x2: 100, y2: 20, color: \"#AAFFAA\", color2: \"#FFFFFF\", cursor: \"crosshair\" }\r\n     * ]);\r\n     *\r\n     * // Add lines to chart\r\n     * chart.addLines([\r\n     *      { x: 20, y: 30, x2: 30, y2: 40 },\r\n     *      { x: 40, y: 10, x2: 100, y2: 20, color: \"green\", size: 4, size2: 8, pointColor: \"blue\", pointColor2: \"red\" }\r\n     * ]);\r\n     *\r\n     * // Add custom shapes to chart\r\n     * chart.shapes.add(bubblesArray, cl.Bubble, allowAnimation, animationSpeed);\r\n     * chart.shapes.add(itemsArray, cl.MyCustomClass, allowAnimation, animationSpeed);\r\n     *\r\n     * // Add poly line\r\n     * chart.shapes.add({ id: -22, border: 10, color: \"black\", closed: true, lineJoin: \"round\", points: [0, 0, 90, 10, 80, 90, 70, 20]}, cl.PolyLine);\r\n     *\r\n     * // Change single bubble properties with animation\r\n     * var b = chart.get(myBubbleID);\r\n     * b.setProps({ x: 50, y: 50, size: 2}, true);\r\n     *\r\n     * // Link shape to another by ids\r\n     * b.link([13, 14]);\r\n     *\r\n     * // Add event listeners to chart\r\n     * chart.addEventListener(cl.Event.shapeOver, function(e) {\r\n     *      console.log(\"x: \", e.x, \" y: \", e.y);\r\n     *      console.log(\"Shape is: \", e.target);\r\n     * });\r\n     *\r\n     * // Don't pass event object in callbacks, because it can be destroyed or changed\r\n     * // Just copy needed properties\r\n     * chart.addEventListener(cl.Event.shapeOver, function(e) {\r\n     *     setTimeout(function() {\r\n     *          console.log(e.target); // WRONG\r\n     *     }, 1000);\r\n     * });\r\n     * chart.addEventListener(cl.Event.shapeOver, function(e) {\r\n     *     var target = e.target;\r\n     *     setTimeout(function() {\r\n     *          console.log(target); // right\r\n     *     }, 1000);\r\n     * });\r\n     *\r\n     * // Enable multiselect and drag\r\n     * chart.selector.enableMultiselect();\r\n     * chart.selector.enableDrag();\r\n     *\r\n     * // Get all shapes under screen point\r\n     * var shapes = chart.selector.shapeFromPoint(x, y);\r\n     *\r\n     * // Show shape centers\r\n     * chart.shapes.showCenters();\r\n     **/\r\n    function Chart(options) {\r\n        var t = this;\r\n\r\n        // Properties\r\n        t.options = options || {};\r\n        t.xAxis = null;\r\n        t.yAxis = null;\r\n        t.preloader = t.options.preloader;\r\n        t.element = t.options.element;\r\n        Object.defineProperties(t, {\r\n            isDirty: { get: function() {return t._getIsDirty(); } },\r\n            width: { get: function() { return t.screen.width; } },\r\n            height: { get: function() { return t.screen.height; } }\r\n        });\r\n\r\n        // Private\r\n        t._redrawRequested = false;\r\n        t._dirtyFlags = {\r\n            all: false\r\n        };\r\n        // Create bound render func to use in requestAnimationFrame\r\n        t._renderFunc = t._render.bind(t);\r\n\r\n        if (!t.element) throw cl.Lang.get(\"errNoElements\");\r\n        t.screen = new cl.Canvas(t.options.width || t.element.offsetWidth, t.options.height || t.element.offsetHeight);\r\n        t.screen.el.classList.add(\"cl-chart\");\r\n        t.events = new cl.EventManager(t);\r\n\r\n        // Create layers\r\n        t.background = new cl.Background(t, t.options.background || {});\r\n        t.axis = new cl.AxisManager(t);\r\n        t.shapes = new cl.ShapeManager(t, t.options.shapes);\r\n        t.selector = new cl.Selector(t, t.options.selector);\r\n        t.layers = [\r\n            t.background,\r\n            t.axis,\r\n            t.shapes,\r\n            t.selector\r\n        ];\r\n\r\n        // Create default axis\r\n        t.xAxis = t.axis.add(cl.Utils.merge({ type: \"x\" }, t.options.xAxis || {}));\r\n        t.yAxis = t.axis.add(cl.Utils.merge({ type: \"y\" }, t.options.yAxis || {}));\r\n\r\n        // Add screen to DOM\r\n        t.element.appendChild(t.screen.el);\r\n        t.setCursor();\r\n        t.redraw();\r\n    }\r\n\r\n\r\n    /**\r\n     * Chart settings. Same as in constructor\r\n     * @type {Object}\r\n     */\r\n    Chart.prototype.options = null;\r\n\r\n    /**\r\n     * Chart x axis\r\n     * @type {cl.Axis}\r\n     */\r\n    Chart.prototype.xAxis = null;\r\n\r\n    /**\r\n     * Chart y axis\r\n     * @type {cl.Axis}\r\n     */\r\n    Chart.prototype.yAxis = null;\r\n\r\n    /**\r\n     * Chart axis\r\n     * @type {cl.AxisManager}\r\n     */\r\n    Chart.prototype.axis = null;\r\n\r\n    /**\r\n     * Parent DOM element\r\n     * @type {Element}\r\n     */\r\n    Chart.prototype.element = null;\r\n\r\n    /**\r\n     * Main canvas. All things will be rendered here\r\n     * @type {cl.Canvas}\r\n     */\r\n    Chart.prototype.screen = null;\r\n\r\n    /**\r\n     * Chart shapes\r\n     * @type {cl.ShapeManager}\r\n     */\r\n    Chart.prototype.shapes = null;\r\n\r\n    /**\r\n     * Chart selector\r\n     * @type {cl.Selector}\r\n     */\r\n    Chart.prototype.selector = null;\r\n\r\n    /**\r\n     * Chart background\r\n     * @type {cl.Background}\r\n     */\r\n    Chart.prototype.background = null;\r\n\r\n    /**\r\n     * Chart width (readonly). To set size use {@link cl.Chart#resize}\r\n     * @type {number}\r\n     * @readonly\r\n     */\r\n    Chart.prototype.width = 0;\r\n\r\n    /**\r\n     * Chart width (readonly). To set size use {@link cl.Chart#resize}\r\n     * @type {number}\r\n     * @readonly\r\n     */\r\n    Chart.prototype.height = 0;\r\n\r\n    /**\r\n     * Indicates that chart should be redrawn on next frame. Actual redrawing would be fired if this flag is true\r\n     * @type {boolean}\r\n     * @private\r\n     */\r\n    Chart.prototype.isDirty = false;\r\n\r\n\r\n    /**\r\n     * Removes shape by id\r\n     * @param {number} id Shape id to remove\r\n     * @example\r\n     * chart.remove(335);\r\n     */\r\n    Chart.prototype.remove = function(id) {\r\n        this.shapes.remove(id);\r\n    };\r\n\r\n    /**\r\n     * Clears all shapes\r\n     * @example\r\n     * chart.clear();\r\n     */\r\n    Chart.prototype.clear = function() {\r\n        this.shapes.clear();\r\n    };\r\n\r\n    /**\r\n     * Returns shape by id\r\n     * @param {number} id Shape id\r\n     * @returns {cl.Shape} Shape with id\r\n     * @example\r\n     * var shape = chart.get(335);\r\n     */\r\n    Chart.prototype.get = function(id) {\r\n        return this.shapes.get(id);\r\n    };\r\n\r\n    /**\r\n     * Returns new id. Can be used to generate ids for new shapes\r\n     * @returns {number} New id\r\n     * @example\r\n     * var nId = chart.getNewId();\r\n     * chart.add({id: nId, x: 10, y: 10, size: 20}, cl.Bubble);\r\n     */\r\n    Chart.prototype.getNewId = function() {\r\n        return this.shapes.getNewId();\r\n    };\r\n\r\n    /**\r\n     * Renders chart. This method called automatically by requestAnimationFrame\r\n     * @param {number} time Elapsed time\r\n     * @private\r\n     */\r\n    Chart.prototype._render = function(time) {\r\n        var i, l, t = this;\r\n        if (!t.screen) return;\r\n\r\n        // Request shapes redraw if they is animated\r\n        if (t.shapes.isAnimating) {\r\n            t.shapes.apply();\r\n            t.selector.apply();\r\n        }\r\n\r\n        // Update tweens\r\n        cl.Tween.update(time);\r\n\r\n        // Should redraw all objects if axis changed\r\n        if (t._dirtyFlags.axis) {\r\n            t._dirtyFlags.shapes = true;\r\n            t.shapes.updateStatic();\r\n        }\r\n\r\n        // Render layers based on dirty flags\r\n        for (i = 0, l = t.layers.length; i < l; i++) {\r\n            if (t._dirtyFlags.all || t._dirtyFlags[t.layers[i].dirtyFlagName]) t.layers[i]._render();\r\n        }\r\n\r\n        // Draw layers on screen\r\n        t.screen.clear();\r\n\r\n        for (i = 0, l = t.layers.length; i < l; i++) t.screen.draw(t.layers[i].surface);\r\n\r\n        t._clearDirtyFlags();\r\n\r\n        if (t.shapes.isAnimating && !t._redrawRequested) {\r\n            t._redrawRequested = true;\r\n            requestAnimFrame(t._renderFunc);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Changes chart cursor\r\n     * @param {string} [name] Cursor name. If name is not specified, will set options.cursor or \"default\"\r\n     * @example\r\n     * // Set crosshair cursor\r\n     * chart.setCursor(\"crosshair\");\r\n     *\r\n     * // Back to default cursor. Will set cursor specified in options or \"default\"\r\n     * chart.setCursor();\r\n     *\r\n     * // Set custom cursor\r\n     * chart.setCursor(\"url('my-cursor.ico')\");\r\n     *\r\n     * // Do disable cursor change on \"hand\" on shape over\r\n     * chart.selector.options.hover.showHand = false;\r\n     */\r\n    Chart.prototype.setCursor = function(name) {\r\n        var t = this;\r\n        if (!name) t.screen.el.style.cursor = t.options.cursor || \"default\"; else t.screen.el.style.cursor = name;\r\n    };\r\n\r\n    /**\r\n     * Converts X coordinate in screen space to axis space\r\n     * @param {number} v Value\r\n     * @returns {number} Value in axis space\r\n     */\r\n    Chart.prototype.toAxisX = function(v) {\r\n        return this.xAxis.toAxis(v);\r\n    };\r\n\r\n    /**\r\n     * Converts Y coordinate in screen space to axis space\r\n     * @param {number} v Value\r\n     * @returns {number} Value in axis space\r\n     */\r\n    Chart.prototype.toAxisY = function(v) {\r\n        return this.yAxis.toAxis(v);\r\n    };\r\n\r\n    /**\r\n     * Converts Y coordinate in axis space to screen space\r\n     * @param {number} v Value\r\n     * @returns {number} Value in screen space\r\n     */\r\n    Chart.prototype.toScreenY = function(v) {\r\n        return this.yAxis.toScreen(v);\r\n    };\r\n\r\n    /**\r\n     * Converts X coordinate in axis space to screen space\r\n     * @param {number} v Value\r\n     * @returns {number} Value in screen space\r\n     */\r\n    Chart.prototype.toScreenX = function(v) {\r\n        return this.xAxis.toScreen(v);\r\n    };\r\n\r\n    /**\r\n     * Add any shape to chart. If been added exists id's, will update shape properties\r\n     * @param {Array.<Object>|Object} items Array of lines or sigle item. Contains only properties description, not rect class\r\n     * @param {Function} shapeClass Shape class to add. Can be anything inherited from {@link cl.Shape} e.g. {@link cl.Bubble}, {@link cl.Line}, {@link cl.PolyLine}, {@link cl.Centroid}, {@link cl.Rect}\r\n     * @param {boolean} [allowAnimation=false] Play animation if rect properties changed\r\n     * @param {number} [animationDuration={@link cl.ShapeManager.ANIMATION_DURATION}] Animation speed in ms\r\n     * @example\r\n     * chart.add([{id: 1, x: 50, y: 60, size: 30}, {id: 2, x: 90, y: 90, size: 10}, cl.Bubble);\r\n     * chart.add({id: 3, x: 10, y: 20}, cl.Centroid);\r\n     */\r\n    Chart.prototype.add = function(items, shapeClass, allowAnimation, animationDuration) {\r\n        this.shapes.add(items, shapeClass, allowAnimation, animationDuration);\r\n    };\r\n\r\n    /**\r\n     * Add bubbles to chart. If been added exists id's, bubbles will update its properties\r\n     * @param {Array.<Object>|Object} items Array of bubbles or sigle item. Contains only properties description, not class\r\n     * @param {boolean} [allowAnimation=false] Play animation if bubble properties changed\r\n     * @param {number} [animationDuration={@link cl.ShapeManager.ANIMATION_DURATION}] Animation speed in ms\r\n     */\r\n    Chart.prototype.addBubbles = function(items, allowAnimation, animationDuration) {\r\n        this.shapes.add(items, cl.Bubble, allowAnimation, animationDuration);\r\n    };\r\n\r\n    /**\r\n     * Add rects to chart. If been added exists id's, rects will update its properties\r\n     * @param {Array.<Object>|Object} items Array of rects or sigle item. Contains only properties description, not class\r\n     * @param {boolean} [allowAnimation=false] Play animation if rect properties changed\r\n     * @param {number} [animationDuration={@link cl.ShapeManager.ANIMATION_DURATION}] Animation speed in ms\r\n     */\r\n    Chart.prototype.addRects = function(items, allowAnimation, animationDuration) {\r\n        this.shapes.add(items, cl.Rect, allowAnimation, animationDuration);\r\n    };\r\n\r\n    /**\r\n     * Add lines to chart. If been added exists id's, lines will update its properties\r\n     * @param {Array.<Object>|Object} items Array of lines or sigle item. Contains only properties description, not class\r\n     * @param {boolean} [allowAnimation=false] Play animation if line properties changed\r\n     * @param {number} [animationDuration={@link cl.ShapeManager.ANIMATION_DURATION}] Animation speed in ms\r\n     */\r\n    Chart.prototype.addLines = function(items, allowAnimation, animationDuration) {\r\n        this.shapes.add(items, cl.Line, allowAnimation, animationDuration);\r\n    };\r\n\r\n    /**\r\n     * Add polylines to chart. If been added exists id's, polylines will update its properties\r\n     * @param {Array.<Object>|Object} items Array of polylines or sigle item. Contains only properties description, not class\r\n     * @param {boolean} [allowAnimation=false] Play animation if polyline properties changed\r\n     * @param {number} [animationDuration={@link cl.ShapeManager.ANIMATION_DURATION}] Animation speed in ms\r\n     */\r\n    Chart.prototype.addPolyLines = function(items, allowAnimation, animationDuration) {\r\n        this.shapes.add(items, cl.PolyLine, allowAnimation, animationDuration);\r\n    };\r\n\r\n    /**\r\n     * Add polygons to chart. If been added exists id's, polygon will update its properties\r\n     * @param {Array.<Object>|Object} items Array of polygons or sigle item. Contains only properties description, not class\r\n     * @param {boolean} [allowAnimation=false] Play animation if polygons properties changed\r\n     * @param {number} [animationDuration={@link cl.ShapeManager.ANIMATION_DURATION}] Animation speed in ms\r\n     */\r\n    Chart.prototype.addPolys = function(items, allowAnimation, animationDuration) {\r\n        this.shapes.add(items, cl.Poly, allowAnimation, animationDuration);\r\n    };\r\n\r\n    /**\r\n     * Add centroids to chart. If been added exists id's, centroids will update its properties\r\n     * @param {Array.<Object>|Object} items Array of centroids or sigle item. Contains only properties description, not class\r\n     * @param {boolean} [allowAnimation=false] Play animation if centroid properties changed\r\n     * @param {number} [animationDuration={@link cl.ShapeManager.ANIMATION_DURATION}] Animation speed in ms\r\n     */\r\n    Chart.prototype.addCentroids = function(items, allowAnimation, animationDuration) {\r\n        this.shapes.add(items, cl.Centroid, allowAnimation, animationDuration);\r\n    };\r\n\r\n    /**\r\n     * Shows preloader on chart using \"options.preloader\" element\r\n     */\r\n    Chart.prototype.showPreloader = function() {\r\n        var t = this;\r\n        if (!t.options.element || !t.options.element.parentNode) return;\r\n        var p = t.preloader;\r\n        var parent = t.options.element.parentNode;\r\n        // Remove hidden class\r\n        p.classList.remove(\"hidden\");\r\n        p.classList.remove(\"cl-preloader-hidden\");\r\n        // Add preloader class\r\n        p.classList.add(\"cl-preloader\");\r\n        var style = \"\";\r\n        // Set position center\r\n        var x = Math.floor(t.element.offsetLeft + t.width / 2 - p.offsetWidth / 2);\r\n        var y = Math.floor(t.element.offsetTop + t.height / 2 - p.offsetHeight / 2);\r\n        style = \"left: \" + x + \"px; top: \" + y + \"px\";\r\n        style += \";\" + p.getAttribute(\"style\");\r\n        p.setAttribute(\"style\", style);\r\n        parent.appendChild(p);\r\n    };\r\n\r\n    /**\r\n     * Removes preloader from chart\r\n     */\r\n    Chart.prototype.hidePreloader = function() {\r\n        var t = this;\r\n        if (!t.options.element) return;\r\n        var p = t.options.element.parentNode;\r\n        t.options.preloader.classList.add(\"cl-preloader-hidden\");\r\n    };\r\n\r\n    /**\r\n     * Returns chart background\r\n     * @returns {cl.Background}\r\n     */\r\n    Chart.prototype.getBackground = function() {\r\n        return this.background;\r\n    };\r\n\r\n    /**\r\n     * Creates request for chart refresh. Can be called multiply times, but actual refresh would be called once by requestAnimationFrame\r\n     * This is async method! Actual redraw will be called later\r\n     * @example\r\n     * chart.redraw();\r\n     */\r\n    Chart.prototype.redraw = function() {\r\n        var t = this;\r\n        if (t._redrawRequested) return;\r\n        requestAnimFrame(t._renderFunc);\r\n        t._redrawRequested = true;\r\n    };\r\n\r\n    /**\r\n     * Sets chart background image\r\n     * @param {string} url Image url or base64 string\r\n     * @example\r\n     * chart.setBackground(\"http://mysite.com/image.png\");\r\n     */\r\n    Chart.prototype.setBackground = function(url) {\r\n        this.background.setImage(url);\r\n    };\r\n\r\n    /**\r\n     * Sets dirty flag\r\n     * @param {string} name Dirty flag name. Can be \"all\" or layer name. See \"dirtyFlagName\" property in {@link cl.Layer}\r\n     * @private\r\n     */\r\n    Chart.prototype._setDirtyFlag = function(name) {\r\n        this._dirtyFlags[name] = true;\r\n    };\r\n\r\n    /**\r\n     * Returns true if chart is dirty (need to refresh)\r\n     * @private\r\n     * @returns {boolean} Is dirty or not\r\n     */\r\n    Chart.prototype._getIsDirty = function() {\r\n        var t = this;\r\n        if (t._dirtyFlags.all) return true;\r\n        for (var k in t._dirtyFlags) if (t._dirtyFlags.hasOwnProperty(k)) if (t._dirtyFlags[k]) return true;\r\n        return false;\r\n    };\r\n\r\n    /**\r\n     * Clear all dirty flags\r\n     * @private\r\n     */\r\n    Chart.prototype._clearDirtyFlags = function() {\r\n        var t = this;\r\n        t._redrawRequested = false;\r\n        t._dirtyFlags.all = false;\r\n        for (var k in t._dirtyFlags) if (t._dirtyFlags.hasOwnProperty(k)) t._dirtyFlags[k] = false;\r\n    };\r\n\r\n    /**\r\n     * @callback eventCallback\r\n     * @param {cl.Event} e\r\n     */\r\n\r\n    /**\r\n     * Adds event listener\r\n     * @param {string} event Event name. See {@link cl.Event} members\r\n     * @param {eventCallback} callback Event callback\r\n     * @example\r\n     * chart.addEventListener(cl.Event.shapeOver, function(e) { console.log(e.target); });\r\n     * // equals to\r\n     * chart.addEventListener(\"shapeover\", function(e) { console.log(e.target); });\r\n     */\r\n    Chart.prototype.addEventListener = function(event, callback) {\r\n        this.events.addEventListener(event, callback);\r\n    };\r\n\r\n    /**\r\n     * Removes event listener\r\n     * @param {string} event Event name. See {@link cl.Event} members\r\n     * @param {eventCallback} callback Event callback\r\n     */\r\n    Chart.prototype.removeEventListener = function(event, callback) {\r\n        this.events.removeEventListener(event, callback);\r\n    };\r\n\r\n    /**\r\n     * Resizes chart\r\n     * @param {number} width New width\r\n     * @param {number} height New height\r\n     * @example\r\n     * chart.resize(800, 600);\r\n     */\r\n    Chart.prototype.resize = function(width, height) {\r\n        var i, l, t = this;\r\n        // Resize layers\r\n        for (i = 0, l = t.layers.length; i < l; i++) t.layers[i].resize(width, height);\r\n\r\n        t.screen.resize(width, height);\r\n        t._dirtyFlags.all = true;\r\n        t.redraw();\r\n    };\r\n\r\n    /**\r\n     * Destroys chart\r\n     */\r\n    Chart.prototype.destroy = function() {\r\n        var i, l, t = this;\r\n\r\n        // Destroy all layers\r\n        for (i = 0, l = t.layers.length; i < l; i++) t.layers[i].destroy();\r\n\r\n        t.screen.destroy();\r\n        t.layers = [];\r\n        t.screen = null;\r\n        t.background = null;\r\n        t.element = null;\r\n    };\r\n\r\n    namespace.Chart = Chart;\r\n\r\n})(cl);\r\n"],"sourceRoot":"/source/"}